{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","$","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","text","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","textContent","appendChild","body","String","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","countNumbers","values","num","count","isNumber","getField","field","row","getter","evalOptions","context","state","dryRun","defaults","depth","needsEval","property","propValue","excluded","MAX_EXPAND_DEPTH","inArray","hasOwnProperty","isFunction","valueOrDefault","isObject","categoriesCount","series","seriesCount","categories","Math","max","data","anyHasZIndex","elements","idx","defined","zIndex","hasGradientOverlay","overlay","gradient","areNumbers","hasValue","wrapData","seriesItem","isArray","paneID","ID","axisGroupBox","axes","axisBox","contentBox","wrap","clone","Box","paneAnchor","pane","anchor","isTransparent","color","setValue","fieldName","target","parentObj","indexOf","split","shift","filterSeriesByType","types","currentSeries","result","seriesTypes","concat","type","equalsIgnoreCase","a","b","toLowerCase","isDateAxis","axisOptions","sampleCategory","dateCategory","Date","DATE","appendIfNotNull","array","element","singleItemOrArray","getDateField","intlService","parseDate","groupSeries","axis","axisIx","grep","s","categoryAxis","preventDefault","_defaultPrevented","acceptKey","e","mouseKey","event","accept","ctrlKey","shiftKey","altKey","toChartAxisRanges","axisRanges","axisRange","ranges","name","min","range","createDiv","className","closestHandle","hasClasses","stopPropagation","tooltipAlignment","angle","horizontal","vertical","radians","dataviz","rad","sine","round","sin","DEFAULT_PRECISION","cosine","cos","abs","RAD_60","CENTER","RIGHT","LEFT","RAD_30","BOTTOM","TOP","segmentVisible","fields","index","pointVisibility","visible","seriesTotal","pointData","sum","SeriesBinder","bindPoint","valueFields","isString","parseFloat","intersection","b1","b2","ua","uat","x","y","ub","Point","xComparer","resolveAxisAliases","alias","aliases","AXIS_NAMES","pointByCategoryName","points","category","applyAxisDefaults","themeOptions","mapAxisOptions","axisColor","axisDefaults","themeAxisDefaults","axisName","line","labels","title","applySeriesDefaults","seriesType","baseOptions","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","tooltip","_defaults","bar","column","rangeColumn","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","last","transpose","rows","rowIx","colCount","colIx","rowCount","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","datavizConstants","MAX_VALUE","MIN_VALUE","VALUE","WHITE","CIRCLE","Y","X","BLACK","ARC","ChartElement","alignPathToPixel","setDefaultOptions","eventElement","services","TemplateService","TextBox","ShapeElement","getSpacing","limitValue","append","styleValue","CategoryAxis","BoxElement","DateCategoryAxis","elementStyles","bindEvents","unbindEvents","support","drawing","Path","Animation","AnimationFactory","Group","Color","geometry","GeometryPoint","transform","ChartAxis","ChartPlotArea","Aggregates","STD_ERR","STD_DEV","percentRegex","standardDeviationRegex","ErrorRangeCalculator","browser","INITIAL_ANIMATION_DURATION","FADEIN","GLASS","BORDER_BRIGHTNESS","TOOLTIP_OFFSET","START_SCALE","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","LINE_MARKER_SIZE","ZERO","INTERPOLATE","GAP","SMOOTH","STEP","AREA","BAR","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","COLUMN","DONUT","FUNNEL","HORIZONTAL_WATERFALL","LINE","OHLC","PIE","POLAR_AREA","POLAR_LINE","POLAR_SCATTER","RADAR_AREA","RADAR_COLUMN","RADAR_LINE","RANGE_BAR","RANGE_COLUMN","SCATTER","SCATTER_LINE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","WATERFALL","EQUALLY_SPACED_SERIES","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","SERIES_CLICK","SERIES_HOVER","PLOT_AREA_CLICK","PLOT_AREA_HOVER","DRAG","DRAG_END","DRAG_START","ZOOM_START","ZOOM","ZOOM_END","SELECT_START","SELECT","SELECT_END","RENDER","SHOW_TOOLTIP","HIDE_TOOLTIP","LOGARITHMIC","CATEGORY","INSIDE_END","INSIDE_BASE","OUTSIDE_END","MOUSEWHEEL","MOUSEWHEEL_DELAY","constants","DEFAULT_ERROR_BAR_WIDTH","ErrorBarBase","CategoricalErrorBar","CategoricalChart","PointEventsMixin","NoteMixin","ABOVE","BELOW","LinePoint","LineSegment","StepLineSegment","SplineSegment","LineChartMixin","ClipAnimation","ClipAnimationMixin","LineChart","AreaSegmentMixin","AreaSegment","StepAreaSegment","SplineAreaSegment","AreaChart","AxisGroupRangeTracker","BarLabel","BAR_ALIGN_MIN_WIDTH","Bar","ClusterLayout","StackWrap","BarChart","Candlestick","CandlestickChart","BoxPlot","VerticalBoxPlot","BoxPlotChart","ScatterErrorBar","ScatterChart","Bubble","BubbleChart","Target","Bullet","BulletChart","BaseTooltip","CrosshairTooltip","Crosshair","ChartContainer","Pane","PlotAreaBase","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","RangeBar","RangeBarChart","OHLCPoint","OHLCChart","WaterfallSegment","WaterfallChart","CategoricalPlotArea","Highlight","Pannable","ZoomSelection","MousewheelZoom","LegendLayout","LegendItem","HORIZONTAL","POINTER","CUSTOM","Legend","PlotAreaFactory","ZOOM_ACCELERATION","SELECTOR_HEIGHT_ADJUST","Selection","Tooltip","SharedTooltip","BarChartAnimation","BubbleAnimation","FadeInAnimation","PieAnimation","ScatterLineChart","XYPlotArea","PieSegment","PieChartMixin","PIE_SECTOR_ANIM_DELAY","PieChart","PiePlotArea","DonutSegment","DONUT_SECTOR_ANIM_DELAY","DonutChart","DonutPlotArea","DEFAULT_PADDING","PolarPlotAreaBase","PolarScatterChart","PolarLineChart","SplinePolarAreaSegment","PolarAreaSegment","PolarAreaChart","PolarPlotArea","RadarLineChart","SplineRadarAreaSegment","RadarAreaSegment","RadarAreaChart","RadarSegment","RadarClusterLayout","RadarStackLayout","RadarBarChart","RadarPlotArea","FunnelSegment","FunnelChart","FunnelPlotArea","COLOR","FIRST","FROM","MAX","MIN","NOTE_TEXT","SUMMARY_FIELD","TO","MOUSEMOVE","CONTEXTMENU","MOUSEMOVE_DELAY","Chart","_axis","point","getCategory","getValue","slot","from","to","limit","valueRange","plotArea","_plotArea","visual","backgroundVisual","_bgVisual","sumOrNull","avg","first","_valueFields","_otherFields","_nullValue","_undefinedValue","register","otherFields","this$1","_makeValue","undefined","canonicalFields","pointIx","item","fieldData","srcValueFields","srcPointFields","Array","slice","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","RegExp","errorValue","initGlobalRanges","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","low","high","globalRange","getStandardError","binder","OBJECT","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","total","squareDifferenceSum","pow","msie","isVertical","chart","fn","call","reflow","targetBox","linePoints","endCaps","getAxis","valueBox","getSlot","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","y1","y2","x1","x2","boxSize","floor","createVisual","rect","toRect","sender","getSender","createDefaultVisual","defaultVisual","ref","lineOptions","stroke","dashType","moveTo","lineTo","animation","delay","seriesValueAxis","chartService","seriesCategoryAxis","valueAxisRanges","categoryPoints","seriesPoints","seriesOptions","_evalSeries","render","traverseDataPoints","addValue","bind","pointOptions","seriesIx","pointType","prototype","invertAxes","plotValue","categoryIx","otherValues","categorySum","other","stack","otherStack","isStacked100","group","plotRange","startValue","positive","prevValue","isStackedBar","otherValue","valueAxis","axisCrossingValue","isStacked","STRING","categoryAxisCrossingValue","stackLimits","stackName","pIx","isFinite","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","sparseArrayLimits","addErrorBar","errorBars","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","errorBar","updateRange","createPoint","owner","dataItem","noteText","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","valueSlot","pointSlot","categorySlot","clip","aboveAxis","stackValue","percentage","reflowPoint","reflowCategories","reverse","crossingValues","axisCrossingValues","axisIndex","slotX","slotY","callback","seriesIx$1","currentCategory","seriesIx$2","_outOfRangeCallback","_bindPoint","outOfRangePoint","bindCache","_bindCache","formatPointValue","format","auto","click","trigger","eventArgs","hover","runningTotal","originalEvent","createNote","notes","label","note","Note","tooltipTracking","labelText","labelTemplate","markers","_rendered","createMarker","template","compile","formatValue","align","vAlign","margin","left","right","markerBorder","background","border","brightness","toHex","rotation","opacity","markerBox","_childBox","childBox","noteTargetBox","reflowLabel","position","alignTo","createHighlight","highlight","defaultColor","shadow","getElement","highlightVisual","highlightVisualArgs","halfSize","paddingBox","Rect","tooltipAnchor","horizontalAlign","verticalAlign","clipBox","showTooltip","overlaps","overlapsBox","padding","visualPoints","fromPoints","closed","close","aliasFor","coords","parent","getNearestPoint","calculateStepPoints","prevPoint","prevMarkerBoxCenter","markerBoxCenter","isInterpolate","seriesMissingValues","dir","revDir","justified","curveProcessor","segments","curve","CurveProcessor","process","apply","renderSegments","lastSegment","sortedPoints","pointCount","_segments","sortPoints","createSegment","_addSegment","children","unshift","segment","missingValues","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","setup","_setEnd","step","pos","interpolateValue","topRight","bottomRight","suspend","setX","resume","duration","createAnimation","clipPath","root","getRoot","transitions","fromRect","_setChildrenAnimation","animationPoints","firstPoint","lastPoint","valueAxisLineBox","lineBox","categoryAxisLineBox","stackPoints","_linePoints","end","createArea","createLine","lineCap","fill","prevSegment","strokeSegments","_strokeSegments","createFill","createStroke","prevStrokeSegments","prevAnchor","stackSegments","firstAnchor","fillSegments","Segment","controlOut","controlIn","closeFill","fillPath","_gapStackPoints","stackPoint","_stackPoints","endIdx","pointOffset","currentSeriesIx","gapStackPoint","startIdx","_outOfRangeMinPoint","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","update","chartAxisRanges","chartRange","reset","query","content","textBox","noclip","textOptions","labelBox","top","bottom","alignToClipBox","start","parentBox","createLabel","customVisual","rectVisual","createRect","path","strokeOpacity","getBorderColor","lineJoin","createGradientOverlay","baseColor","_brightness","borderColor","gap","spacing","slots","slotSize","currentChild","positionAxis","childrenCount","snapTo","clusterType","stackType","cluster","stackWrap","labelOptions","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","zeroSlot","stackAxis","childrenLength","_setAnimationOptions","pointVisual","origin","mid","ocSlot","open","lhSlot","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","container","set","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","whiskerSlot","boxSlot","medianSlot","meanSlot","q1","q3","reflowBoxSlot","lower","upper","reflowWhiskerSlot","median","mean","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","outlierValue","markersBorder","shape","outliers","outerFence","extremes","reflowOutliers","move","whiskers","CROSS","filterOutliers","items","seriesAxes","_initFields","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","intl","xAxisName","xAxis","yAxisName","yAxis","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","ref$1","radius","highlightGroup","Circle","createGradient","stops","offset","_maxSize","negativeValues","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","PI","targetValueSlot","targetSlotX","targetSlotY","targetSlot","bodyVisual","create","bulletOptions","isNaN","getStyle","pointColor","backgroundColor","font","borderWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","show","tooltipOptions","percBrightness","notify","hide","destroy","crosshair","formatService","initAxisName","showAt","stickyMode","formattedValue","dateFormats","baseUnit","getAnchor","ref_options","bbox","bottomLeft","translate","topLeft","moveLine","lineEnd","getBox","dim","lineStart","pointCategoryIndex","axisLineBox","currentAxis","shouldClip","_clipBox","chartsBox","clipRect","unclipLabels","stackRoot","j","charts","isStackRoot","id","createTitle","chartContainer","titleOptions","Title","buildTitle","appendAxis","appendChart","empty","i$1","removeAxis","removeChart","pop","visualStyle","renderComplete","createGridLines","clipRoot","gridLines","altAxis","allAxes","vGridLines","hGridLines","refresh","clear","renderVisual","axisValueField","length$1","idx$1","axis$1","lineBox$1","shrinkToFit","initFields","initSeries","legend","crosshairs","createPanes","createCrosshairs","setTitle","currentPane","panes","paneOptions","panesLength","paneIndex","currentCrosshair","removeCrosshairs","splice","hideCrosshairs","findPane","matchingPane","findPointPane","containsPoint","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","itemLabelOptions","markerColor","inactiveItems","inactiveItemsLabels","visibleInLegend","active","groupAxes","paneIx","paneAxes","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","reflowAxes","reflowCharts","redraw","panesArray","crossingAxes","valuesToAdd","defaultValue","alignAxisTo","targetAxis","crossingValue","targetCrossingValue","slotEdge","targetEdge","alignAxes","paneId","anchorCrossings","pane$1","paneId$1","anchor$1","anchorCrossings$1","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","COORD_PRECISION","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","shrinked","overflowY","fitAxes","paneBox","offsetY","currentAxis$1","offsetX","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","currentPane$1","i$2","currentPane$2","remainingHeight","remainingPanes","autoHeightPanes","parseInt","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","backgroundContainsPoint","bg","MultiPath","appendVisual","pointsByCategoryIndex","categoryIndex","pointsBySeriesIndex","seriesIndex","filterPoints","pointsBySeriesName","findPoint","paneByPoint","_dispatchEvent","defaultAggregates","fieldAggregate","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","aggregatePoints","srcPoints","srcValues","_bindPoints","firstDataItem","dataItems","_bindField","aggregates","fromOptions","toOptions","labelFrom","_createLabel","labelTo","plotLimits","oPoints","cPoints","lhPoints","oSlot","cSlot","fromBox","toBox","createSegments","summary","totalCategories","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","paneSeries","visibleSeries","groups","groupIx","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","dateAxis","srcSeries","processedSeries","categoryField","aggregateSeries","filterSeries","minCategory","srcCategories","totalRangeIndices","outOfRangePoints","ceil","_outOfRangeMaxPoint","_seriesMax","aggregatorSeries","srcData","outOfRangeMinIdx","outOfRangeMaxIdx","getFn","outOfRangeMinCategory","outOfRangeMaxCategory","aggregator","categoriesToAdd","defaultPaneName","paneName","stackableChartOptions","firstSeries","axisSeries","categoryAxes","unique","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","definitions","isJustified","defaultAxisRange","axisType","tracker","defaultRange","roundToMajorUnit","LogarithmicAxis","NumericAxis","eventType","_eventCoordinates","pointPane","updateAxisOptions","axesOptions","_points","arrayPoints","toggleHighlight","hasHighlight","togglePointHighlight","toggleHandler","toggle","isHighlighted","_active","_panAxes","pan","delta","lock","updatedAxes","limitRange","marqueeColor","marquee","_marquee","removeElement","setStyles","styles","zoomPane","_zoomPane","_elementOffset","_zoomPaneClipBox","pageX","pageY","chartElement","elementOffset","_selectionPosition","elementOffset$$1","selectionPosition","_updateAxisRanges","zoom","pointsRange","startLocation","location","updateRanges","zoomRange","legendItem","Layout","lineSpacing","orientation","clippedBBox","rectToBox","addVisual","createContainer","FloatElement","markerOptions","cursor","eventSink","_itemOverlay","widget","args","_legendItemHover","pointIndex","leave","_unsetActivePoint","renderChildren","createItems","userAlign","getService","innerElement","hasItems","legendBox","containerCustomReflow","containerReflow","alignTarget","containerBox","_registry","registry","match","observer","getValueAxis","_dateAxis","initOptions","createElements","_index","selection","leftHandle","rightHandle","selectionStyles","leftHandleHeight","rightHandleHeight","wrapper","leftMask","rightMask","borderLeftWidth","borderRightWidth","_mousewheelHandler","mousewheel","_mousewheel","obj","_domEvents","DomEventsBuilder","_start","_move","_end","tap","_tap","press","_press","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","clearTimeout","_mwTimeout","_state","_rangeEventArgs","_value","moveTarget","handle","addClass","oldRange","span","scale","removeClass","rightClick","which","mousewheelDelta","expand","setTimeout","p0","_toModelCoordinates","touches","p1","_slot","rightMaskWidth","distance","leftMaskWidth","fromValue","toValue","zDir","_current","tooltipPoints","_slotAnchor","_defaultAnchor","shared","categoryText","categoryFormat","centerPoint","slotCenter","fromScale","abort","scaleX","scaleY","easing","fadeTo","missingValue","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","DateValueAxis","axisPane$1","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","sector","brightnessValue","themeLabels","theme","animationDelay","labelHeight","labelWidth","lp","labelsOptions","labelsDistance","middle","startAngle","innerRadius","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","ShapeBuilder","createRing","midAndle","midPoint","DEFAULT_FONT","createLegendItem","pointVisible","legendOptions","legendItems","colorsCount","anglePerValue","currentAngle","explode","seriesColors","Ring","evalSegmentOptions","segmentOptions","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","boxCenter","leftSideLabels","rightSideLabels","seriesConfig","seriesConfigs","setRadius","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","lr","firstBox","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelsCount","labelDistance","boxY","hAlignLabel","connectorsColor","connectorLine","sr","crossing","connectors","_connectorLines","pointInCircle","reverseValue","second","originalX","direction","sector_center","cx","cy","t","createPieChart","pieChart","totalSize","seriesWithoutSize","holeSize","currentSize","currentSeries$1","createDonutChart","donutChart","createPolarAxis","createValueAxis","polarAxis","axisDefaultRange","valueAxisOptions","RadarLogarithmicAxis","RadarNumericAxis","heightDiff","valueAxisBox","valueRadius","onCircle","_polarAxisCenter","_hasMissingValuesGap","PolarAxis","majorGridLines","minorGridLines","scatterChart","xValue","yValue","slotSector","slotAngle","childSector","RadarCategoryAxis","_hasBarCharts","_isStacked100","chartOptions","chartBox","createPath","labelPadding","dynamicSlopeReflow","totalHeight","lastUpperSide","previousOffset","previousHeight","nextSegment","nextPercentage","firstSegment","maxSegment","dynamicHeight","segmentSpacing","constantSlopeReflow","decreasingWidth","neckRatio","topMostWidth","finalNarrow","dynamicSlope","createFunnelChart","funnelChart","errorLow","errorHigh","userOptions","observers","addObserver","ChartService","_initElement","_originalOptions","_theme","_initTheme","_initSurface","_initHandlers","bindCategories","FontLoader","preloadFonts","_destroyed","_redraw","_attachEvents","_setElementClass","firstChild","seriesCopies","applyDefaults","applySeriesColors","getSize","resize","force","_resize","_noTransitionsRedraw","_model","findAxisByName","filter","seriesName","categoryName","togglePointsHighlight","_highlight","_sharedTooltip","_tooltip","hideTooltip","surface","_surfaceWrap","chartArea","elementSize","renderAs","Surface","model","_getModel","_destroyView","traverse","draw","play","_createTooltip","_setupSelection","_createPannable","_createZoomSelection","_createMousewheelZoom","_navState","_cancelDomEvents","exportVisual","originalChartArea","pannable","_pannable","zoomable","_zoomSelection","_mousewheelZoom","_createSharedTooltip","seriesColor","colors","_createPlotArea","RootElement","_modelOptions","DEFAULT_WIDTH","DEFAULT_HEIGHT","skipSeries","_hasSelection","_selections","selections","select","addDuration","weekStartDay","_selectStart","_select","_selectEnd","_clickHandler","_click","_surfaceMouseenterHandler","_mouseover","_surfaceMouseleaveHandler","_mouseout","_mousemove","throttle","removeObserver","requiresHandlers","eventNames","isDefaultPrevented","_toDocumentCoordinates","obj$1","_shouldAttachMouseMove","domEvents","cancel","_stopDragEvent","_gestureDistance","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","mousewheelZoom","_drawingChartElement","_startNavigation","_suppressHover","ranges$1","translateRange","_endNavigation","prevented","totalDelta","scaleRange","chartEvent","_getChartElement","eventTarget","closest","coordinates","eventCoordinates","_elementPadding","_padding","clientX","clientY","drawingElement","_activePoint","_propagateClick","_startHover","handlingTap","_mouseMoveTrackHandler","_mouseMoveTracking","seriesPoint","_trackCrosshairs","_trackSharedTooltip","pointArgs","hoverArgs","_tooltipCategoryIx","hideElements","_deferRedraw","_clearRedrawTimeout","_redrawTimeout","clearInterval","autoBind","bindCategoryAxisFromSeries","onAxis","dataLength","dataIx","dataRow","uniqueCategories","_isBindable","transitionsState","updateMouseMoveHandler","applyOptions","setOptions","createProxyMember","instance","_instance","arguments","nameTemplate","seriesClone","legacyTemplate","groupNameTemplate","logToConsole","_slotCount","_groupIx","_groupValue","ChartInstanceObserver","proxyMembers","SeriesVisibilityState","geom","ChartPane","ChartSeries","NS","outerWidth","_outerWidth","outerHeight","_outerHeight","KendoChart","Widget","ui","DataSource","InstanceObserver","proxy","MOUSELEAVE_NS","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","CHANGE","DATABOUND","LEAVE","Observable","TOOLTIP_ANIMATION_DURATION","TOOLTIP_SHOW_DELAY","TOOLTIP_INVERSE","SHARED_TOOLTIP_CLASS","events","UserEvents","global","multiTouch","fastTap","handlerMap","legendItemClick","dataSource","_seriesVisibility","_initDataSource","_bindSeries","_bindCategories","dimensions","_setEvents","_getThemeOptions","_sourceSeries","setDataSource","_hasDataSource","_onDataChanged","unbind","_dataChangeHandler","_hasData","fetch","off","_destroyCrosshairTooltips","findPaneByName","findPaneByIndex","findSeries","findSeriesByName","_createSeries","findSeriesByIndex","_seriesOptions","on","_mouseleave","relatedTarget","themes","themeName","autoTheme","_initChart","_createChart","_initTooltip","tooltips","_crosshairTooltips","_getCrosshairTooltip","_showTooltip","_hideTooltip","_onRender","_copyMembers","names","_events","_tooltipleave","_onLegendItemClick","_legendItemClick","save","_bindData","groupedSeries","view","grouped","seriesVisibility","applyByGroup","applyByIndex","seriesData","categoriesData","_bindCategoryAxis","ExportMixin","PDFMixin","plugin","action","mobileScrollerSelector","useWithBlock","paramName","attr","_mobileScroller","_clearShowTimeout","remove","sharedTemplate","_offset","css","_ensureElement","stop","animate","showTimeout","_measure","zoomLevel","viewport","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","movable","_fit","toggleClass","_sharedContent","_pointContent","html","_hideElement","nameColumn","colorMarker","colspan","appendTo","contains","fadeOut","always","tooltipTemplate","xLow","xHigh","yLow","yHigh","viewPortSize","output","_chart","_pane","chartsVisual","_options","_filterPoints","_clearFields","toggleVisibility","hasFilter","_filterData"],"mappings":"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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                measureBox.textContent = text;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (String(text).length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/kendo-chart', [\n        'kendo.core',\n        'kendo.color',\n        'kendo.drawing',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var dataviz = kendo.dataviz;\n        var Class = dataviz.Class;\n        var isNumber = dataviz.isNumber;\n        var datavizConstants = dataviz.constants;\n        var MAX_VALUE = datavizConstants.MAX_VALUE;\n        var MIN_VALUE = datavizConstants.MIN_VALUE;\n        var VALUE = datavizConstants.VALUE;\n        var CENTER = datavizConstants.CENTER;\n        var TOP = datavizConstants.TOP;\n        var BOTTOM = datavizConstants.BOTTOM;\n        var LEFT = datavizConstants.LEFT;\n        var WHITE = datavizConstants.WHITE;\n        var CIRCLE = datavizConstants.CIRCLE;\n        var Y = datavizConstants.Y;\n        var X = datavizConstants.X;\n        var RIGHT = datavizConstants.RIGHT;\n        var BLACK = datavizConstants.BLACK;\n        var DATE = datavizConstants.DATE;\n        var DEFAULT_PRECISION = datavizConstants.DEFAULT_PRECISION;\n        var ARC = datavizConstants.ARC;\n        var defined = dataviz.defined;\n        var getter = dataviz.getter;\n        var isArray = dataviz.isArray;\n        var ChartElement = dataviz.ChartElement;\n        var Point = dataviz.Point;\n        var Box = dataviz.Box;\n        var alignPathToPixel = dataviz.alignPathToPixel;\n        var setDefaultOptions = dataviz.setDefaultOptions;\n        var inArray = dataviz.inArray;\n        var isFunction = dataviz.isFunction;\n        var valueOrDefault = dataviz.valueOrDefault;\n        var isObject = dataviz.isObject;\n        var deepExtend = dataviz.deepExtend;\n        var eventElement = dataviz.eventElement;\n        var services = dataviz.services;\n        var TemplateService = services.TemplateService;\n        var TextBox = dataviz.TextBox;\n        var ShapeElement = dataviz.ShapeElement;\n        var getSpacing = dataviz.getSpacing;\n        var limitValue = dataviz.limitValue;\n        var last = dataviz.last;\n        var append = dataviz.append;\n        var isString = dataviz.isString;\n        var parseDate = dataviz.parseDate;\n        var styleValue = dataviz.styleValue;\n        var CategoryAxis = dataviz.CategoryAxis;\n        var BoxElement = dataviz.BoxElement;\n        var round = dataviz.round;\n        var grep = dataviz.grep;\n        var DateCategoryAxis = dataviz.DateCategoryAxis;\n        var elementStyles = dataviz.elementStyles;\n        var hasClasses = dataviz.hasClasses;\n        var bindEvents = dataviz.bindEvents;\n        var unbindEvents = dataviz.unbindEvents;\n        var support = kendo.support;\n        var drawing = kendo.drawing;\n        var Path = drawing.Path;\n        var Animation = drawing.Animation;\n        var AnimationFactory = drawing.AnimationFactory;\n        var Group = drawing.Group;\n        var Color = kendo.Color;\n        var geometry = kendo.geometry;\n        var GeometryPoint = geometry.Point;\n        var transform = geometry.transform;\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n                this.options = axis.options;\n            },\n            value: function (point) {\n                var axis = this._axis;\n                var value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n                return value;\n            },\n            slot: function (from, to, limit) {\n                if (limit === void 0) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            },\n            valueRange: function () {\n                return this._axis.valueRange();\n            }\n        });\n        var ChartPlotArea = Class.extend({\n            init: function (plotArea) {\n                this._plotArea = plotArea;\n                this.visual = plotArea.visual;\n                this.backgroundVisual = plotArea._bgVisual;\n            }\n        });\n        function countNumbers(values) {\n            var length = values.length;\n            var count = 0;\n            for (var i = 0; i < length; i++) {\n                var num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        var Aggregates = {\n            min: function (values) {\n                var length = values.length;\n                var min = MAX_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        min = Math.min(min, value);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var length = values.length;\n                var max = MIN_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        max = Math.max(max, value);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length;\n                var sum = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        sum += value;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length;\n                var count = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var count = countNumbers(values);\n                var result = values[0];\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        return value;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var this$1 = this;\n                if (valueFields === void 0) {\n                    valueFields = [VALUE];\n                }\n                if (otherFields === void 0) {\n                    otherFields = {};\n                }\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    var type = seriesTypes[i];\n                    this$1._valueFields[type] = valueFields;\n                    this$1._otherFields[type] = otherFields;\n                    this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n                    this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var data = series.data;\n                var pointData = defined(item) ? item : data[pointIx];\n                var result = { valueFields: { value: pointData } };\n                var valueFields = this.valueFields(series);\n                var otherFields = this._otherFields[series.type];\n                var fields, value;\n                if (pointData === null) {\n                    value = this._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = this._undefinedValue[series.type];\n                } else if (Array.isArray(pointData)) {\n                    var fieldData = pointData.slice(valueFields.length);\n                    value = this._bindFromArray(pointData, valueFields);\n                    fields = this._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === 'object') {\n                    var srcValueFields = this.sourceFields(series, valueFields);\n                    var srcPointFields = this.sourceFields(series, otherFields);\n                    value = this._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {};\n                var length = fields.length;\n                for (var i = 0; i < length; i++) {\n                    var fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {};\n                if (fields) {\n                    var length = Math.min(fields.length, array.length);\n                    for (var i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                if (srcFields === void 0) {\n                    srcFields = fields;\n                }\n                var value = {};\n                if (fields) {\n                    var length = fields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = fields[i];\n                        var srcFieldName = srcFields[i];\n                        value[fieldName] = getField(srcFieldName, object);\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var sourceFields = [];\n                if (canonicalFields) {\n                    var length = canonicalFields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = canonicalFields[i];\n                        var sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] || fieldName);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var STD_ERR = 'stderr';\n        var STD_DEV = 'stddev';\n        var percentRegex = /percent(?:\\w*)\\((\\d+)\\)/;\n        var standardDeviationRegex = new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$');\n        var ErrorRangeCalculator = Class.extend({\n            init: function (errorValue, series, field) {\n                this.initGlobalRanges(errorValue, series, field);\n            },\n            initGlobalRanges: function (errorValue, series, field) {\n                var data = series.data;\n                var deviationMatch = standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var average = this.getAverage(data);\n                    var deviation = this.getStandardDeviation(data, average, false);\n                    var multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1;\n                    var errorRange = {\n                        low: average.value - deviation * multiple,\n                        high: average.value + deviation * multiple\n                    };\n                    this.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var standardError = this.getStandardError(data, this.getAverage(data));\n                    this.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data;\n                var binder = SeriesBinder.current;\n                var valueFields = binder.valueFields(series);\n                var item = defined(data[0]) ? data[0] : {};\n                var valueGetter;\n                if (isArray(item)) {\n                    var index = field ? valueFields.indexOf(field) : 0;\n                    valueGetter = getter('[' + index + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === datavizConstants.OBJECT) {\n                    var srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[valueFields.indexOf(field)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var low, high, value;\n                if (!defined(errorValue)) {\n                    return null;\n                }\n                if (this.globalRange) {\n                    return this.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - Math.abs(percentValue);\n                    high = pointValue + Math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / Math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var this$1 = this;\n                var length = data.length;\n                var total = isSample ? average.count - 1 : average.count;\n                var squareDifferenceSum = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += Math.pow(value - average.value, 2);\n                    }\n                }\n                return Math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var this$1 = this;\n                var length = data.length;\n                var sum = 0;\n                var count = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        });\n        var browser = support.browser || {};\n        var INITIAL_ANIMATION_DURATION = 600;\n        var FADEIN = 'fadeIn';\n        var GLASS = 'glass';\n        var BORDER_BRIGHTNESS = 0.8;\n        var TOOLTIP_OFFSET = 5;\n        var START_SCALE = browser.msie ? 0.001 : 0;\n        var ERROR_LOW_FIELD = 'errorLow';\n        var ERROR_HIGH_FIELD = 'errorHigh';\n        var X_ERROR_LOW_FIELD = 'xErrorLow';\n        var X_ERROR_HIGH_FIELD = 'xErrorHigh';\n        var Y_ERROR_LOW_FIELD = 'yErrorLow';\n        var Y_ERROR_HIGH_FIELD = 'yErrorHigh';\n        var LINE_MARKER_SIZE = 8;\n        var ZERO = 'zero';\n        var INTERPOLATE = 'interpolate';\n        var GAP = 'gap';\n        var SMOOTH = 'smooth';\n        var STEP = 'step';\n        var AREA = 'area';\n        var BAR = 'bar';\n        var BOX_PLOT = 'boxPlot';\n        var BUBBLE = 'bubble';\n        var BULLET = 'bullet';\n        var CANDLESTICK = 'candlestick';\n        var COLUMN = 'column';\n        var DONUT = 'donut';\n        var FUNNEL = 'funnel';\n        var HORIZONTAL_WATERFALL = 'horizontalWaterfall';\n        var LINE = 'line';\n        var OHLC = 'ohlc';\n        var PIE = 'pie';\n        var POLAR_AREA = 'polarArea';\n        var POLAR_LINE = 'polarLine';\n        var POLAR_SCATTER = 'polarScatter';\n        var RADAR_AREA = 'radarArea';\n        var RADAR_COLUMN = 'radarColumn';\n        var RADAR_LINE = 'radarLine';\n        var RANGE_BAR = 'rangeBar';\n        var RANGE_COLUMN = 'rangeColumn';\n        var SCATTER = 'scatter';\n        var SCATTER_LINE = 'scatterLine';\n        var VERTICAL_AREA = 'verticalArea';\n        var VERTICAL_BOX_PLOT = 'verticalBoxPlot';\n        var VERTICAL_BULLET = 'verticalBullet';\n        var VERTICAL_LINE = 'verticalLine';\n        var WATERFALL = 'waterfall';\n        var EQUALLY_SPACED_SERIES = [\n            BAR,\n            COLUMN,\n            OHLC,\n            CANDLESTICK,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            BULLET,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ];\n        var LEGEND_ITEM_CLICK = 'legendItemClick';\n        var LEGEND_ITEM_HOVER = 'legendItemHover';\n        var SERIES_CLICK = 'seriesClick';\n        var SERIES_HOVER = 'seriesHover';\n        var PLOT_AREA_CLICK = 'plotAreaClick';\n        var PLOT_AREA_HOVER = 'plotAreaHover';\n        var DRAG = 'drag';\n        var DRAG_END = 'dragEnd';\n        var DRAG_START = 'dragStart';\n        var ZOOM_START = 'zoomStart';\n        var ZOOM = 'zoom';\n        var ZOOM_END = 'zoomEnd';\n        var SELECT_START = 'selectStart';\n        var SELECT = 'select';\n        var SELECT_END = 'selectEnd';\n        var RENDER = 'render';\n        var SHOW_TOOLTIP = 'showTooltip';\n        var HIDE_TOOLTIP = 'hideTooltip';\n        var LOGARITHMIC = 'log';\n        var CATEGORY = 'category';\n        var INSIDE_END = 'insideEnd';\n        var INSIDE_BASE = 'insideBase';\n        var OUTSIDE_END = 'outsideEnd';\n        var MOUSEWHEEL = 'DOMMouseScroll mousewheel';\n        var MOUSEWHEEL_DELAY = 150;\n        var constants = {\n            INITIAL_ANIMATION_DURATION: INITIAL_ANIMATION_DURATION,\n            FADEIN: FADEIN,\n            LEGEND_ITEM_CLICK: LEGEND_ITEM_CLICK,\n            LEGEND_ITEM_HOVER: LEGEND_ITEM_HOVER,\n            SERIES_CLICK: SERIES_CLICK,\n            SERIES_HOVER: SERIES_HOVER,\n            GLASS: GLASS,\n            BORDER_BRIGHTNESS: BORDER_BRIGHTNESS,\n            TOOLTIP_OFFSET: TOOLTIP_OFFSET,\n            START_SCALE: START_SCALE,\n            ERROR_LOW_FIELD: ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD: ERROR_HIGH_FIELD,\n            X_ERROR_LOW_FIELD: X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD: X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD: Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD: Y_ERROR_HIGH_FIELD,\n            LINE_MARKER_SIZE: LINE_MARKER_SIZE,\n            INTERPOLATE: INTERPOLATE,\n            ZERO: ZERO,\n            SMOOTH: SMOOTH,\n            STEP: STEP,\n            CATEGORY: CATEGORY,\n            FUNNEL: FUNNEL,\n            BAR: BAR,\n            CANDLESTICK: CANDLESTICK,\n            PIE: PIE,\n            COLUMN: COLUMN,\n            AREA: AREA,\n            VERTICAL_BULLET: VERTICAL_BULLET,\n            BOX_PLOT: BOX_PLOT,\n            OHLC: OHLC,\n            WATERFALL: WATERFALL,\n            LINE: LINE,\n            BULLET: BULLET,\n            VERTICAL_LINE: VERTICAL_LINE,\n            VERTICAL_AREA: VERTICAL_AREA,\n            RANGE_COLUMN: RANGE_COLUMN,\n            VERTICAL_BOX_PLOT: VERTICAL_BOX_PLOT,\n            RANGE_BAR: RANGE_BAR,\n            HORIZONTAL_WATERFALL: HORIZONTAL_WATERFALL,\n            SCATTER: SCATTER,\n            SCATTER_LINE: SCATTER_LINE,\n            BUBBLE: BUBBLE,\n            RADAR_AREA: RADAR_AREA,\n            RADAR_LINE: RADAR_LINE,\n            RADAR_COLUMN: RADAR_COLUMN,\n            POLAR_LINE: POLAR_LINE,\n            POLAR_AREA: POLAR_AREA,\n            POLAR_SCATTER: POLAR_SCATTER,\n            RENDER: RENDER,\n            PLOT_AREA_CLICK: PLOT_AREA_CLICK,\n            PLOT_AREA_HOVER: PLOT_AREA_HOVER,\n            LOGARITHMIC: LOGARITHMIC,\n            DRAG: DRAG,\n            DRAG_START: DRAG_START,\n            DRAG_END: DRAG_END,\n            ZOOM_START: ZOOM_START,\n            ZOOM: ZOOM,\n            ZOOM_END: ZOOM_END,\n            SELECT_START: SELECT_START,\n            SELECT: SELECT,\n            SELECT_END: SELECT_END,\n            GAP: GAP,\n            DONUT: DONUT,\n            INSIDE_END: INSIDE_END,\n            INSIDE_BASE: INSIDE_BASE,\n            OUTSIDE_END: OUTSIDE_END,\n            MOUSEWHEEL: MOUSEWHEEL,\n            MOUSEWHEEL_DELAY: MOUSEWHEEL_DELAY,\n            SHOW_TOOLTIP: SHOW_TOOLTIP,\n            HIDE_TOOLTIP: HIDE_TOOLTIP,\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES\n        };\n        var DEFAULT_ERROR_BAR_WIDTH = 4;\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                ChartElement.fn.init.call(this, options);\n                this.low = low;\n                this.high = high;\n                this.isVertical = isVertical;\n                this.chart = chart;\n                this.series = series;\n            },\n            reflow: function (targetBox) {\n                var endCaps = this.options.endCaps;\n                var isVertical = this.isVertical;\n                var axis = this.getAxis();\n                var valueBox = axis.getSlot(this.low, this.high);\n                var centerBox = targetBox.center();\n                var capsWidth = this.getCapsWidth(targetBox, isVertical);\n                var capValue = isVertical ? centerBox.x : centerBox.y;\n                var capStart = capValue - capsWidth;\n                var capEnd = capValue + capsWidth;\n                var linePoints;\n                if (isVertical) {\n                    linePoints = [\n                        new Point(centerBox.x, valueBox.y1),\n                        new Point(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(capStart, valueBox.y1), new Point(capEnd, valueBox.y1), new Point(capStart, valueBox.y2), new Point(capEnd, valueBox.y2));\n                    }\n                    this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        new Point(valueBox.x1, centerBox.y),\n                        new Point(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(valueBox.x1, capStart), new Point(valueBox.x1, capEnd), new Point(valueBox.x2, capStart), new Point(valueBox.x2, capEnd));\n                    }\n                    this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                this.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height();\n                var capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual = options.visual;\n                if (visual) {\n                    this.visual = visual({\n                        low: this.low,\n                        high: this.high,\n                        rect: this.box.toRect(),\n                        sender: this.getSender(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            this$1.createDefaultVisual();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    this.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var linePoints = ref.linePoints;\n                var lineOptions = {\n                    stroke: {\n                        color: options.color,\n                        width: options.line.width,\n                        dashType: options.line.dashType\n                    }\n                };\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    alignPathToPixel(line);\n                    this$1.visual.append(line);\n                }\n            }\n        });\n        setDefaultOptions(ErrorBarBase, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            endCaps: true,\n            line: { width: 2 },\n            zIndex: 1\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axis = this.chart.seriesValueAxis(this.series);\n                return axis;\n            }\n        });\n        var MAX_EXPAND_DEPTH = 5;\n        function evalOptions(options, context, state, dryRun) {\n            if (state === void 0) {\n                state = {};\n            }\n            if (dryRun === void 0) {\n                dryRun = false;\n            }\n            var defaults = state.defaults = state.defaults || {};\n            var depth = state.depth = state.depth || 0;\n            var needsEval = false;\n            state.excluded = state.excluded || [];\n            if (depth > MAX_EXPAND_DEPTH) {\n                return null;\n            }\n            for (var property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    var propValue = options[property];\n                    if (isFunction(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (isObject(propValue)) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length;\n            var categories = 0;\n            for (var i = 0; i < seriesCount; i++) {\n                categories = Math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                this.valueAxisRanges = {};\n                this.points = [];\n                this.categoryPoints = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    var otherValues = [];\n                    var categorySum = 0;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += Math.abs(other.value);\n                                otherValues.push(Math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var this$1 = this;\n                if (startValue === void 0) {\n                    startValue = 0;\n                }\n                var categoryPoints = this.categoryPoints[point.categoryIx];\n                if (this.options.isStacked) {\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === datavizConstants.STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this$1.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this$1.options.isStacked100) {\n                                plotValue = Math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value || axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var this$1 = this;\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPoints = this$1.categoryPoints[i];\n                    if (!categoryPoints) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPoints.length; pIx++) {\n                        var point = categoryPoints[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this$1.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = Math.max(max, to);\n                                    min = Math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var isStacked = ref.isStacked;\n                var chartSeries = ref.series;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        var limits = limitsCache[key];\n                        if (!limits) {\n                            limits = this$1.stackLimits(axisName, series.stack);\n                            var errorTotals = this$1.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = Math.min(limits.min, dataviz.sparseArrayLimits(errorTotals.negative).min);\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = Math.max(limits.max, dataviz.sparseArrayLimits(errorTotals.positive).max);\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            this$1.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var value = point.value;\n                var series = point.series;\n                var seriesIx = point.seriesIx;\n                var errorBars = point.options.errorBars;\n                var lowValue = data.fields[ERROR_LOW_FIELD];\n                var highValue = data.fields[ERROR_HIGH_FIELD];\n                var errorRange;\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    this.seriesErrorRanges = this.seriesErrorRanges || [];\n                    this.seriesErrorRanges[seriesIx] = this.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = this.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    this.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var isVertical = !this.options.invertAxes;\n                var options = point.options.errorBars;\n                var series = point.series;\n                var low = point.low;\n                var high = point.high;\n                if (this.options.isStacked) {\n                    var stackedErrorRange = this.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    this.updateRange({ value: low }, fields);\n                    this.updateRange({ value: high }, fields);\n                }\n                var errorBar = new CategoricalErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var plotValue = this.plotRange(point, 0)[1] - point.value;\n                var low = point.low + plotValue;\n                var high = point.high + plotValue;\n                this.errorTotals = this.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    this.errorTotals.negative[categoryIx] = Math.min(this.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    this.errorTotals.positive[categoryIx] = Math.max(this.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = this.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = this.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    this.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = this.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = this;\n                    point.dataItem = series.data[categoryIx];\n                    point.noteText = data.fields.noteText;\n                    this.addErrorBar(point, data, categoryIx);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                this.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, pointOptions);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return pointOptions;\n            },\n            updateRange: function (data, fields) {\n                var axisName = fields.series.axis;\n                var value = data.value;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, value);\n                    axisRange.max = Math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea;\n                var axisName = series.axis;\n                var axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var categorySlots = this.categorySlots = [];\n                var chartPoints = this.points;\n                var categoryAxis = this.categoryAxis;\n                var pointIx = 0;\n                this.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    var valueAxis = this$1.seriesValueAxis(currentSeries);\n                    var point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = this$1.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = this$1.plotRange(point, valueAxis.startValue());\n                        var valueSlot = valueAxis.getSlot(plotRange[0], plotRange[1], !this$1.options.clip);\n                        if (valueSlot) {\n                            var pointSlot = this$1.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = this$1.aboveAxis(point, valueAxis);\n                            point.stackValue = plotRange[1];\n                            if (this$1.options.isStacked100) {\n                                point.percentage = this$1.plotValue(point);\n                            }\n                            this$1.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.reflowCategories(categorySlots);\n                this.box = targetBox;\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis;\n                var options = valueAxis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var options = this.options;\n                var invertAxes = options.invertAxes;\n                var slotX = invertAxes ? valueSlot : categorySlot;\n                var slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var count = categoriesCount(series);\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this$1._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (var seriesIx$1 = 0; seriesIx$1 < seriesCount; seriesIx$1++) {\n                        var currentSeries = series[seriesIx$1];\n                        var currentCategory = categories[categoryIx];\n                        var pointData = this$1._bindPoint(currentSeries, seriesIx$1, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx$1\n                        });\n                    }\n                }\n                for (var seriesIx$2 = 0; seriesIx$2 < seriesCount; seriesIx$2++) {\n                    this$1._outOfRangeCallback(series[seriesIx$2], '_outOfRangeMaxPoint', seriesIx$2, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        setDefaultOptions(CategoricalChart, {\n            series: [],\n            invertAxes: false,\n            isStacked: false,\n            clip: true\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var options = this.options.notes;\n                var text = this.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    this.note = new dataviz.Note({\n                        value: this.value,\n                        text: text,\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        series: this.series\n                    }, this.options.notes, this.owner.chartService);\n                    this.append(this.note);\n                }\n            }\n        };\n        var ABOVE = 'above';\n        var BELOW = 'below';\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n            },\n            render: function () {\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                if (markers.visible && markers.size) {\n                    this.marker = this.createMarker();\n                    this.append(this.marker);\n                }\n                if (labels.visible) {\n                    var labelText = this.value;\n                    if (labels.template) {\n                        var labelTemplate = TemplateService.compile(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            series: this.series\n                        });\n                    } else if (labels.format) {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels));\n                    this.append(this.label);\n                }\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: function () {\n            },\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var aboveAxis = ref.aboveAxis;\n                var vertical = options.vertical;\n                this.render();\n                this.box = targetBox;\n                var childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                this._childBox = childBox;\n                if (this.marker) {\n                    this.marker.reflow(childBox);\n                }\n                this.reflowLabel(childBox);\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (this.note) {\n                    var noteTargetBox = this.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        var center = noteTargetBox.center();\n                        noteTargetBox = new Box(center.x, center.y, center.x, center.y);\n                    }\n                    this.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(this.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var markers = this.options.highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var size = options.size + (options.border.width || 0) + (markers.border.width || 0);\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: size,\n                    height: size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual, rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geometry.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function () {\n                var markerBox = this.markerBox();\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    var x = markerBox.x2 + TOOLTIP_OFFSET;\n                    var horizontalAlign = LEFT;\n                    var y, verticalAlign;\n                    if (this.aboveAxis) {\n                        y = markerBox.y1;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        y = markerBox.y2;\n                        verticalAlign = TOP;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            }\n        });\n        LinePoint.prototype.defaults = {\n            vertical: true,\n            markers: {\n                visible: true,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                position: ABOVE,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: '#fff',\n                        width: 2\n                    }\n                }\n            },\n            errorBars: { line: { width: 1 } }\n        };\n        deepExtend(LinePoint.prototype, PointEventsMixin);\n        deepExtend(LinePoint.prototype, NoteMixin);\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                ChartElement.fn.init.call(this);\n                this.linePoints = linePoints;\n                this.series = series;\n                this.seriesIx = seriesIx;\n            },\n            points: function (visualPoints) {\n                var linePoints = this.linePoints.concat(visualPoints || []);\n                var points = [];\n                for (var i = 0, length = linePoints.length; i < length; i++) {\n                    if (linePoints[i].visible !== false) {\n                        points.push(linePoints[i]._childBox.toRect().center());\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var ref = this;\n                var options = ref.options;\n                var series = ref.series;\n                var color = series.color;\n                var defaults = series._defaults;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                return this.parent.getNearestPoint(coords.x, coords.y, this.seriesIx);\n            }\n        });\n        setDefaultOptions(LineSegment, { closed: false });\n        var StepLineSegment = LineSegment.extend({\n            points: function (visualPoints) {\n                var points = this.calculateStepPoints(this.linePoints);\n                if (visualPoints && visualPoints.length) {\n                    points = points.concat(this.calculateStepPoints(visualPoints).reverse());\n                }\n                return points;\n            },\n            calculateStepPoints: function (points) {\n                var chart = this.parent;\n                var plotArea = chart.plotArea;\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var isInterpolate = chart.seriesMissingValues(this.series) === INTERPOLATE;\n                var reverse = categoryAxis.options.reverse;\n                var vertical = categoryAxis.options.vertical;\n                var dir = reverse ? 2 : 1;\n                var revDir = reverse ? 1 : 2;\n                var length = points.length;\n                var result = [];\n                for (var i = 1; i < length; i++) {\n                    var prevPoint = points[i - 1];\n                    var point = points[i];\n                    var prevMarkerBoxCenter = prevPoint.markerBox().center();\n                    var markerBoxCenter = point.markerBox().center();\n                    if (categoryAxis.options.justified) {\n                        result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));\n                        if (vertical) {\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, markerBoxCenter.y));\n                        } else {\n                            result.push(new GeometryPoint(markerBoxCenter.x, prevMarkerBoxCenter.y));\n                        }\n                        result.push(new GeometryPoint(markerBoxCenter.x, markerBoxCenter.y));\n                    } else {\n                        if (vertical) {\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevPoint.box[Y + dir]));\n                            result.push(new GeometryPoint(prevMarkerBoxCenter.x, prevPoint.box[Y + revDir]));\n                            if (isInterpolate) {\n                                result.push(new GeometryPoint(prevMarkerBoxCenter.x, point.box[Y + dir]));\n                            }\n                            result.push(new GeometryPoint(markerBoxCenter.x, point.box[Y + dir]));\n                            result.push(new GeometryPoint(markerBoxCenter.x, point.box[Y + revDir]));\n                        } else {\n                            result.push(new GeometryPoint(prevPoint.box[X + dir], prevMarkerBoxCenter.y));\n                            result.push(new GeometryPoint(prevPoint.box[X + revDir], prevMarkerBoxCenter.y));\n                            if (isInterpolate) {\n                                result.push(new GeometryPoint(point.box[X + dir], prevMarkerBoxCenter.y));\n                            }\n                            result.push(new GeometryPoint(point.box[X + dir], markerBoxCenter.y));\n                            result.push(new GeometryPoint(point.box[X + revDir], markerBoxCenter.y));\n                        }\n                    }\n                }\n                return result || [];\n            }\n        });\n        var SplineSegment = LineSegment.extend({\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new dataviz.CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesPoints = ref.seriesPoints;\n                var series = options.series;\n                var seriesCount = seriesPoints.length;\n                var lastSegment;\n                this._segments = [];\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var sortedPoints = this$1.sortPoints(seriesPoints[seriesIx]);\n                    var pointCount = sortedPoints.length;\n                    var linePoints = [];\n                    for (var pointIx = 0; pointIx < pointCount; pointIx++) {\n                        var point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (this$1.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this$1._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this$1._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues;\n                var assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimation = Animation.extend({\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(dataviz.interpolateValue(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        setDefaultOptions(ClipAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register('clip', ClipAnimation);\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.box;\n                    var clipPath = Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n                this.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var missingValues = this.seriesMissingValues(series);\n                var value = data.valueFields.value;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var this$1 = this;\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this$1.plotValue(other);\n                        if (this$1.options.isStacked100) {\n                            plotValue = Math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var AreaSegmentMixin = {\n            points: function () {\n                var chart = this.parent;\n                var plotArea = chart.plotArea;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var valueAxisLineBox = valueAxis.lineBox();\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var stackPoints = this.stackPoints;\n                var points = this._linePoints(stackPoints);\n                var pos = invertAxes ? X : Y;\n                var end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!this.stackPoints && points.length > 1) {\n                    var firstPoint = points[0];\n                    var lastPoint = last(points);\n                    if (invertAxes) {\n                        points.unshift(new GeometryPoint(end, firstPoint.y));\n                        points.push(new GeometryPoint(end, lastPoint.y));\n                    } else {\n                        points.unshift(new GeometryPoint(firstPoint.x, end));\n                        points.push(new GeometryPoint(lastPoint.x, end));\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createArea(color);\n                this.createLine(color);\n            },\n            createLine: function (color) {\n                var series = this.series;\n                var lineOptions = deepExtend({\n                    color: color,\n                    opacity: series.opacity\n                }, series.line);\n                if (lineOptions.visible !== false && lineOptions.width > 0) {\n                    var line = Path.fromPoints(this._linePoints(), {\n                        stroke: {\n                            color: lineOptions.color,\n                            width: lineOptions.width,\n                            opacity: lineOptions.opacity,\n                            dashType: lineOptions.dashType,\n                            lineCap: 'butt'\n                        }\n                    });\n                    this.visual.append(line);\n                }\n            },\n            createArea: function (color) {\n                var series = this.series;\n                var area = Path.fromPoints(this.points(), {\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.visual.append(area);\n            }\n        };\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                LineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.stackPoints = stackPoints;\n            }\n        });\n        deepExtend(AreaSegment.prototype, AreaSegmentMixin, { _linePoints: LineSegment.prototype.points });\n        var StepAreaSegment = StepLineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                StepLineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.stackPoints = stackPoints;\n            }\n        });\n        deepExtend(StepAreaSegment.prototype, AreaSegmentMixin, { _linePoints: StepLineSegment.prototype.points });\n        var SplineAreaSegment = AreaSegment.extend({\n            init: function (linePoints, prevSegment, isStacked, currentSeries, seriesIx) {\n                AreaSegment.fn.init.call(this, linePoints, [], currentSeries, seriesIx);\n                this.prevSegment = prevSegment;\n                this.isStacked = isStacked;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var curveProcessor = new dataviz.CurveProcessor(this.options.closed);\n                    var linePoints = LineSegment.prototype.points.call(this);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                }\n                return segments;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.createStroke({\n                    stroke: deepExtend({\n                        color: color,\n                        opacity: series.opacity,\n                        lineCap: 'butt'\n                    }, series.line)\n                });\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var prevSegment = this.prevSegment;\n                if (this.isStacked && prevSegment) {\n                    var prevStrokeSegments = prevSegment.strokeSegments();\n                    var prevAnchor = last(prevStrokeSegments).anchor();\n                    fillSegments.push(new geometry.Segment(prevAnchor, prevAnchor, last(strokeSegments).anchor()));\n                    var stackSegments = [];\n                    for (var idx = prevStrokeSegments.length - 1; idx >= 0; idx--) {\n                        var segment = prevStrokeSegments[idx];\n                        stackSegments.push(new geometry.Segment(segment.anchor(), segment.controlOut(), segment.controlIn()));\n                    }\n                    append(fillSegments, stackSegments);\n                    var firstAnchor = fillSegments[0].anchor();\n                    fillSegments.push(new geometry.Segment(firstAnchor, firstAnchor, last(stackSegments).anchor()));\n                }\n                var fill = new Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                this.closeFill(fill);\n                this.visual.append(fill);\n            },\n            closeFill: function (fillPath) {\n                var chart = this.parent;\n                var prevSegment = this.prevSegment;\n                var plotArea = chart.plotArea;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var valueAxisLineBox = valueAxis.lineBox();\n                var categoryAxis = plotArea.seriesCategoryAxis(this.series);\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var pos = invertAxes ? X : Y;\n                var segments = this.strokeSegments();\n                var firstPoint = segments[0].anchor();\n                var lastPoint = last(segments).anchor();\n                var end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!(chart.options.isStacked && prevSegment) && segments.length > 1) {\n                    if (invertAxes) {\n                        fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                    } else {\n                        fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                    }\n                }\n            },\n            createStroke: function (style) {\n                if (style.stroke.width > 0) {\n                    var stroke = new Path(style);\n                    stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                    this.visual.append(stroke);\n                }\n            }\n        });\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var stackPoints;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues !== 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                    if (style !== STEP) {\n                        stackPoints = stackPoints.slice(0).reverse();\n                    }\n                }\n                if (style === SMOOTH) {\n                    return new SplineAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                }\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, stackPoints, currentSeries, seriesIx);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        var stackPoint = stackPoints[idx];\n                        var pointSlot = this$1.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var this$1 = this;\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var length = linePoints.length;\n                if (startIdx < 0) {\n                    startIdx = 0;\n                    length--;\n                }\n                var endIdx = startIdx + length;\n                var pointOffset = this.seriesOptions[0]._outOfRangeMinPoint ? 1 : 0;\n                var stackPoints = [];\n                this._stackPoints = this._stackPoints || [];\n                for (var categoryIx = startIdx; categoryIx < endIdx; categoryIx++) {\n                    var pointIx = categoryIx + pointOffset;\n                    var currentSeriesIx = seriesIx;\n                    var point = void 0;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][pointIx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && categoryIx > startIdx && !seriesPoints[currentSeriesIx][pointIx - 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && categoryIx + 1 < endIdx && !seriesPoints[currentSeriesIx][pointIx + 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        var gapStackPoint = this$1._createGapStackPoint(categoryIx);\n                        this$1._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, pointIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var index = seriesIdx;\n                var point;\n                while (index > 0 && !point) {\n                    index--;\n                    point = seriesPoints[index][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[index][pointIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                this.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var axisRanges = this.axisRanges;\n                for (var axisName in chartAxisRanges) {\n                    var chartRange = chartAxisRanges[axisName];\n                    var range = axisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = Math.min(range.min, chartRange.min);\n                    range.max = Math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var BarLabel = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.textBox = new TextBox(content, this.options);\n                this.append(this.textBox);\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var aboveAxis = options.aboveAxis;\n                var text = this.children[0];\n                var textOptions = text.options;\n                var box = text.box;\n                var padding = text.options.padding;\n                var labelBox = targetBox;\n                textOptions.align = vertical ? CENTER : LEFT;\n                textOptions.vAlign = vertical ? TOP : CENTER;\n                if (options.position === INSIDE_END) {\n                    if (vertical) {\n                        textOptions.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            textOptions.vAlign = BOTTOM;\n                        }\n                    } else {\n                        textOptions.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position === CENTER) {\n                    textOptions.vAlign = CENTER;\n                    textOptions.align = CENTER;\n                } else if (options.position === INSIDE_BASE) {\n                    if (vertical) {\n                        textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        textOptions.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position === OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            labelBox = new Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        textOptions.align = CENTER;\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            labelBox = new Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(labelBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var vertical = this.options.vertical;\n                var field = vertical ? Y : X;\n                var start = field + '1';\n                var end = field + '2';\n                var text = this.children[0];\n                var parentBox = this.parent.box;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    var targetBox = text.paddingBox.clone();\n                    targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        setDefaultOptions(BarLabel, {\n            position: OUTSIDE_END,\n            margin: getSpacing(3),\n            padding: getSpacing(4),\n            color: BLACK,\n            background: '',\n            border: {\n                width: 1,\n                color: ''\n            },\n            aboveAxis: true,\n            vertical: false,\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            zIndex: 2\n        });\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient !== 'none';\n        }\n        var BAR_ALIGN_MIN_WIDTH = 6;\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.options = options;\n                this.color = options.color || WHITE;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.value = value;\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                if (labels.visible) {\n                    var labelText;\n                    if (labels.template) {\n                        var labelTemplate = TemplateService.compile(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            series: this.series\n                        });\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, labels));\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                this.render();\n                var label = this.label;\n                this.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = this.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var options = ref.options;\n                var customVisual = options.visual;\n                if (this.visible !== false) {\n                    ChartElement.fn.createVisual.call(this);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            sender: this.getSender(),\n                            series: this.series,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        this.createRect(this.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    var overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay));\n                    visual.append(overlay);\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var color = this.color;\n                var border = this.options.border;\n                var brightness = border._brightness || BORDER_BRIGHTNESS;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var aboveAxis = ref.aboveAxis;\n                var clipBox = this.owner.pane.clipBox() || box;\n                var horizontalAlign = LEFT;\n                var verticalAlign = TOP;\n                var x, y;\n                if (options.vertical) {\n                    x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    if (aboveAxis) {\n                        y = Math.max(box.y1, clipBox.y1);\n                    } else {\n                        y = Math.min(box.y2, clipBox.y2);\n                        verticalAlign = BOTTOM;\n                    }\n                } else {\n                    var x1 = Math.max(box.x1, clipBox.x1);\n                    var x2 = Math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        verticalAlign = BOTTOM;\n                        if (aboveAxis) {\n                            horizontalAlign = RIGHT;\n                            x = x2;\n                        } else {\n                            x = x1;\n                        }\n                        y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n                    } else {\n                        if (aboveAxis) {\n                            x = x2 + TOOLTIP_OFFSET;\n                        } else {\n                            x = x1 - TOOLTIP_OFFSET;\n                            horizontalAlign = RIGHT;\n                        }\n                        y = Math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return {\n                    point: new Point(x, y),\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Bar.prototype, PointEventsMixin);\n        deepExtend(Bar.prototype, NoteMixin);\n        Bar.prototype.defaults = {\n            border: { width: 1 },\n            vertical: true,\n            overlay: { gradient: 'glass' },\n            labels: {\n                visible: false,\n                format: '{0}'\n            },\n            opacity: 1,\n            notes: { label: {} }\n        };\n        var ClusterLayout = ChartElement.extend({\n            reflow: function (box) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var gap = ref.gap;\n                var spacing = ref.spacing;\n                var children = this.children;\n                var count = children.length;\n                var axis = vertical ? Y : X;\n                var slots = count + gap + spacing * (count - 1);\n                var slotSize = (vertical ? box.height() : box.width()) / slots;\n                var position = box[axis + 1] + slotSize * (gap / 2);\n                for (var i = 0; i < count; i++) {\n                    var childBox = (children[i].box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    children[i].reflow(childBox);\n                    if (i < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                }\n            }\n        });\n        setDefaultOptions(ClusterLayout, {\n            vertical: false,\n            gap: 0,\n            spacing: 0\n        });\n        var StackWrap = ChartElement.extend({\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var positionAxis = this.options.vertical ? X : Y;\n                var children = this.children;\n                var childrenCount = children.length;\n                var box = this.box = new Box();\n                for (var i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i];\n                    if (currentChild.visible !== false) {\n                        var childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this$1.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        setDefaultOptions(StackWrap, { vertical: true });\n        var BarChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var isStacked = options.isStacked;\n                var value = this.pointValue(data);\n                var pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position === OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var pointType = this.pointType();\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    var clusterType = this.clusterType();\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = this.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === datavizConstants.STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var options = this.options;\n                var categorySlot = categoryAxis.getSlot(categoryIx);\n                var startValue = valueAxis.startValue();\n                if (options.isStacked) {\n                    var zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    var stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                CategoricalChart.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    var pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this$1.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new GeometryPoint(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        setDefaultOptions(BarChart, { animation: { type: BAR } });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var ocSlot = valueAxis.getSlot(value.open, value.close);\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                this.realBody = ocSlot;\n                var mid = lhSlot.center().x;\n                var points = [];\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                this.lines = points;\n                this.box = lhSlot.clone().wrap(ocSlot);\n                if (!this._rendered) {\n                    this._rendered = true;\n                    this.createNote();\n                }\n                this.reflowNote();\n            },\n            reflowNote: function () {\n                if (this.note) {\n                    this.note.reflow(this.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var border = this.options.border;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(this.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                var clipBox = this.owner.pane.clipBox() || box;\n                return {\n                    point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n                    align: {\n                        horizontal: LEFT,\n                        vertical: TOP\n                    }\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        setDefaultOptions(Candlestick, {\n            vertical: true,\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{4:d}</th></tr>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            }\n        });\n        deepExtend(Candlestick.prototype, PointEventsMixin);\n        deepExtend(Candlestick.prototype, NoteMixin);\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        var CandlestickChart = CategoricalChart.extend({\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var pointType = this.pointType();\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var color = data.fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type === CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !this.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var parts = this.splitValue(value);\n                var axisRange = this.valueAxisRanges[axisName];\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                Candlestick.fn.init.call(this, value, options);\n                this.createNote();\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var whiskerSlot, boxSlot;\n                this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                this.realBody = boxSlot;\n                this.reflowBoxSlot(box);\n                this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                this.reflowWhiskerSlot(box);\n                var medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    var meanSlot = valueAxis.getSlot(value.mean);\n                    this.meanPoints = this.calcMeanPoints(box, meanSlot);\n                }\n                this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);\n                this.medianPoints = this.calcMedianPoints(box, medianSlot);\n                this.box = whiskerSlot.clone().wrap(boxSlot);\n                this.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var this$1 = this;\n                var value = this.value;\n                var outliers = value.outliers || [];\n                var outerFence = Math.abs(value.q3 - value.q1) * 3;\n                var elements = [];\n                var markers = options.markers || {};\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    var markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(this$1.color)) {\n                            markersBorder.color = this$1.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    var shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var this$1 = this;\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this$1.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this$1.box = this$1.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.whiskers);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.fn.getBorderColor.call(this);\n            }\n        });\n        setDefaultOptions(BoxPlot, {\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            median: { color: '#f6f6f6' },\n            mean: {\n                width: 2,\n                dashType: 'dash',\n                color: '#f6f6f6'\n            },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{6:d}</th></tr>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            },\n            outliers: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: datavizConstants.CROSS,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            },\n            extremes: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            }\n        });\n        deepExtend(BoxPlot.prototype, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length;\n                var result = [];\n                for (var i = 0; i < length; i++) {\n                    var item = items[i];\n                    if (defined(item) && item !== null) {\n                        result.push(item);\n                    }\n                }\n                return result;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axes = this.chart.seriesAxes(this.series);\n                var axis = this.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this._initFields();\n                this.render();\n            },\n            _initFields: function () {\n                this.xAxisRanges = {};\n                this.yAxisRanges = {};\n                this.points = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            addErrorBar: function (point, field, fields) {\n                var value = point.value[field];\n                var valueErrorField = field + 'Value';\n                var lowField = field + 'ErrorLow';\n                var highField = field + 'ErrorHigh';\n                var seriesIx = fields.seriesIx;\n                var series = fields.series;\n                var errorBars = point.options.errorBars;\n                var lowValue = fields[lowField];\n                var highValue = fields[highField];\n                if (isNumber(value)) {\n                    var errorRange;\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        this.seriesErrorRanges = this.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        this.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var low = errorRange.low;\n                var high = errorRange.high;\n                var series = point.series;\n                var options = point.options.errorBars;\n                var isVertical = field === Y;\n                var item = {};\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                this.updateRange(item, series);\n                item[field] = high;\n                this.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var x = value.x;\n                var y = value.y;\n                var seriesIx = fields.seriesIx;\n                var series = this.options.series[seriesIx];\n                var missingValues = this.seriesMissingValues(series);\n                var seriesPoints = this.seriesPoints[seriesIx];\n                var pointValue = value;\n                if (!(hasValue(x) && hasValue(y))) {\n                    pointValue = this.createMissingValue(pointValue, missingValues);\n                }\n                var point;\n                if (pointValue) {\n                    point = this.createPoint(pointValue, fields);\n                    if (point) {\n                        $.extend(point, fields);\n                        this.addErrorBar(point, X, fields);\n                        this.addErrorBar(point, Y, fields);\n                    }\n                    this.updateRange(pointValue, fields.series);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: function () {\n            },\n            updateRange: function (value, series) {\n                var intlService = this.chartService.intl;\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var x = value.x;\n                var y = value.y;\n                var xAxisRange = this.xAxisRanges[xAxisName];\n                var yAxisRange = this.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = this.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(x)) {\n                        x = parseDate(intlService, x);\n                    }\n                    xAxisRange.min = Math.min(xAxisRange.min, x);\n                    xAxisRange.max = Math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = this.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(y)) {\n                        y = parseDate(intlService, y);\n                    }\n                    yAxisRange.min = Math.min(yAxisRange.min, y);\n                    yAxisRange.max = Math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, options);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return pointOptions;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var plotArea = this.plotArea;\n                var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n                var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var chartPoints = this.points;\n                var limit = !this.options.clip;\n                var pointIx = 0;\n                this.traverseDataPoints(function (value, fields) {\n                    var point = chartPoints[pointIx++];\n                    var seriesAxes = this$1.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n                    var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n                    if (point) {\n                        if (slotX && slotY) {\n                            var pointSlot = this$1.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var seriesPoints = ref.seriesPoints;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var value = ref$1.valueFields;\n                        var fields = ref$1.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: this$1\n                        }, fields));\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        setDefaultOptions(ScatterChart, {\n            series: [],\n            tooltip: { format: '{0}, {1}' },\n            labels: { format: '{0}, {1}' },\n            clip: true\n        });\n        deepExtend(ScatterChart.prototype, ClipAnimationMixin, { _bindPoint: CategoricalChart.prototype._bindPoint });\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                LinePoint.fn.init.call(this, value, options);\n                this.category = value.category;\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = (markers.size + markers.border.width + border.width) / 2;\n                var highlightGroup = new Group();\n                var shadow = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y + radius / 5 + border.width / 2\n                ], radius + border.width / 2), {\n                    stroke: { color: 'none' },\n                    fill: this.createGradient({\n                        gradient: 'bubbleShadow',\n                        color: markers.background,\n                        stops: [\n                            {\n                                offset: 0,\n                                color: markers.background,\n                                opacity: 0.3\n                            },\n                            {\n                                offset: 1,\n                                color: markers.background,\n                                opacity: 0\n                            }\n                        ]\n                    })\n                });\n                var overlay = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                highlightGroup.append(shadow, overlay);\n                return highlightGroup;\n            }\n        });\n        Bubble.prototype.defaults = deepExtend({}, Bubble.prototype.defaults, {\n            labels: { position: CENTER },\n            highlight: {\n                opacity: 1,\n                border: {\n                    color: '#fff',\n                    width: 2,\n                    opacity: 1\n                }\n            }\n        });\n        var BubbleChart = ScatterChart.extend({\n            _initFields: function () {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn._initFields.call(this);\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                this.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(this, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointsCount = series.data.length;\n                var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n                var animationOptions = {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay,\n                    type: BUBBLE\n                };\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                var pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                var point = new Bubble(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var boxSize = Math.min(box.width(), box.height());\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesPoints = this$1.seriesPoints[seriesIx];\n                    var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n                    var maxSize = currentSeries.maxSize || boxSize * 0.2;\n                    var minR = minSize / 2;\n                    var maxR = maxSize / 2;\n                    var minArea = Math.PI * minR * minR;\n                    var maxArea = Math.PI * maxR * maxR;\n                    var areaRange = maxArea - minArea;\n                    var areaRatio = areaRange / this$1._maxSize;\n                    for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = Math.abs(point.value.size) * areaRatio;\n                            var radius = Math.sqrt((minArea + area) / Math.PI);\n                            var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                            var zIndex = baseZIndex + (1 - radius / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: radius * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: function () {\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(BubbleChart, {\n            tooltip: { format: '{3}' },\n            labels: { format: '{3}' }\n        });\n        var Target = ShapeElement.extend({});\n        deepExtend(Target.prototype, PointEventsMixin);\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.aboveAxis = this.options.aboveAxis;\n                this.color = options.color || WHITE;\n                this.value = value;\n            },\n            render: function () {\n                var options = this.options;\n                if (!this._rendered) {\n                    this._rendered = true;\n                    if (defined(this.value.target)) {\n                        this.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || this.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        this.target.value = this.value;\n                        this.target.dataItem = this.dataItem;\n                        this.target.series = this.series;\n                        this.append(this.target);\n                    }\n                    this.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var ref = this;\n                var options = ref.options;\n                var target = ref.target;\n                var chart = ref.owner;\n                var invertAxes = options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.options);\n                var categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n                var targetValueSlot = valueAxis.getSlot(this.value.target);\n                var targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n                var targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n                if (target) {\n                    var targetSlot = new Box(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (this.note) {\n                    this.note.reflow(box);\n                }\n                this.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            createHighlight: function (style) {\n                return Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        Bullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n        setDefaultOptions(Bullet, {\n            border: { width: 1 },\n            vertical: false,\n            opacity: 1,\n            target: {\n                shape: '',\n                border: {\n                    width: 0,\n                    color: 'green'\n                },\n                line: { width: 2 }\n            },\n            tooltip: { format: 'Current: {0}<br />Target: {1}' }\n        });\n        deepExtend(Bullet.prototype, PointEventsMixin);\n        deepExtend(Bullet.prototype, NoteMixin);\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                wrapData(options);\n                CategoricalChart.fn.init.call(this, plotArea, options);\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var value = data.valueFields;\n                var bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = this.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                var bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    this.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var current = value.current;\n                var target = value.target;\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, current, target);\n                    axisRange.max = Math.max(axisRange.max, current, target);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    point.options.animation = this$1.options.animation;\n                    point.createAnimation();\n                }\n            }\n        });\n        BulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n        setDefaultOptions(BulletChart, { animation: { type: BAR } });\n        function wrapData(options) {\n            var series = options.series;\n            for (var i = 0; i < series.length; i++) {\n                var seriesItem = series[i];\n                var data = seriesItem.data;\n                if (data && !isArray(data[0]) && !isObject(data[0])) {\n                    seriesItem.data = [data];\n                }\n            }\n        }\n        var BaseTooltip = Class.extend({\n            init: function (chartService, options) {\n                this.chartService = chartService;\n                this.options = deepExtend({}, this.options, options);\n            },\n            getStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                var padding = getSpacing(options.padding || {}, 'auto');\n                return {\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: styleValue(options.border.width),\n                    paddingTop: styleValue(padding.top),\n                    paddingBottom: styleValue(padding.bottom),\n                    paddingLeft: styleValue(padding.left),\n                    paddingRight: styleValue(padding.right)\n                };\n            },\n            show: function (options, tooltipOptions, point) {\n                options.format = tooltipOptions.format;\n                var style = this.getStyle(tooltipOptions, point);\n                options.style = style;\n                if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n                    options.className = 'k-chart-tooltip-inverse';\n                }\n                this.chartService.notify(SHOW_TOOLTIP, options);\n            },\n            hide: function () {\n                if (this.chartService) {\n                    this.chartService.notify(HIDE_TOOLTIP);\n                }\n            },\n            destroy: function () {\n                delete this.chartService;\n            }\n        });\n        setDefaultOptions(BaseTooltip, {\n            border: { width: 1 },\n            opacity: 1\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (chartService, crosshair, options) {\n                BaseTooltip.fn.init.call(this, chartService, options);\n                this.crosshair = crosshair;\n                this.formatService = chartService.format;\n                this.initAxisName();\n            },\n            initAxisName: function () {\n                var axis = this.crosshair.axis;\n                var plotArea = axis.plotArea;\n                var name;\n                if (plotArea.categoryAxis) {\n                    name = axis.getCategory ? 'categoryAxis' : 'valueAxis';\n                } else {\n                    name = axis.options.vertical ? 'yAxis' : 'xAxis';\n                }\n                this.axisName = name;\n            },\n            showAt: function (point) {\n                var ref = this;\n                var axis = ref.crosshair.axis;\n                var options = ref.options;\n                var value = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                var formattedValue = value;\n                if (options.format) {\n                    formattedValue = this.formatService.auto(options.format, value);\n                } else if (axis.options.type === DATE) {\n                    formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n                }\n                this.show({\n                    point: point,\n                    anchor: this.getAnchor(),\n                    crosshair: this.crosshair,\n                    value: formattedValue,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                }, this.options);\n            },\n            hide: function () {\n                this.chartService.notify(HIDE_TOOLTIP, {\n                    crosshair: this.crosshair,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                });\n            },\n            getAnchor: function () {\n                var ref = this;\n                var crosshair = ref.crosshair;\n                var ref_options = ref.options;\n                var position = ref_options.position;\n                var padding = ref_options.padding;\n                var vertical = !crosshair.axis.options.vertical;\n                var lineBox = crosshair.line.bbox();\n                var horizontalAlign, verticalAlign, point;\n                if (vertical) {\n                    horizontalAlign = CENTER;\n                    if (position === BOTTOM) {\n                        verticalAlign = TOP;\n                        point = lineBox.bottomLeft().translate(0, padding);\n                    } else {\n                        verticalAlign = BOTTOM;\n                        point = lineBox.topLeft().translate(0, -padding);\n                    }\n                } else {\n                    verticalAlign = CENTER;\n                    if (position === LEFT) {\n                        horizontalAlign = RIGHT;\n                        point = lineBox.topLeft().translate(-padding, 0);\n                    } else {\n                        horizontalAlign = LEFT;\n                        point = lineBox.topRight().translate(padding, 0);\n                    }\n                }\n                return {\n                    point: point,\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            }\n        });\n        setDefaultOptions(CrosshairTooltip, { padding: 10 });\n        var Crosshair = ChartElement.extend({\n            init: function (chartService, axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    this.tooltip = new CrosshairTooltip(chartService, this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                if (this.tooltip) {\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var ref = this;\n                var axis = ref.axis;\n                var point = ref.point;\n                var vertical = axis.options.vertical;\n                var box = this.getBox();\n                var dim = vertical ? Y : X;\n                var lineStart = new GeometryPoint(box.x1, box.y1);\n                var lineEnd;\n                if (vertical) {\n                    lineEnd = new GeometryPoint(box.x2, box.y1);\n                } else {\n                    lineEnd = new GeometryPoint(box.x1, box.y2);\n                }\n                if (point) {\n                    if (this.stickyMode) {\n                        var slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                this.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var axis = this.axis;\n                var axes = axis.pane.axes;\n                var length = axes.length;\n                var vertical = axis.options.vertical;\n                var box = axis.lineBox().clone();\n                var dim = vertical ? X : Y;\n                var axisLineBox;\n                for (var i = 0; i < length; i++) {\n                    var currentAxis = axes[i];\n                    if (currentAxis.options.vertical !== vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                if (this.tooltip) {\n                    this.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(this);\n            }\n        });\n        setDefaultOptions(Crosshair, {\n            color: BLACK,\n            width: 2,\n            zIndex: -1,\n            tooltip: { visible: false }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                ChartElement.fn.init.call(this, options);\n                this.pane = pane;\n            },\n            shouldClip: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = Path.fromRect(clipRect);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            unclipLabels: function () {\n                var ref = this;\n                var charts = ref.children;\n                var clipBox = ref.clipBox;\n                for (var i = 0; i < charts.length; i++) {\n                    var points = charts[i].points || {};\n                    var length = points.length;\n                    for (var j = 0; j < length; j++) {\n                        var point = points[j];\n                        if (point && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            var label = point.label;\n                            var note = point.note;\n                            if (label && label.options.visible) {\n                                if (label.alignToClipBox) {\n                                    label.alignToClipBox(clipBox);\n                                }\n                                label.options.noclip = true;\n                            }\n                            if (note && note.options.visible) {\n                                note.options.noclip = true;\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        ChartContainer.prototype.isStackRoot = true;\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.id = paneID();\n                this.createTitle();\n                this.content = new ChartElement();\n                this.chartContainer = new ChartContainer({}, this);\n                this.append(this.content);\n                this.axes = [];\n                this.charts = [];\n            },\n            createTitle: function () {\n                var titleOptions = this.options.title;\n                if (isObject(titleOptions)) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                this.title = dataviz.Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n            },\n            appendAxis: function (axis) {\n                this.content.append(axis);\n                this.axes.push(axis);\n                axis.pane = this;\n            },\n            appendChart: function (chart) {\n                if (this.chartContainer.parent !== this.content) {\n                    this.content.append(this.chartContainer);\n                }\n                this.charts.push(chart);\n                this.chartContainer.append(chart);\n                chart.pane = this;\n            },\n            empty: function () {\n                var this$1 = this;\n                var plotArea = this.parent;\n                if (plotArea) {\n                    for (var i = 0; i < this.axes.length; i++) {\n                        plotArea.removeAxis(this$1.axes[i]);\n                    }\n                    for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n                        plotArea.removeChart(this$1.charts[i$1]);\n                    }\n                }\n                this.axes = [];\n                this.charts = [];\n                this.content.destroy();\n                this.content.children = [];\n                this.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var content;\n                if (last(this.children) === this.content) {\n                    content = this.children.pop();\n                }\n                BoxElement.fn.reflow.call(this, targetBox);\n                if (content) {\n                    this.children.push(content);\n                }\n                if (this.title) {\n                    this.contentBox.y1 += this.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            clipRoot: function () {\n                return this;\n            },\n            createGridLines: function () {\n                var axes = this.axes;\n                var allAxes = axes.concat(this.parent.axes);\n                var vGridLines = [];\n                var hGridLines = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var vertical = axis.options.vertical;\n                    var gridLines = vertical ? vGridLines : hGridLines;\n                    for (var j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            var altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = this.createGradient.bind(this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n            },\n            chartsBox: function () {\n                var axes = this.axes;\n                var length = axes.length;\n                var chartsBox = new Box();\n                for (var idx = 0; idx < length; idx++) {\n                    var axis = axes[idx];\n                    var axisValueField = axis.options.vertical ? Y : X;\n                    var lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    var length$1 = allAxes.length;\n                    for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n                        var axis$1 = allAxes[idx$1];\n                        if (!axis$1.options.vertical) {\n                            var lineBox$1 = axis$1.lineBox();\n                            chartsBox.x1 = lineBox$1.x1;\n                            chartsBox.x2 = lineBox$1.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            }\n        });\n        var ID = 1;\n        function paneID() {\n            return 'pane' + ID++;\n        }\n        Pane.prototype.isStackRoot = true;\n        setDefaultOptions(Pane, {\n            zIndex: -1,\n            shrinkToFit: true,\n            title: { align: LEFT },\n            visible: true\n        });\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.initFields(series, options);\n                this.series = series;\n                this.initSeries();\n                this.charts = [];\n                this.options.legend.items = [];\n                this.axes = [];\n                this.crosshairs = [];\n                this.chartService = chartService;\n                this.createPanes();\n                this.render();\n                this.createCrosshairs();\n            },\n            initFields: function () {\n            },\n            initSeries: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    series[i].index = i;\n                }\n            },\n            createPanes: function () {\n                var this$1 = this;\n                var defaults = { title: { color: (this.options.title || {}).color } };\n                var panes = [];\n                var paneOptions = this.options.panes || [];\n                var panesLength = Math.max(paneOptions.length, 1);\n                function setTitle(options, defaults) {\n                    if (isString(options.title)) {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (var i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    var currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    this$1.append(currentPane);\n                }\n                this.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    for (var j = 0; j < pane.axes.length; j++) {\n                        var axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            var currentCrosshair = new Crosshair(this$1.chartService, axis, axis.options.crosshair);\n                            this$1.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var crosshairs = this.crosshairs;\n                var axes = pane.axes;\n                for (var i = crosshairs.length - 1; i >= 0; i--) {\n                    for (var j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var pane = this.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                this.axes.push(axis);\n                axis.plotArea = this;\n            },\n            removeAxis: function (axisToRemove) {\n                var this$1 = this;\n                var filteredAxes = [];\n                for (var i = 0; i < this.axes.length; i++) {\n                    var axis = this$1.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                this.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                this.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    this.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var this$1 = this;\n                var filteredCharts = [];\n                for (var i = 0; i < this.charts.length; i++) {\n                    var chart = this$1.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                this.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length;\n                var legend = this.options.legend;\n                var labels = legend.labels || {};\n                var inactiveItems = legend.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                var data = [];\n                for (var i = 0; i < count; i++) {\n                    var currentSeries = series[i];\n                    var seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    var text = currentSeries.name || '';\n                    var labelTemplate = seriesVisible ? labels.template : inactiveItemsLabels.template || labels.template;\n                    if (labelTemplate) {\n                        text = TemplateService.compile(labelTemplate)({\n                            text: text,\n                            series: currentSeries\n                        });\n                    }\n                    var defaults = currentSeries._defaults;\n                    var color = currentSeries.color;\n                    if (isFunction(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    var itemLabelOptions = void 0, markerColor = void 0;\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (text) {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [];\n                var yAxes = [];\n                for (var paneIx = 0; paneIx < panes.length; paneIx++) {\n                    var paneAxes = panes[paneIx].axes;\n                    for (var axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        var axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var this$1 = this;\n                var series = this.series;\n                var seriesByPane = {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var pane = this$1.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var result = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var options = this.options.plotArea;\n                var panes = this.panes;\n                var margin = getSpacing(options.margin);\n                this.box = targetBox.clone().unpad(margin);\n                this.reflowPanes();\n                this.reflowAxes(panes);\n                this.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var this$1 = this;\n                var panesArray = [].concat(panes);\n                this.initSeries();\n                for (var i = 0; i < panesArray.length; i++) {\n                    this$1.removeCrosshairs(panesArray[i]);\n                    panesArray[i].empty();\n                }\n                this.render(panesArray);\n                this.reflowAxes(this.panes);\n                this.reflowCharts(panesArray);\n                this.createCrosshairs(panesArray);\n                for (var i$1 = 0; i$1 < panesArray.length; i$1++) {\n                    panesArray[i$1].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                var valuesToAdd = crossingAxes.length - crossingValues.length;\n                var defaultValue = crossingValues[0] || 0;\n                for (var i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true);\n                var slotEdge = axis.options.reverse ? 2 : 1;\n                var targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true);\n                var targetEdge = targetAxis.options.reverse ? 2 : 1;\n                var axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var this$1 = this;\n                var xAnchor = xAxes[0];\n                var yAnchor = yAxes[0];\n                var xAnchorCrossings = this.axisCrossingValues(xAnchor, yAxes);\n                var yAnchorCrossings = this.axisCrossingValues(yAnchor, xAxes);\n                var leftAnchors = {};\n                var rightAnchors = {};\n                var topAnchors = {};\n                var bottomAnchors = {};\n                for (var i = 0; i < yAxes.length; i++) {\n                    var axis = yAxes[i];\n                    var pane = axis.pane;\n                    var paneId = pane.id;\n                    var anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    var anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = this$1.axisCrossingValues(anchor, yAxes);\n                    }\n                    this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        leftAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        rightAnchors[paneId] = axis;\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (var i$1 = 0; i$1 < xAxes.length; i$1++) {\n                    var axis$1 = xAxes[i$1];\n                    var pane$1 = axis$1.pane;\n                    var paneId$1 = pane$1.id;\n                    var anchor$1 = paneAnchor(yAxes, pane$1) || yAnchor;\n                    var anchorCrossings$1 = yAnchorCrossings;\n                    if (anchor$1 !== yAnchor) {\n                        anchorCrossings$1 = this$1.axisCrossingValues(anchor$1, xAxes);\n                    }\n                    this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                    if (axis$1.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis$1.lineBox().y1) === round(anchor$1.lineBox().y1)) {\n                        if (!axis$1._mirrored) {\n                            axis$1.options.labels.mirror = !axis$1.options.labels.mirror;\n                            axis$1._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                        if (topAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(topAnchors[paneId$1].box, TOP).translate(0, -axis$1.options.margin));\n                        }\n                        topAnchors[paneId$1] = axis$1;\n                    }\n                    if (round(axis$1.lineBox().y2, datavizConstants.COORD_PRECISION) === round(anchor$1.lineBox().y2, datavizConstants.COORD_PRECISION)) {\n                        if (bottomAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(bottomAnchors[paneId$1].box, BOTTOM).translate(0, axis$1.options.margin));\n                        }\n                        bottomAnchors[paneId$1] = axis$1;\n                    }\n                    if (i$1 !== 0) {\n                        axis$1.alignTo(xAnchor);\n                        axis$1.reflow(axis$1.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var axisBox = axisGroupBox(axes);\n                var overflowX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = Math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                        var currentAxis = axes[i$1];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var shrinked;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var axes = currentPane.axes;\n                    var overflowY = Math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (var j = 0; j < axes.length; j++) {\n                            var currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var offsetX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var paneAxes = currentPane.axes;\n                    var paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        var axisBox = axisGroupBox(paneAxes);\n                        var offsetY = Math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        offsetX = Math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        for (var j = 0; j < paneAxes.length; j++) {\n                            var currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                    var currentAxis$1 = axes[i$1];\n                    currentAxis$1.reflow(currentAxis$1.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var this$1 = this;\n                var axes = this.groupAxes(panes);\n                for (var i = 0; i < panes.length; i++) {\n                    this$1.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    this.alignAxes(axes.x, axes.y);\n                    this.shrinkAxisWidth(panes);\n                    this.autoRotateAxisLabels(axes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisWidth(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.shrinkAxisHeight(panes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisHeight(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref.axes;\n                var panes = ref.panes;\n                var rotated;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (var idx$1 = 0; idx$1 < panes.length; idx$1++) {\n                        this$1.reflowPaneAxes(panes[idx$1]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes;\n                var length = axes.length;\n                if (length > 0) {\n                    for (var i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var charts = this.charts;\n                var count = charts.length;\n                var box = this.box;\n                for (var i = 0; i < count; i++) {\n                    var chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var ref = this;\n                var box = ref.box;\n                var panes = ref.panes;\n                var panesLength = panes.length;\n                var remainingHeight = box.height();\n                var remainingPanes = panesLength;\n                var autoHeightPanes = 0;\n                var top = box.y1;\n                for (var i = 0; i < panesLength; i++) {\n                    var currentPane = panes[i];\n                    var height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            var percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (var i$1 = 0; i$1 < panesLength; i$1++) {\n                    var currentPane$1 = panes[i$1];\n                    if (!currentPane$1.options.height) {\n                        currentPane$1.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (var i$2 = 0; i$2 < panesLength; i$2++) {\n                    var currentPane$2 = panes[i$2];\n                    var paneBox = box.clone().move(box.x1, top);\n                    currentPane$2.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane$2.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var axes = this.axes;\n                var axesCount = axes.length;\n                var box;\n                for (var i = 0; i < axesCount; i++) {\n                    var axisA = axes[i];\n                    for (var j = 0; j < axesCount; j++) {\n                        var axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            var lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || this.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var opacity = options.opacity;\n                var background = options.background;\n                var border = options.border;\n                if (border === void 0) {\n                    border = {};\n                }\n                if (isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new drawing.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts;\n                var result = [];\n                if (categoryIndex !== null) {\n                    for (var i = 0; i < charts.length; i++) {\n                        var chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        var points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (var j = 0; j < points.length; j++) {\n                                var point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                return this.filterPoints(function (point) {\n                    return point.series.index === seriesIndex;\n                });\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts;\n                var result = [];\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            findPoint: function (callback) {\n                var charts = this.charts;\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && callback(point)) {\n                            return point;\n                        }\n                    }\n                }\n            },\n            paneByPoint: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            }\n        });\n        function axisGroupBox(axes) {\n            var length = axes.length;\n            var box;\n            if (length > 0) {\n                for (var i = 0; i < length; i++) {\n                    var axisBox = axes[i].contentBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || new Box();\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        setDefaultOptions(PlotAreaBase, {\n            series: [],\n            plotArea: { margin: {} },\n            background: '',\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            legend: {\n                inactiveItems: {\n                    labels: { color: '#919191' },\n                    markers: { color: '#919191' }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var SeriesAggregator = Class.extend({\n            init: function (series, binder, defaultAggregates) {\n                var canonicalFields = binder.canonicalFields(series);\n                var valueFields = binder.valueFields(series);\n                var sourceFields = binder.sourceFields(series, canonicalFields);\n                var seriesFields = this._seriesFields = [];\n                var defaults = defaultAggregates.query(series.type);\n                var rootAggregate = series.aggregate || defaults;\n                this._series = series;\n                this._binder = binder;\n                for (var i = 0; i < canonicalFields.length; i++) {\n                    var field = canonicalFields[i];\n                    var fieldAggregate = void 0;\n                    if (isObject(rootAggregate)) {\n                        fieldAggregate = rootAggregate[field];\n                    } else if (i === 0 || inArray(field, valueFields)) {\n                        fieldAggregate = rootAggregate;\n                    } else {\n                        break;\n                    }\n                    if (fieldAggregate) {\n                        seriesFields.push({\n                            canonicalName: field,\n                            name: sourceFields[i],\n                            transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                        });\n                    }\n                }\n            },\n            aggregatePoints: function (srcPoints, group) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref._series;\n                var seriesFields = ref._seriesFields;\n                var data = this._bindPoints(srcPoints || []);\n                var firstDataItem = data.dataItems[0];\n                var result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (var i = 0; i < seriesFields.length; i++) {\n                    var field = seriesFields[i];\n                    var srcValues = this$1._bindField(data.values, field.canonicalName);\n                    var value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            setValue(field.name, result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var ref = this;\n                var binder = ref._binder;\n                var series = ref._series;\n                var values = [];\n                var dataItems = [];\n                for (var i = 0; i < points.length; i++) {\n                    var pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [];\n                var count = data.length;\n                for (var i = 0; i < count; i++) {\n                    var item = data[i];\n                    var valueFields = item.valueFields;\n                    var value = void 0;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        });\n        function setValue(fieldName, target, value) {\n            var parentObj = target;\n            var field = fieldName;\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.');\n                while (parts.length > 1) {\n                    field = parts.shift();\n                    if (!defined(parentObj[field])) {\n                        parentObj[field] = {};\n                    }\n                    parentObj = parentObj[field];\n                }\n                field = parts.shift();\n            }\n            parentObj[field] = value;\n        }\n        var DefaultAggregates = Class.extend({\n            init: function () {\n                this._defaults = {};\n            },\n            register: function (seriesTypes, aggregates) {\n                var this$1 = this;\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this$1._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        });\n        DefaultAggregates.current = new DefaultAggregates();\n        var RangeBar = Bar.extend({\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelText;\n                if (options.template) {\n                    var labelTemplate = TemplateService.compile(options.template);\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total,\n                        series: this.series\n                    });\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options));\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var ref = this;\n                var labelFrom = ref.labelFrom;\n                var labelTo = ref.labelTo;\n                var value = ref.value;\n                this.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = value.from > value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = value.to > value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n            }\n        });\n        RangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n            labels: { format: '{0} - {1}' },\n            tooltip: { format: '{1}' }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value.from, point.value.to);\n            },\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var from = value.from;\n                var to = value.to;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, from);\n                    axisRange.max = Math.max(axisRange.max, from);\n                    axisRange.min = Math.min(axisRange.min, to);\n                    axisRange.max = Math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        RangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var oPoints = [];\n                var cPoints = [];\n                var lhPoints = [];\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                var oSlot = valueAxis.getSlot(value.open, value.open);\n                var cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                var mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                this.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                this.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                this.reflowNote();\n            },\n            createBody: function () {\n            }\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                ChartElement.fn.init.call(this);\n                this.from = from;\n                this.to = to;\n                this.series = series;\n            },\n            linePoints: function () {\n                var from = this.from;\n                var ref = this;\n                var fromBox = ref.from.box;\n                var toBox = ref.to.box;\n                var points = [];\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        setDefaultOptions(WaterfallSegment, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to = void 0;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: categories[categoryIx],\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint = void 0;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this$1.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        function filterSeriesByType(series, types) {\n            var result = [];\n            var seriesTypes = [].concat(types);\n            for (var idx = 0; idx < series.length; idx++) {\n                var currentSeries = series[idx];\n                if (inArray(currentSeries.type, seriesTypes)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type;\n            var dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        function getDateField(field, row, intlService) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field;\n            var value = row[key];\n            if (!value) {\n                value = parseDate(intlService, getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            initFields: function (series) {\n                var this$1 = this;\n                this.namedCategoryAxes = {};\n                this.namedValueAxes = {};\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    this.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            this$1.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n            },\n            render: function (panes) {\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                this.createCategoryAxes(panes);\n                this.aggregateCategories(panes);\n                this.createCategoryAxesLabels(panes);\n                this.createCharts(panes);\n                this.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete this.namedCategoryAxes[axisName];\n                } else {\n                    this.valueAxisRangeTracker.reset(axisName);\n                    delete this.namedValueAxes[axisName];\n                }\n                if (axis === this.categoryAxis) {\n                    delete this.categoryAxis;\n                }\n                if (axis === this.valueAxis) {\n                    delete this.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var this$1 = this;\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this$1.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var this$1 = this;\n                var series = this.srcSeries || this.series;\n                var processedSeries = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n                    var axisPane = this$1.findPane(categoryAxis.options.pane);\n                    var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n                    } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                this.srcSeries = series;\n                this.series = processedSeries;\n            },\n            filterSeries: function (series, categoryAxis) {\n                var range = categoryAxis.totalRangeIndices();\n                var justified = categoryAxis.options.justified;\n                var outOfRangePoints = inArray(series.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                range.min = isNumber(categoryAxis.options.min) ? Math.floor(range.min) : 0;\n                if (isNumber(categoryAxis.options.max)) {\n                    range.max = justified ? Math.floor(range.max) + 1 : Math.ceil(range.max);\n                } else {\n                    range.max = series.data.length;\n                }\n                var currentSeries = deepExtend({}, series);\n                if (outOfRangePoints) {\n                    var minCategory = range.min - 1;\n                    var srcCategories = categoryAxis.options.srcCategories || [];\n                    if (minCategory >= 0 && minCategory < currentSeries.data.length) {\n                        currentSeries._outOfRangeMinPoint = {\n                            item: currentSeries.data[minCategory],\n                            category: srcCategories[minCategory],\n                            categoryIx: -1\n                        };\n                    }\n                    if (range.max < currentSeries.data.length) {\n                        currentSeries._outOfRangeMaxPoint = {\n                            item: currentSeries.data[range.max],\n                            category: srcCategories[range.max],\n                            categoryIx: range.max - range.min\n                        };\n                    }\n                }\n                categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n                return currentSeries;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var this$1 = this;\n                var outOfRangePoints = inArray(series.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                var ref = categoryAxis.options;\n                var categories = ref.categories;\n                var srcCategories = ref.srcCategories;\n                if (srcCategories === void 0) {\n                    srcCategories = categories;\n                }\n                var dataItems = ref.dataItems;\n                if (dataItems === void 0) {\n                    dataItems = [];\n                }\n                var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                var aggregatorSeries = deepExtend({}, series);\n                var result = deepExtend({}, series);\n                var srcData = series.data;\n                var srcPoints = [];\n                var outOfRangeMinIdx = MIN_VALUE;\n                var outOfRangeMaxIdx = MAX_VALUE;\n                var getFn = getField;\n                var outOfRangeMinCategory, outOfRangeMaxCategory;\n                if (dateAxis) {\n                    getFn = getDateField;\n                }\n                for (var i = 0; i < srcData.length; i++) {\n                    var category = void 0;\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[i], this$1.chartService.intl);\n                    } else {\n                        category = srcCategories[i];\n                    }\n                    if (defined(category)) {\n                        var categoryIx = categoryAxis.categoryIndex(category);\n                        if (0 <= categoryIx && categoryIx < categories.length) {\n                            srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                            srcPoints[categoryIx].push(i);\n                        } else if (outOfRangePoints) {\n                            if (categoryIx < 0) {\n                                if (categoryIx === outOfRangeMinIdx) {\n                                    outOfRangeMinCategory.points.push(i);\n                                } else if (categoryIx > outOfRangeMinIdx) {\n                                    outOfRangeMinIdx = categoryIx;\n                                    outOfRangeMinCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            } else if (categoryIx >= categories.length) {\n                                if (categoryIx === outOfRangeMaxIdx) {\n                                    outOfRangeMaxCategory.points.push(i);\n                                } else if (categoryIx < outOfRangeMaxIdx) {\n                                    outOfRangeMaxIdx = categoryIx;\n                                    outOfRangeMaxCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n                var aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n                var data = result.data = [];\n                for (var i$1 = 0; i$1 < categories.length; i$1++) {\n                    data[i$1] = aggregator.aggregatePoints(srcPoints[i$1], categories[i$1]);\n                    if (srcPoints[i$1]) {\n                        dataItems[i$1] = data[i$1];\n                    }\n                }\n                if (outOfRangeMinCategory && data.length) {\n                    result._outOfRangeMinPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMinCategory.points, outOfRangeMinCategory.category),\n                        categoryIx: outOfRangeMinIdx,\n                        category: outOfRangeMinCategory.category\n                    };\n                }\n                if (outOfRangeMaxCategory && data.length) {\n                    result._outOfRangeMaxPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMaxCategory.points, outOfRangeMaxCategory.category),\n                        categoryIx: outOfRangeMaxIdx,\n                        category: outOfRangeMaxCategory.category\n                    };\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var series = chart.options.series;\n                var categoryAxis = this.seriesCategoryAxis(series[0]);\n                var categories = categoryAxis.options.categories;\n                var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n                while (categoriesToAdd--) {\n                    categories.push('');\n                }\n                this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var axisName = series.axis;\n                var axisOptions = [].concat(options.valueAxis);\n                var axis = grep(axisOptions, function (a) {\n                    return a.name === axisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = (panes[0] || {}).name || 'default';\n                var paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var axisName = series.categoryAxis;\n                var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack;\n                var isStacked100 = stack && stack.type === '100%';\n                var clip = pane.options.clip;\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var categoryAxes = [];\n                var unique = {};\n                for (var idx = 0; idx < series.length; idx++) {\n                    var name = series[idx].categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        categoryAxes.push(name);\n                    }\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(series, axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var barChart = new BarChart(this, $.extend({\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var rangeColumnChart = new RangeBarChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var bulletChart = new BulletChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var lineChart = new LineChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var areaChart = new AreaChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(areaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new OHLCChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new CandlestickChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new BoxPlotChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var waterfallChart = new WaterfallChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var this$1 = this;\n                var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n                for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n                    var currentSeries = this$1.series[seriesIx];\n                    if (currentSeries.type === LINE || currentSeries.type === AREA) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n                    var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var this$1 = this;\n                var invertAxes = this.invertAxes;\n                var definitions = [].concat(this.options.categoryAxis);\n                var axes = [];\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var categories = axisOptions.categories;\n                        if (categories === void 0) {\n                            categories = [];\n                        }\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = this$1.isJustified();\n                        }\n                        if (this$1.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        var categoryAxis = void 0;\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new DateCategoryAxis(axisOptions, this$1.chartService);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                        }\n                        if (name) {\n                            if (this$1.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        this$1.appendAxis(categoryAxis);\n                    }\n                }\n                var primaryAxis = this.categoryAxis || axes[0];\n                this.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisY = primaryAxis;\n                } else {\n                    this.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (!inArray(currentSeries.type, [\n                            AREA,\n                            VERTICAL_AREA\n                        ])) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var this$1 = this;\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var definitions = [].concat(this.options.valueAxis);\n                var invertAxes = this.invertAxes;\n                var baseOptions = { vertical: !invertAxes };\n                var axes = [];\n                if (this.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = Math.min(range.min, defaultRange.min);\n                            range.max = Math.max(range.max, defaultRange.max);\n                        }\n                        var axisType = void 0;\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = dataviz.LogarithmicAxis;\n                        } else {\n                            axisType = dataviz.NumericAxis;\n                        }\n                        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n                        if (name) {\n                            if (this$1.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        this$1.appendAxis(valueAxis);\n                    }\n                }\n                var primaryAxis = this.valueAxis || axes[0];\n                this.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisX = primaryAxis;\n                } else {\n                    this.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var pane = this.pointPane(point);\n                var categories = [];\n                var values = [];\n                if (!pane) {\n                    return;\n                }\n                var allAxes = pane.axes;\n                for (var i = 0; i < allAxes.length; i++) {\n                    var axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var axesOptions = axis instanceof CategoryAxis ? [].concat(this.options.categoryAxis) : [].concat(this.options.valueAxis);\n                deepExtend(axesOptions[axis.axisIndex], options);\n            }\n        });\n        function groupSeries(series, axis, axisIx) {\n            return grep(series, function (s) {\n                return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n            });\n        }\n        setDefaultOptions(CategoricalPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        deepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                var this$1 = this;\n                var arrayPoints = [].concat(points);\n                this.hide();\n                for (var i = 0; i < arrayPoints.length; i++) {\n                    var point = arrayPoints[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this$1.togglePointHighlight(point, true);\n                        this$1._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        stackValue: point.stackValue,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var this$1 = this;\n                var points = this._points;\n                while (points.length) {\n                    this$1.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element === point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var event = e.event;\n            var accept = key === 'none' && !(event.ctrlKey || event.shiftKey || event.altKey) || event[key + 'Key'];\n            return accept;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            start: function (e) {\n                this._active = acceptKey(e, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var ref = this;\n                var plotArea = ref.plotArea;\n                var axisRanges = ref.axisRanges;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() !== position) {\n                    var axes = plotArea.axes;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        var axis = axes[idx];\n                        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                            var range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        Pannable.prototype.options = {\n            key: 'none',\n            lock: 'none'\n        };\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this.createElement();\n            },\n            createElement: function () {\n                var marquee = this._marquee = document.createElement('div');\n                marquee.className = 'k-marquee';\n                var marqueeColor = document.createElement('div');\n                marqueeColor.className = 'k-marquee-color';\n                marquee.appendChild(marqueeColor);\n            },\n            removeElement: function () {\n                if (this._marquee.parentNode) {\n                    this._marquee.parentNode.removeChild(this._marquee);\n                }\n            },\n            setStyles: function (styles) {\n                elementStyles(this._marquee, styles);\n            },\n            start: function (e) {\n                if (acceptKey(e, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._eventCoordinates(e);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    if (zoomPane && zoomPane.clipBox()) {\n                        var clipBox = zoomPane.clipBox().clone();\n                        var offset = this._elementOffset();\n                        clipBox.translate(offset.left, offset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        document.body.appendChild(this._marquee);\n                        this.setStyles({\n                            left: e.pageX + 1,\n                            top: e.pageY + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var ref = elementStyles(chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref.paddingLeft;\n                var paddingTop = ref.paddingTop;\n                var offset = dataviz.elementOffset(chartElement);\n                return {\n                    left: paddingLeft + offset.left,\n                    top: paddingTop + offset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    this.setStyles(this._selectionPosition(e));\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset$$1 = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset$$1.left;\n                    selectionPosition.top -= elementOffset$$1.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this.removeElement();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this.removeElement();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.pointsRange(start, end);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var clipBox = this._zoomPaneClipBox;\n                var startLocation = {\n                    x: e.x.startLocation,\n                    y: e.y.startLocation\n                };\n                var pageX = e.x.location;\n                var pageY = e.y.location;\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = Math.min(startLocation.x, pageX);\n                var top = Math.min(startLocation.y, pageY);\n                var width = Math.abs(startLocation.x - pageX);\n                var height = Math.abs(startLocation.y - pageY);\n                if (lock === X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock === Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (pageX > clipBox.x2) {\n                    width = clipBox.x2 - startLocation.x;\n                }\n                if (pageX < clipBox.x1) {\n                    width = startLocation.x - clipBox.x1;\n                }\n                if (pageY > clipBox.y2) {\n                    height = clipBox.y2 - startLocation.y;\n                }\n                if (pageY < clipBox.y1) {\n                    height = startLocation.y - clipBox.y1;\n                }\n                return {\n                    left: Math.max(left, clipBox.x1),\n                    top: Math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        ZoomSelection.prototype.options = {\n            key: 'shift',\n            lock: 'none'\n        };\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n            },\n            render: function () {\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var vertical = options.vertical;\n                this.visual = new drawing.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal'\n                });\n                for (var idx = 0; idx < children.length; idx++) {\n                    var legendItem = children[idx];\n                    legendItem.reflow(new Box());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: function () {\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.createContainer();\n                this.createMarker();\n                this.createLabel();\n            },\n            createContainer: function () {\n                this.container = new dataviz.FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER\n                });\n                this.append(this.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labelOptions = deepExtend({}, options.labels);\n                this.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                BoxElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    e.preventDefault();\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        sender: this.getSender(),\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: this.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            this$1.renderComplete();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var HORIZONTAL = 'horizontal';\n        var POINTER = 'pointer';\n        var CUSTOM = 'custom';\n        var Legend = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!inArray(this.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    this.options.position = RIGHT;\n                }\n                this.createContainer();\n                this.createItems();\n            },\n            createContainer: function () {\n                var options = this.options;\n                var position = options.position;\n                var userAlign = options.align;\n                var align = position;\n                var vAlign = CENTER;\n                if (position === CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign === 'start') {\n                        align = LEFT;\n                    } else if (userAlign === 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign === 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign === 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                this.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                this.append(this.container);\n            },\n            createItems: function () {\n                var chartService = this.getService();\n                var options = this.options;\n                var vertical = this.isVertical();\n                var innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing\n                }, chartService);\n                var items = options.items;\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                var count = items.length;\n                for (var i = 0; i < count; i++) {\n                    var item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                this.container.append(innerElement);\n            },\n            isVertical: function () {\n                var ref = this.options;\n                var orientation = ref.orientation;\n                var position = ref.position;\n                var vertical = position === CUSTOM && orientation !== HORIZONTAL || (defined(orientation) ? orientation !== HORIZONTAL : inArray(position, [\n                    LEFT,\n                    RIGHT\n                ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var legendBox = targetBox.clone();\n                if (!this.hasItems()) {\n                    this.box = legendBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    this.containerCustomReflow(legendBox);\n                    this.box = legendBox;\n                } else {\n                    this.containerReflow(legendBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var position = options.position;\n                var width = options.width;\n                var height = options.height;\n                var pos = position === TOP || position === BOTTOM ? X : Y;\n                var vertical = this.isVertical();\n                var alignTarget = targetBox.clone();\n                var containerBox = targetBox.clone();\n                if (position === LEFT || position === RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                var box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    this.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                this.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var offsetX = options.offsetX;\n                var offsetY = options.offsetY;\n                var width = options.width;\n                var height = options.height;\n                var vertical = this.isVertical();\n                var containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(new Box(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        setDefaultOptions(Legend, {\n            position: RIGHT,\n            items: [],\n            labels: { margin: { left: 6 } },\n            offsetX: 0,\n            offsetY: 0,\n            margin: getSpacing(5),\n            padding: getSpacing(5),\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            item: { cursor: POINTER },\n            spacing: 6,\n            background: '',\n            zIndex: 1,\n            markers: {\n                border: { width: 0 },\n                width: 15,\n                height: 3,\n                type: 'rect',\n                align: LEFT,\n                vAlign: CENTER\n            }\n        });\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options, chartService) {\n                var registry = this._registry;\n                var match = registry[0];\n                var series;\n                for (var idx = 0; idx < registry.length; idx++) {\n                    var entry = registry[idx];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options, chartService);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var ZOOM_ACCELERATION = 3;\n        var SELECTOR_HEIGHT_ADJUST = 0.1;\n        function createDiv(className) {\n            var element = document.createElement('div');\n            if (className) {\n                element.className = className;\n            }\n            return element;\n        }\n        function closestHandle(element) {\n            var current = element;\n            while (current && !hasClasses(current, 'k-handle')) {\n                current = current.parentNode;\n            }\n            return current;\n        }\n        var Selection = Class.extend({\n            init: function (chart, categoryAxis, options, observer) {\n                var chartElement = chart.element;\n                var valueAxis = this.getValueAxis(categoryAxis);\n                this.options = deepExtend({}, this.options, options);\n                this.chart = chart;\n                this.observer = observer;\n                this.chartElement = chartElement;\n                this.categoryAxis = categoryAxis;\n                this._dateAxis = this.categoryAxis instanceof DateCategoryAxis;\n                this.valueAxis = valueAxis;\n                this.initOptions();\n                if (this.options.visible) {\n                    this.createElements();\n                    this.set(this._index(this.options.from), this._index(this.options.to));\n                    this.bindEvents();\n                }\n            },\n            createElements: function () {\n                var options = this.options;\n                var wrapper = this.wrapper = createDiv('k-selector');\n                elementStyles(wrapper, {\n                    top: options.offset.top,\n                    left: options.offset.left,\n                    width: options.width,\n                    height: options.height\n                });\n                var selection = this.selection = createDiv('k-selection');\n                this.leftMask = createDiv('k-mask');\n                this.rightMask = createDiv('k-mask');\n                wrapper.appendChild(this.leftMask);\n                wrapper.appendChild(this.rightMask);\n                wrapper.appendChild(selection);\n                selection.appendChild(createDiv('k-selection-bg'));\n                var leftHandle = this.leftHandle = createDiv('k-handle k-left-handle');\n                var rightHandle = this.rightHandle = createDiv('k-handle k-right-handle');\n                leftHandle.appendChild(createDiv());\n                rightHandle.appendChild(createDiv());\n                selection.appendChild(leftHandle);\n                selection.appendChild(rightHandle);\n                this.chartElement.appendChild(wrapper);\n                var selectionStyles = elementStyles(selection, [\n                    'borderLeftWidth',\n                    'borderRightWidth',\n                    'height'\n                ]);\n                var leftHandleHeight = elementStyles(leftHandle, 'height').height;\n                var rightHandleHeight = elementStyles(rightHandle, 'height').height;\n                options.selection = {\n                    border: {\n                        left: selectionStyles.borderLeftWidth,\n                        right: selectionStyles.borderRightWidth\n                    }\n                };\n                elementStyles(leftHandle, { top: (selectionStyles.height - leftHandleHeight) / 2 });\n                elementStyles(rightHandle, { top: (selectionStyles.height - rightHandleHeight) / 2 });\n                wrapper.style.cssText = wrapper.style.cssText;\n            },\n            bindEvents: function () {\n                this._mousewheelHandler = this.options.mousewheel !== false ? this._mousewheel.bind(this) : stopPropagation;\n                var obj;\n                bindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                this._domEvents = services.DomEventsBuilder.create(this.wrapper, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    press: this._press.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            initOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var valueAxis = ref.valueAxis;\n                var categoryAxisLineBox = categoryAxis.lineBox();\n                var valueAxisLineBox = valueAxis.lineBox();\n                var intlService = this.chart.chartService.intl;\n                if (this._dateAxis) {\n                    deepExtend(options, {\n                        min: parseDate(intlService, options.min),\n                        max: parseDate(intlService, options.max),\n                        from: parseDate(intlService, options.from),\n                        to: parseDate(intlService, options.to)\n                    });\n                }\n                var ref$1 = elementStyles(this.chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref$1.paddingLeft;\n                var paddingTop = ref$1.paddingTop;\n                this.options = deepExtend({}, {\n                    width: categoryAxisLineBox.width(),\n                    height: valueAxisLineBox.height() + SELECTOR_HEIGHT_ADJUST,\n                    padding: {\n                        left: paddingLeft,\n                        top: paddingTop\n                    },\n                    offset: {\n                        left: valueAxisLineBox.x2 + paddingLeft,\n                        top: valueAxisLineBox.y1 + paddingTop\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n            },\n            destroy: function () {\n                if (this._domEvents) {\n                    this._domEvents.destroy();\n                    delete this._domEvents;\n                }\n                clearTimeout(this._mwTimeout);\n                this._state = null;\n                if (this.wrapper) {\n                    var obj;\n                    unbindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                    this.chartElement.removeChild(this.wrapper);\n                }\n            },\n            _rangeEventArgs: function (range) {\n                return {\n                    axis: this.categoryAxis.options,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var options = this.options;\n                var target = eventElement(e);\n                if (this._state || !target) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                this._state = {\n                    moveTarget: closestHandle(target) || target,\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs({\n                    from: this._index(options.from),\n                    to: this._index(options.to)\n                });\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    handle = closestHandle(eventElement(e));\n                }\n                if (handle) {\n                    dataviz.addClass(handle, 'k-handle-active');\n                }\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var ref = this;\n                var state = ref._state;\n                var options = ref.options;\n                var categories = ref.categoryAxis.options.categories;\n                var range = state.range;\n                var target = state.moveTarget;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var delta = state.startLocation - e.x.location;\n                var oldRange = {\n                    from: range.from,\n                    to: range.to\n                };\n                var span = range.to - range.from;\n                var scale = elementStyles(this.wrapper, 'width').width / (categories.length - 1);\n                var offset = Math.round(delta / scale);\n                if (!target) {\n                    return;\n                }\n                if (hasClasses(target, 'k-selection k-selection-bg')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - span);\n                    range.to = Math.min(range.from + span, max);\n                } else if (hasClasses(target, 'k-left-handle')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - 1);\n                    range.to = Math.max(range.from + 1, range.to);\n                } else if (hasClasses(target, 'k-right-handle')) {\n                    range.to = Math.min(Math.max(min + 1, to - offset), max);\n                    range.from = Math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.move(range.from, range.to);\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        dataviz.removeClass(moveTarget, 'k-handle-active');\n                    }\n                    var range = this._state.range;\n                    this.set(range.from, range.to);\n                    this.trigger(SELECT_END, this._rangeEventArgs(range));\n                    delete this._state;\n                }\n            },\n            _tap: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var coords = this.chart._eventCoordinates(e);\n                var categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var span = to - from;\n                var mid = from + span / 2;\n                var range = {};\n                var rightClick = e.event.which === 3;\n                var offset = Math.round(mid - categoryIx);\n                if (this._state || rightClick) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = Math.min(Math.max(min, from - offset), max - span);\n                range.to = Math.min(range.from + span, max);\n                this._start(e);\n                if (this._state) {\n                    this._state.range = range;\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                    this._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                this._start({ target: this.selection });\n                if (this._state) {\n                    var range = this._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (Math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (this.options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (this.expand(delta)) {\n                        this.trigger(SELECT, {\n                            axis: this.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: this._value(range.from),\n                            to: this._value(range.to)\n                        });\n                    }\n                    if (this._mwTimeout) {\n                        clearTimeout(this._mwTimeout);\n                    }\n                    this._mwTimeout = setTimeout(function () {\n                        this$1._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _gesturestart: function (e) {\n                var options = this.options;\n                this._state = {\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs(this._state.range);\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                } else {\n                    e.preventDefault();\n                }\n            },\n            _gestureend: function () {\n                if (this._state) {\n                    this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n                    delete this._state;\n                }\n            },\n            _gesturechange: function (e) {\n                var ref = this;\n                var chart = ref.chart;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n                var p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n                var left = Math.min(p0, p1);\n                var right = Math.max(p0, p1);\n                e.preventDefault();\n                range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n                this.move(range.from, range.to);\n                this.trigger(SELECT, this._rangeEventArgs(range));\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var categories = this.categoryAxis.options.categories;\n                var value = index;\n                if (this._dateAxis) {\n                    if (index > categories.length - 1) {\n                        value = this.options.max;\n                    } else {\n                        value = categories[Math.ceil(index)];\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var options = this.options;\n                var offset = options.offset;\n                var padding = options.padding;\n                var border = options.selection.border;\n                var box = this._slot(from);\n                var leftMaskWidth = round(box.x1 - offset.left + padding.left);\n                elementStyles(this.leftMask, { width: leftMaskWidth });\n                elementStyles(this.selection, { left: leftMaskWidth });\n                box = this._slot(to);\n                var rightMaskWidth = round(options.width - (box.x1 - offset.left + padding.left));\n                elementStyles(this.rightMask, { width: rightMaskWidth });\n                var distance = options.width - rightMaskWidth;\n                if (distance !== options.width) {\n                    distance += border.right;\n                }\n                elementStyles(this.rightMask, { left: distance });\n                elementStyles(this.selection, { width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0) });\n            },\n            set: function (from, to) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var fromValue = limitValue(this._index(from), min, max);\n                var toValue = limitValue(this._index(to), fromValue + 1, max);\n                if (options.visible) {\n                    this.move(fromValue, toValue);\n                }\n                options.from = this._value(fromValue);\n                options.to = this._value(toValue);\n            },\n            expand: function (delta) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var zDir = options.mousewheel.zoom;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var range = {\n                    from: from,\n                    to: to\n                };\n                var oldRange = deepExtend({}, range);\n                if (this._state) {\n                    range = this._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.set(range.from, range.to);\n                    return true;\n                }\n            },\n            getValueAxis: function (categoryAxis) {\n                var axes = categoryAxis.pane.axes;\n                var axesCount = axes.length;\n                for (var i = 0; i < axesCount; i++) {\n                    var axis = axes[i];\n                    if (axis.options.vertical !== categoryAxis.options.vertical) {\n                        return axis;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                return (this.observer || this.chart).trigger(name, args);\n            }\n        });\n        function stopPropagation(e) {\n            e.stopPropagation();\n        }\n        setDefaultOptions(Selection, {\n            visible: true,\n            mousewheel: { zoom: 'both' },\n            min: MIN_VALUE,\n            max: MAX_VALUE\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                if (!point || !point.tooltipAnchor || this._current && this._current === point) {\n                    return;\n                }\n                var options = deepExtend({}, this.options, point.options.tooltip);\n                var anchor = point.tooltipAnchor();\n                if (anchor) {\n                    this._current = point;\n                    BaseTooltip.fn.show.call(this, {\n                        point: point,\n                        anchor: anchor\n                    }, options, point);\n                } else {\n                    this.hide();\n                }\n            },\n            hide: function () {\n                delete this._current;\n                BaseTooltip.fn.hide.call(this);\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (plotArea, options) {\n                BaseTooltip.fn.init.call(this, plotArea.chartService, options);\n                this.plotArea = plotArea;\n                this.formatService = plotArea.chartService.format;\n            },\n            showAt: function (points, coords) {\n                var tooltipPoints = grep(points, function (point) {\n                    var tooltip = point.series.tooltip;\n                    var excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (tooltipPoints.length > 0) {\n                    var point = tooltipPoints[0];\n                    var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n                    var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n                    this.show({\n                        anchor: anchor,\n                        shared: true,\n                        points: points,\n                        category: point.category,\n                        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                        series: this.plotArea.series\n                    }, this.options);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var axis = this.plotArea.categoryAxis;\n                var align = {\n                    horizontal: 'left',\n                    vertical: 'center'\n                };\n                if (!axis.options.vertical) {\n                    point.x = slot.center().x;\n                }\n                return {\n                    point: point,\n                    align: align\n                };\n            },\n            _defaultAnchor: function (point, slot) {\n                var box = point.owner.pane.chartsBox();\n                var vertical = this.plotArea.categoryAxis.options.vertical;\n                var center = box.center();\n                var slotCenter = slot.center();\n                var align = {\n                    horizontal: 'center',\n                    vertical: 'center'\n                };\n                var centerPoint;\n                if (vertical) {\n                    centerPoint = new Point(center.x, slotCenter.y);\n                } else {\n                    centerPoint = new Point(slotCenter.x, center.y);\n                }\n                return {\n                    point: centerPoint,\n                    align: align\n                };\n            }\n        });\n        setDefaultOptions(SharedTooltip, { categoryFormat: '{0:d}' });\n        var BarChartAnimation = Animation.extend({\n            setup: function () {\n                var ref = this;\n                var element = ref.element;\n                var options = ref.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new GeometryPoint(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = dataviz.interpolateValue(this.fromScale.x, 1, pos);\n                var scaleY = dataviz.interpolateValue(this.fromScale.y, 1, pos);\n                this.element.transform(transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        setDefaultOptions(BarChartAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register(BAR, BarChartAnimation);\n        var BubbleAnimation = Animation.extend({\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.center));\n            }\n        });\n        setDefaultOptions(BubbleAnimation, { easing: 'easeOutElastic' });\n        AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var FadeInAnimation = Animation.extend({\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        setDefaultOptions(FadeInAnimation, {\n            duration: 200,\n            easing: 'linear'\n        });\n        AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var PieAnimation = Animation.extend({\n            setup: function () {\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.options.center));\n            }\n        });\n        setDefaultOptions(PieAnimation, {\n            easing: 'easeOutElastic',\n            duration: INITIAL_ANIMATION_DURATION\n        });\n        AnimationFactory.current.register(PIE, PieAnimation);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                ScatterChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.prototype, LineChartMixin);\n        var XYPlotArea = PlotAreaBase.extend({\n            initFields: function () {\n                this.namedXAxes = {};\n                this.namedYAxes = {};\n                this.xAxisRangeTracker = new AxisGroupRangeTracker();\n                this.yAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var filteredSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    this$1.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    this$1.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    this$1.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                this.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                this.xAxisRangeTracker.update(chart.xAxisRanges);\n                this.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis.options.vertical) {\n                    this.yAxisRangeTracker.reset(axisName);\n                    delete this.namedYAxes[axisName];\n                } else {\n                    this.xAxisRangeTracker.reset(axisName);\n                    delete this.namedXAxes[axisName];\n                }\n                if (axis === this.axisX) {\n                    delete this.axisX;\n                }\n                if (axis === this.axisY) {\n                    delete this.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var xAxisName = series.xAxis;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxis = grep(xAxisOptions, function (a) {\n                    return a.name === xAxisName;\n                })[0];\n                var yAxisName = series.yAxis;\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxis = grep(yAxisOptions, function (a) {\n                    return a.name === yAxisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = panes[0].name || 'default';\n                var paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterLineChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new BubbleChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var axisName = options.name;\n                var namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n                var tracker = vertical ? this.yAxisRangeTracker : this.xAxisRangeTracker;\n                var axisOptions = deepExtend({}, options, { vertical: vertical });\n                var isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC);\n                var defaultRange = tracker.query();\n                var defaultAxisRange = isLog ? {\n                    min: 0.1,\n                    max: 1\n                } : {\n                    min: 0,\n                    max: 1\n                };\n                var range = tracker.query(axisName) || defaultRange || defaultAxisRange;\n                var typeSamples = [\n                    axisOptions.min,\n                    axisOptions.max\n                ];\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName === axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        var firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var inferredDate;\n                for (var i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                var axisType;\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = dataviz.DateValueAxis;\n                } else if (isLog) {\n                    axisType = dataviz.LogarithmicAxis;\n                } else {\n                    axisType = dataviz.NumericAxis;\n                }\n                var axis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                axis.axisIndex = axisIndex;\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                this.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var this$1 = this;\n                var options = this.options;\n                var xAxesOptions = [].concat(options.xAxis);\n                var xAxes = [];\n                var yAxesOptions = [].concat(options.yAxis);\n                var yAxes = [];\n                for (var idx = 0; idx < xAxesOptions.length; idx++) {\n                    var axisPane = this$1.findPane(xAxesOptions[idx].pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(this$1.createXYAxis(xAxesOptions[idx], false, idx));\n                    }\n                }\n                for (var idx$1 = 0; idx$1 < yAxesOptions.length; idx$1++) {\n                    var axisPane$1 = this$1.findPane(yAxesOptions[idx$1].pane);\n                    if (inArray(axisPane$1, panes)) {\n                        yAxes.push(this$1.createXYAxis(yAxesOptions[idx$1], true, idx$1));\n                    }\n                }\n                this.axisX = this.axisX || xAxes[0];\n                this.axisY = this.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var allAxes = this.axes;\n                var length = allAxes.length;\n                var xValues = [];\n                var yValues = [];\n                for (var i = 0; i < length; i++) {\n                    var axis = allAxes[i];\n                    var values = axis.options.vertical ? yValues : xValues;\n                    var currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = (vertical ? axes.y : axes.x).indexOf(axis);\n                var axisOptions = [].concat(vertical ? this.options.yAxis : this.options.xAxis)[index];\n                deepExtend(axisOptions, options);\n            }\n        });\n        setDefaultOptions(XYPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(XYPlotArea.prototype, PlotAreaEventsMixin);\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.sector = sector;\n            },\n            render: function () {\n                var labels = this.options.labels;\n                var chartService = this.owner.chartService;\n                var labelText = this.value;\n                if (this._rendered || this.visible === false) {\n                    return;\n                }\n                this._rendered = true;\n                if (labels.template) {\n                    var labelTemplate = TemplateService.compile(labels.template);\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage\n                    });\n                } else if (labels.format) {\n                    labelText = chartService.format.auto(labels.format, labelText);\n                }\n                if (labels.visible && labelText) {\n                    if (labels.position === CENTER || labels.position === INSIDE_END) {\n                        if (!labels.color) {\n                            var brightnessValue = new Color(this.options.color).percBrightness();\n                            if (brightnessValue > 180) {\n                                labels.color = BLACK;\n                            } else {\n                                labels.color = WHITE;\n                            }\n                        }\n                        if (!labels.background) {\n                            labels.background = this.options.color;\n                        }\n                    } else {\n                        var themeLabels = chartService.theme.seriesDefaults.labels;\n                        labels.color = labels.color || themeLabels.color;\n                        labels.background = labels.background || themeLabels.background;\n                    }\n                    this.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: this.animationDelay\n                        }\n                    }));\n                    this.append(this.label);\n                }\n            },\n            reflow: function (targetBox) {\n                this.render();\n                this.box = targetBox;\n                this.reflowLabel();\n            },\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var labelsDistance = labelsOptions.distance;\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    var labelWidth = label.box.width();\n                    var lp;\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position === INSIDE_END) {\n                        sector.radius = sector.radius - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        var x1;\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.center.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                ChartElement.fn.createVisual.call(this);\n                if (this.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            series: this.series,\n                            percentage: this.percentage,\n                            center: new GeometryPoint(sector.center.x, sector.center.y),\n                            radius: sector.radius,\n                            innerRadius: sector.innerRadius,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            sender: this.getSender(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else {\n                        this.createSegmentVisual(this.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                var borderOptions = options.border || {};\n                var border = borderOptions.width > 0 ? {\n                    stroke: {\n                        color: borderOptions.color,\n                        width: borderOptions.width,\n                        opacity: borderOptions.opacity,\n                        dashType: borderOptions.dashType\n                    }\n                } : {};\n                var color = options.color;\n                var fill = {\n                    color: color,\n                    opacity: options.opacity\n                };\n                var visual = this.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.center.x,\n                            sector.center.y\n                        ],\n                        innerRadius: sector.innerRadius,\n                        radius: sector.radius,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new drawing.Circle(new geometry.Circle(new GeometryPoint(sector.center.x, sector.center.y), sector.radius), options);\n                }\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            },\n            createAnimation: function () {\n                var ref = this;\n                var options = ref.options;\n                var center = ref.sector.center;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var highlight = this.options.highlight || {};\n                var border = highlight.border || {};\n                return this.createSegment(this.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    center: new GeometryPoint(sector.center.x, sector.center.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function () {\n                var sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                return {\n                    point: midPoint,\n                    align: tooltipAlignment(midAndle + 180)\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        var RAD_30 = round(dataviz.rad(30), DEFAULT_PRECISION);\n        var RAD_60 = round(dataviz.rad(60), DEFAULT_PRECISION);\n        function tooltipAlignment(angle) {\n            var radians = dataviz.rad(angle);\n            var sine = round(Math.sin(radians), DEFAULT_PRECISION);\n            var cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n            var horizontal;\n            if (Math.abs(sine) > RAD_60) {\n                horizontal = CENTER;\n            } else if (cosine < 0) {\n                horizontal = RIGHT;\n            } else {\n                horizontal = LEFT;\n            }\n            var vertical;\n            if (Math.abs(sine) < RAD_30) {\n                vertical = CENTER;\n            } else if (sine < 0) {\n                vertical = BOTTOM;\n            } else {\n                vertical = TOP;\n            }\n            return {\n                horizontal: horizontal,\n                vertical: vertical\n            };\n        }\n        setDefaultOptions(PieSegment, {\n            color: WHITE,\n            overlay: { gradient: 'roundedBevel' },\n            border: { width: 0.5 },\n            labels: {\n                visible: false,\n                distance: 35,\n                font: datavizConstants.DEFAULT_FONT,\n                margin: getSpacing(0.5),\n                align: CIRCLE,\n                zIndex: 1,\n                position: OUTSIDE_END\n            },\n            animation: { type: PIE },\n            highlight: {\n                visible: true,\n                border: { width: 1 }\n            },\n            visible: true\n        });\n        deepExtend(PieSegment.prototype, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var legendOptions = this.options.legend || {};\n                var labelsOptions = legendOptions.labels || {};\n                var inactiveItems = legendOptions.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                if (options && options.visibleInLegend !== false) {\n                    var pointVisible = options.visible !== false;\n                    var labelTemplate = pointVisible ? labelsOptions.template : inactiveItemsLabels.template || labelsOptions.template;\n                    var text = options.category || '';\n                    if (labelTemplate) {\n                        text = TemplateService.compile(labelTemplate)({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    var itemLabelOptions, markerColor;\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (text) {\n                        this.legendItems.push({\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        function segmentVisible(series, fields, index) {\n            var visible = fields.visible;\n            if (defined(visible)) {\n                return visible;\n            }\n            var pointVisibility = series.pointVisibility;\n            if (pointVisibility) {\n                return pointVisibility[index];\n            }\n        }\n        function seriesTotal(series) {\n            var data = series.data;\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                var pointData = SeriesBinder.current.bindPoint(series, i);\n                var value = pointData.valueFields.value;\n                if (isString(value)) {\n                    value = parseFloat(value);\n                }\n                var visible = segmentVisible(series, pointData.fields, i);\n                if (isNumber(value) && visible !== false) {\n                    sum += Math.abs(value);\n                }\n            }\n            return sum;\n        }\n        var PIE_SECTOR_ANIM_DELAY = 70;\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.points = [];\n                this.legendItems = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var colorsCount = seriesColors.length;\n                var series = options.series;\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var data = currentSeries.data;\n                    var total = seriesTotal(currentSeries);\n                    var anglePerValue = 360 / total;\n                    var currentAngle = void 0;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx !== seriesCount - 1) {\n                        if (currentSeries.labels.position === OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (var i = 0; i < data.length; i++) {\n                        var pointData = SeriesBinder.current.bindPoint(currentSeries, i);\n                        var value = pointData.valueFields.value;\n                        var plotValue = Math.abs(value);\n                        var fields = pointData.fields;\n                        var angle = plotValue * anglePerValue;\n                        var explode = data.length !== 1 && Boolean(fields.explode);\n                        if (!isFunction(currentSeries.color)) {\n                            currentSeries.color = fields.color || seriesColors[i % colorsCount];\n                        }\n                        var visible = segmentVisible(currentSeries, fields, i);\n                        callback(value, new dataviz.Ring(null, 0, 0, currentAngle, angle), {\n                            owner: this$1,\n                            category: fields.category || '',\n                            index: i,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? plotValue / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: this$1.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (visible !== false) {\n                            currentAngle += angle;\n                        }\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                var segment = new PieSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var points = ref.points;\n                var seriesConfigs = ref.seriesConfigs;\n                if (seriesConfigs === void 0) {\n                    seriesConfigs = [];\n                }\n                var count = points.length;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var newBox = new Box(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth);\n                var newBoxCenter = newBox.center();\n                var boxCenter = box.center();\n                var seriesCount = options.series.length;\n                var leftSideLabels = [];\n                var rightSideLabels = [];\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                var radius = halfMinWidth - padding;\n                var center = new Point(radius + newBox.x1 + padding, radius + newBox.y1 + padding);\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var seriesIndex = segment.seriesIx;\n                    sector.radius = radius;\n                    sector.center = center;\n                    if (seriesConfigs.length) {\n                        var seriesConfig = seriesConfigs[seriesIndex];\n                        sector.innerRadius = seriesConfig.innerRadius;\n                        sector.radius = seriesConfig.radius;\n                    }\n                    if (seriesIndex === seriesCount - 1 && segment.explode) {\n                        sector.center = sector.clone().setRadius(sector.radius * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    var label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex === seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(this.labelComparator(true));\n                    this.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(this.labelComparator(false));\n                    this.rightLabelsReflow(rightSideLabels);\n                }\n                this.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var count = labels.length - 1;\n                var lr = sector.radius + segment.options.labels.distance;\n                var distances = [];\n                var firstBox = labels[0].box;\n                var distance = round(firstBox.y1 - (sector.center.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (var i = 0; i < count; i++) {\n                    var secondBox = labels[i + 1].box;\n                    firstBox = labels[i].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.center.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var this$1 = this;\n                var count = distances.length;\n                var left, right, remaining;\n                for (var i = 0; i < count; i++) {\n                    remaining = -distances[i];\n                    left = right = i;\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = this$1._takeDistance(distances, i, --left, remaining);\n                        remaining = this$1._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                this.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                var result = amount;\n                if (distances[position] > 0) {\n                    var available = Math.min(distances[position], result);\n                    result -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return result;\n            },\n            reflowLabels: function (distances, labels) {\n                var this$1 = this;\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var labelOptions = segment.options.labels;\n                var labelsCount = labels.length;\n                var labelDistance = labelOptions.distance;\n                var boxY = sector.center.y - (sector.radius + labelDistance) - labels[0].box.height();\n                var boxX;\n                distances[0] += 2;\n                for (var i = 0; i < labelsCount; i++) {\n                    var label = labels[i];\n                    var box = label.box;\n                    boxY += distances[i];\n                    boxX = this$1.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation === RIGHT);\n                    if (label.orientation === RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.radius + sector.center.x + labelDistance;\n                        }\n                        label.reflow(new Box(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.center.x - sector.radius - labelDistance;\n                        }\n                        label.reflow(new Box(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var connectors = ref.options.connectors;\n                var points = ref.points;\n                var count = points.length;\n                var space = 4;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var label = segment.label;\n                    var angle = sector.middle();\n                    var connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        var connectorLine = new Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END && segment.value !== 0) {\n                            var box = label.box;\n                            var centerPoint = sector.center;\n                            var start = sector.point(angle);\n                            var middle = new Point(box.x1, box.center().y);\n                            var sr = void 0, end = void 0, crossing = void 0;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation === RIGHT) {\n                                end = new Point(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.min(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x < sector.center.x) {\n                                    sr = sector.center.x + sector.radius + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = new Point(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.max(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x > sector.center.x) {\n                                    sr = sector.center.x - sector.radius - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this$1._connectorLines.push(connectorLine);\n                            this$1.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                var reverseValue = reverse ? -1 : 1;\n                return function (a, b) {\n                    var first = (a.parent.sector.middle() + 270) % 360;\n                    var second = (b.parent.sector.middle() + 270) % 360;\n                    return (first - second) * reverseValue;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var radius = sector.radius;\n                var sector_center = sector.center;\n                var cx = sector_center.x;\n                var cy = sector_center.y;\n                var t = Math.min(Math.abs(cy - y1), Math.abs(cy - y2));\n                if (t > radius) {\n                    return originalX;\n                }\n                return cx + Math.sqrt(radius * radius - t * t) * (direction ? 1 : -1);\n            },\n            pointInCircle: function (point, center, radius) {\n                return Math.pow(center.x - point.x, 2) + Math.pow(center.y - point.y, 2) < Math.pow(radius, 2);\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var uat = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n            var ub = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n            var result;\n            if (ub !== 0) {\n                var ua = uat / ub;\n                result = new Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        setDefaultOptions(PieChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            },\n            inactiveItems: {\n                markers: {},\n                labels: {}\n            }\n        });\n        deepExtend(PieChart.prototype, PieChartMixin);\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createPieChart(this.series);\n            },\n            createPieChart: function (series) {\n                var firstSeries = series[0];\n                var pieChart = new PieChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    startAngle: firstSeries.startAngle,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutSegment = PieSegment.extend({\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius -= (sector.radius - sector.innerRadius) / 2;\n                        var lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(this);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        setDefaultOptions(DonutSegment, {\n            overlay: { gradient: 'roundedGlass' },\n            labels: { position: CENTER },\n            animation: { type: PIE }\n        });\n        deepExtend(DonutSegment.prototype, PointEventsMixin);\n        var DONUT_SECTOR_ANIM_DELAY = 50;\n        var DonutChart = PieChart.extend({\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                var segment = new DonutSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var series = options.series;\n                var seriesCount = series.length;\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                var totalSize = halfMinWidth - padding;\n                var seriesWithoutSize = 0;\n                var holeSize;\n                for (var i = 0; i < seriesCount; i++) {\n                    var currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i !== seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    var currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                var innerRadius = holeSize;\n                var margin = 0;\n                var size, radius;\n                this.seriesConfigs = [];\n                for (var i$1 = 0; i$1 < seriesCount; i$1++) {\n                    var currentSeries$1 = series[i$1];\n                    size = valueOrDefault(currentSeries$1.size, totalSize / seriesWithoutSize);\n                    innerRadius += margin;\n                    radius = innerRadius + size;\n                    this$1.seriesConfigs.push({\n                        innerRadius: innerRadius,\n                        radius: radius\n                    });\n                    margin = currentSeries$1.margin || 0;\n                    innerRadius = radius;\n                }\n                PieChart.fn.reflow.call(this, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        setDefaultOptions(DonutChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                this.createDonutChart(this.series);\n            },\n            createDonutChart: function (series) {\n                var firstSeries = series[0];\n                var donutChart = new DonutChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(donutChart);\n            }\n        });\n        var DEFAULT_PADDING = 0.15;\n        var PolarPlotAreaBase = PlotAreaBase.extend({\n            initFields: function () {\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function () {\n                this.addToLegend(this.series);\n                this.createPolarAxis();\n                this.createCharts();\n                this.createValueAxis();\n            },\n            alignAxes: function () {\n                var axis = this.valueAxis;\n                var range = axis.range();\n                var crossingValue = axis.options.reverse ? range.max : range.min;\n                var slot = axis.getSlot(crossingValue);\n                var center = this.polarAxis.getSlot(0).center;\n                var axisBox = axis.box.translate(center.x - slot.x1, center.y - slot.y1);\n                axis.reflow(axisBox);\n            },\n            createValueAxis: function () {\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var axisOptions = this.valueAxisOptions({\n                    roundToMajorUnit: false,\n                    zIndex: -1\n                });\n                var axisType, axisDefaultRange;\n                if (axisOptions.type === LOGARITHMIC) {\n                    axisType = dataviz.RadarLogarithmicAxis;\n                    axisDefaultRange = {\n                        min: 0.1,\n                        max: 1\n                    };\n                } else {\n                    axisType = dataviz.RadarNumericAxis;\n                    axisDefaultRange = {\n                        min: 0,\n                        max: 1\n                    };\n                }\n                var range = tracker.query(name) || defaultRange || axisDefaultRange;\n                if (range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var valueAxis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                this.valueAxis = valueAxis;\n                this.appendAxis(valueAxis);\n            },\n            reflowAxes: function () {\n                var ref = this;\n                var options = ref.options.plotArea;\n                var valueAxis = ref.valueAxis;\n                var polarAxis = ref.polarAxis;\n                var box = ref.box;\n                var defaultPadding = Math.min(box.width(), box.height()) * DEFAULT_PADDING;\n                var padding = getSpacing(options.padding || {}, defaultPadding);\n                var axisBox = box.clone().unpad(padding);\n                var valueAxisBox = axisBox.clone().shrink(0, axisBox.height() / 2);\n                polarAxis.reflow(axisBox);\n                valueAxis.reflow(valueAxisBox);\n                var heightDiff = valueAxis.lineBox().height() - valueAxis.box.height();\n                valueAxis.reflow(valueAxis.box.unpad({ top: heightDiff }));\n                this.axisBox = axisBox;\n                this.alignAxes(axisBox);\n            },\n            backgroundBox: function () {\n                return this.box;\n            }\n        });\n        var PolarScatterChart = ScatterChart.extend({\n            pointSlot: function (slotX, slotY) {\n                var valueRadius = slotX.center.y - slotY.y1;\n                var slot = Point.onCircle(slotX.center, slotX.startAngle, valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            }\n        });\n        setDefaultOptions(PolarScatterChart, { clip: false });\n        var PolarLineChart = ScatterLineChart.extend({});\n        PolarLineChart.prototype.pointSlot = PolarScatterChart.prototype.pointSlot;\n        setDefaultOptions(PolarLineChart, { clip: false });\n        var SplinePolarAreaSegment = SplineAreaSegment.extend({\n            closeFill: function (fillPath) {\n                var center = this._polarAxisCenter();\n                fillPath.lineTo(center.x, center.y);\n            },\n            _polarAxisCenter: function () {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                return center;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var center = this._polarAxisCenter();\n                    var curveProcessor = new dataviz.CurveProcessor(false);\n                    var linePoints = LineSegment.prototype.points.call(this);\n                    linePoints.push(center);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                    segments.pop();\n                }\n                return segments;\n            }\n        });\n        var PolarAreaSegment = AreaSegment.extend({\n            points: function () {\n                var ref = this;\n                var polarAxis = ref.parent.plotArea.polarAxis;\n                var stackPoints = ref.stackPoints;\n                var center = polarAxis.box.center();\n                var points = LineSegment.prototype.points.call(this, stackPoints);\n                points.unshift([\n                    center.x,\n                    center.y\n                ]);\n                points.push([\n                    center.x,\n                    center.y\n                ]);\n                return points;\n            }\n        });\n        var PolarAreaChart = PolarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplinePolarAreaSegment(linePoints, null, false, currentSeries, seriesIx);\n                } else {\n                    segment = new PolarAreaSegment(linePoints, [], currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            createMissingValue: function (value, missingValues) {\n                var missingValue;\n                if (hasValue(value.x) && missingValues !== INTERPOLATE) {\n                    missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (missingValues === ZERO) {\n                        missingValue.y = 0;\n                    }\n                }\n                return missingValue;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            },\n            _hasMissingValuesGap: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (this$1.seriesMissingValues(series[idx]) === GAP) {\n                        return true;\n                    }\n                }\n            },\n            sortPoints: function (points) {\n                var this$1 = this;\n                points.sort(xComparer);\n                if (this._hasMissingValuesGap()) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        var point = points[idx];\n                        if (point) {\n                            var value = point.value;\n                            if (!hasValue(value.y) && this$1.seriesMissingValues(point.series) === GAP) {\n                                delete points[idx];\n                            }\n                        }\n                    }\n                }\n                return points;\n            }\n        });\n        function xComparer(a, b) {\n            return a.value.x - b.value.x;\n        }\n        var PolarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var polarAxis = new dataviz.PolarAxis(this.options.xAxis, this.chartService);\n                this.polarAxis = polarAxis;\n                this.axisX = polarAxis;\n                this.appendAxis(polarAxis);\n            },\n            valueAxisOptions: function (defaults) {\n                return deepExtend(defaults, {\n                    majorGridLines: { type: ARC },\n                    minorGridLines: { type: ARC }\n                }, this.options.yAxis);\n            },\n            createValueAxis: function () {\n                PolarPlotAreaBase.fn.createValueAxis.call(this);\n                this.axisY = this.valueAxis;\n            },\n            appendChart: function (chart, pane) {\n                this.valueAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createLineChart(filterSeriesByType(series, [POLAR_LINE]), pane);\n                this.createScatterChart(filterSeriesByType(series, [POLAR_SCATTER]), pane);\n                this.createAreaChart(filterSeriesByType(series, [POLAR_AREA]), pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new PolarLineChart(this, { series: series });\n                this.appendChart(lineChart, pane);\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var scatterChart = new PolarScatterChart(this, { series: series });\n                this.appendChart(scatterChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new PolarAreaChart(this, { series: series });\n                this.appendChart(areaChart, pane);\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var xValue = this.axisX.getValue(point);\n                var yValue = this.axisY.getValue(point);\n                if (xValue !== null && yValue !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        x: xValue,\n                        y: yValue\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        setDefaultOptions(PolarPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(PolarPlotArea.prototype, PlotAreaEventsMixin);\n        var RadarLineChart = LineChart.extend({\n            pointSlot: function (categorySlot, valueSlot) {\n                var valueRadius = categorySlot.center.y - valueSlot.y1;\n                var slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                var segment = new pointType(linePoints, currentSeries, seriesIx);\n                if (linePoints.length === currentSeries.data.length) {\n                    segment.options.closed = true;\n                }\n                return segment;\n            }\n        });\n        setDefaultOptions(RadarLineChart, { clip: false });\n        var SplineRadarAreaSegment = SplineAreaSegment.extend({\n            closeFill: function () {\n            }\n        });\n        var RadarAreaSegment = AreaSegment.extend({\n            points: function () {\n                return LineSegment.prototype.points.call(this, this.stackPoints);\n            }\n        });\n        var RadarAreaChart = RadarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplineRadarAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                    segment.options.closed = true;\n                } else {\n                    var stackPoints;\n                    if (isStacked && seriesIx > 0 && prevSegment) {\n                        stackPoints = prevSegment.linePoints.slice(0).reverse();\n                    }\n                    linePoints.push(linePoints[0]);\n                    segment = new RadarAreaSegment(linePoints, stackPoints, currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var RadarSegment = DonutSegment.extend({\n            init: function (value, options) {\n                DonutSegment.fn.init.call(this, value, null, options);\n            }\n        });\n        setDefaultOptions(RadarSegment, {\n            overlay: { gradient: 'none' },\n            labels: { distance: 10 }\n        });\n        var RadarClusterLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var gap = options.gap;\n                var spacing = options.spacing;\n                var count = children.length;\n                var slots = count + gap + spacing * (count - 1);\n                var slotAngle = sector.angle / slots;\n                var angle = sector.startAngle + slotAngle * (gap / 2);\n                for (var i = 0; i < count; i++) {\n                    var slotSector = sector.clone();\n                    slotSector.startAngle = angle;\n                    slotSector.angle = slotAngle;\n                    if (children[i].sector) {\n                        slotSector.radius = children[i].sector.radius;\n                    }\n                    children[i].reflow(slotSector);\n                    children[i].sector = slotSector;\n                    angle += slotAngle + slotAngle * spacing;\n                }\n            }\n        });\n        setDefaultOptions(RadarClusterLayout, {\n            gap: 1,\n            spacing: 0\n        });\n        var RadarStackLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var reverse = ref.options.reverse;\n                var children = ref.children;\n                var childrenCount = children.length;\n                var first = reverse ? childrenCount - 1 : 0;\n                var step = reverse ? -1 : 1;\n                this.box = new Box();\n                for (var i = first; i >= 0 && i < childrenCount; i += step) {\n                    var childSector = children[i].sector;\n                    childSector.startAngle = sector.startAngle;\n                    childSector.angle = sector.angle;\n                }\n            }\n        });\n        var RadarBarChart = BarChart.extend({\n            pointType: function () {\n                return RadarSegment;\n            },\n            clusterType: function () {\n                return RadarClusterLayout;\n            },\n            stackType: function () {\n                return RadarStackLayout;\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var slot = categorySlot.clone();\n                var y = categorySlot.center.y;\n                slot.radius = y - valueSlot.y1;\n                slot.innerRadius = y - valueSlot.y2;\n                return slot;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.sector = pointSlot;\n                point.reflow();\n            },\n            createAnimation: function () {\n                this.options.animation.center = this.box.toRect().center();\n                BarChart.fn.createAnimation.call(this);\n            }\n        });\n        RadarBarChart.prototype.reflow = CategoricalChart.prototype.reflow;\n        setDefaultOptions(RadarBarChart, {\n            clip: false,\n            animation: { type: 'pie' }\n        });\n        var RadarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var categoryAxis = new dataviz.RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n                this.polarAxis = categoryAxis;\n                this.categoryAxis = categoryAxis;\n                this.appendAxis(categoryAxis);\n                this.aggregateCategories();\n                this.createCategoryAxesLabels();\n            },\n            valueAxisOptions: function (defaults) {\n                if (this._hasBarCharts) {\n                    deepExtend(defaults, {\n                        majorGridLines: { type: ARC },\n                        minorGridLines: { type: ARC }\n                    });\n                }\n                if (this._isStacked100) {\n                    deepExtend(defaults, {\n                        roundToMajorUnit: false,\n                        labels: { format: 'P0' }\n                    });\n                }\n                return deepExtend(defaults, this.options.valueAxis);\n            },\n            aggregateCategories: function () {\n                CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n            },\n            createCategoryAxesLabels: function () {\n                CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n            },\n            filterSeries: function (currentSeries) {\n                return currentSeries;\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createAreaChart(filterSeriesByType(series, [RADAR_AREA]), pane);\n                this.createLineChart(filterSeriesByType(series, [RADAR_LINE]), pane);\n                this.createBarChart(filterSeriesByType(series, [RADAR_COLUMN]), pane);\n            },\n            chartOptions: function (series) {\n                var options = { series: series };\n                var firstSeries = series[0];\n                if (firstSeries) {\n                    var filteredSeries = this.filterVisibleSeries(series);\n                    var stack = firstSeries.stack;\n                    options.isStacked = stack && filteredSeries.length > 1;\n                    options.isStacked100 = stack && stack.type === '100%' && filteredSeries.length > 1;\n                    if (options.isStacked100) {\n                        this._isStacked100 = true;\n                    }\n                }\n                return options;\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new RadarAreaChart(this, this.chartOptions(series));\n                this.appendChart(areaChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new RadarLineChart(this, this.chartOptions(series));\n                this.appendChart(lineChart, pane);\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var options = this.chartOptions(series);\n                options.gap = firstSeries.gap;\n                options.spacing = firstSeries.spacing;\n                var barChart = new RadarBarChart(this, options);\n                this.appendChart(barChart, pane);\n                this._hasBarCharts = true;\n            },\n            seriesCategoryAxis: function () {\n                return this.categoryAxis;\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var category = this.categoryAxis.getCategory(point);\n                var value = this.valueAxis.getValue(point);\n                if (category !== null && value !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        category: category,\n                        value: value\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        deepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n            appendChart: CategoricalPlotArea.prototype.appendChart,\n            aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries\n        });\n        setDefaultOptions(RadarPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        var FunnelSegment = ChartElement.extend({\n            init: function (value, options, segmentOptions) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.options.index = segmentOptions.index;\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var label = this.children[0];\n                this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n                if (label) {\n                    label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual;\n                ChartElement.fn.createVisual.call(this);\n                if (options.visual) {\n                    visual = options.visual({\n                        category: this.category,\n                        dataItem: this.dataItem,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage,\n                        points: this.points,\n                        options: options,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            return this$1.createPath();\n                        }\n                    });\n                } else {\n                    visual = this.createPath();\n                }\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            },\n            createPath: function () {\n                var options = this.options;\n                var border = options.border;\n                var path = Path.fromPoints(this.points, {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: border.color,\n                        opacity: border.opacity,\n                        width: border.width\n                    }\n                }).close();\n                return path;\n            },\n            createHighlight: function (style) {\n                return Path.fromPoints(this.points, style);\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var path = Path.fromPoints(this.points).close();\n                return {\n                    options: this.options,\n                    path: path\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                return {\n                    point: new Point(box.center().x, box.y1),\n                    align: {\n                        horizontal: 'center',\n                        vertical: 'top'\n                    }\n                };\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        setDefaultOptions(FunnelSegment, {\n            color: WHITE,\n            border: { width: 1 }\n        });\n        deepExtend(FunnelSegment.prototype, PointEventsMixin);\n        var FunnelChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.points = [];\n                this.labels = [];\n                this.legendItems = [];\n                this.render();\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            render: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var series = options.series[0];\n                var data = series.data;\n                if (!data) {\n                    return;\n                }\n                var total = seriesTotal(series);\n                for (var i = 0; i < data.length; i++) {\n                    var pointData = SeriesBinder.current.bindPoint(series, i);\n                    var value = pointData.valueFields.value;\n                    if (value === null || value === undefined) {\n                        continue;\n                    }\n                    var fields = pointData.fields;\n                    if (!isFunction(series.color)) {\n                        series.color = fields.color || seriesColors[i % seriesColors.length];\n                    }\n                    var visible = segmentVisible(series, fields, i);\n                    fields = deepExtend({\n                        index: i,\n                        owner: this$1,\n                        series: series,\n                        dataItem: data[i],\n                        percentage: Math.abs(value) / total\n                    }, fields, { visible: visible });\n                    var segment = this$1.createSegment(value, fields);\n                    var label = this$1.createLabel(value, fields);\n                    if (segment && label) {\n                        segment.append(label);\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    index: fields.index\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'toggle',\n                        'visual'\n                    ]\n                });\n            },\n            createSegment: function (value, fields) {\n                var seriesOptions = deepExtend({}, fields.series);\n                this.evalSegmentOptions(seriesOptions, value, fields);\n                this.createLegendItem(value, seriesOptions, fields);\n                if (fields.visible !== false) {\n                    var segment = new FunnelSegment(value, seriesOptions, fields);\n                    $.extend(segment, fields);\n                    this.append(segment);\n                    this.points.push(segment);\n                    return segment;\n                }\n            },\n            createLabel: function (value, fields) {\n                var series = fields.series;\n                var dataItem = fields.dataItem;\n                var labels = deepExtend({}, this.options.labels, series.labels);\n                var text = value;\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = TemplateService.compile(labels.template);\n                        text = labelTemplate({\n                            dataItem: dataItem,\n                            value: value,\n                            percentage: fields.percentage,\n                            category: fields.category,\n                            series: series\n                        });\n                    } else if (labels.format) {\n                        text = this.plotArea.chartService.format.auto(labels.format, text);\n                    }\n                    if (!labels.color) {\n                        var brightnessValue = new Color(series.color).percBrightness();\n                        if (brightnessValue > 180) {\n                            labels.color = BLACK;\n                        } else {\n                            labels.color = WHITE;\n                        }\n                        if (!labels.background) {\n                            labels.background = series.color;\n                        }\n                    }\n                    this.evalSegmentOptions(labels, value, fields);\n                    var textBox = new TextBox(text, deepExtend({ vAlign: labels.position }, labels));\n                    this.labels.push(textBox);\n                    return textBox;\n                }\n            },\n            labelPadding: function () {\n                var labels = this.labels;\n                var padding = {\n                    left: 0,\n                    right: 0\n                };\n                for (var i = 0; i < labels.length; i++) {\n                    var label = labels[i];\n                    var align = label.options.align;\n                    if (align !== CENTER) {\n                        var width = labels[i].box.width();\n                        if (align === LEFT) {\n                            padding.left = Math.max(padding.left, width);\n                        } else {\n                            padding.right = Math.max(padding.right, width);\n                        }\n                    }\n                }\n                return padding;\n            },\n            dynamicSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var firstSegment = segments[0];\n                var maxSegment = firstSegment;\n                for (var idx = 0; idx < segments.length; idx++) {\n                    if (segments[idx].percentage > maxSegment.percentage) {\n                        maxSegment = segments[idx];\n                    }\n                }\n                var lastUpperSide = firstSegment.percentage / maxSegment.percentage * width;\n                var previousOffset = (width - lastUpperSide) / 2;\n                var previousHeight = 0;\n                for (var idx$1 = 0; idx$1 < count; idx$1++) {\n                    var percentage = segments[idx$1].percentage;\n                    var nextSegment = segments[idx$1 + 1];\n                    var nextPercentage = nextSegment ? nextSegment.percentage : percentage;\n                    var points = segments[idx$1].points = [];\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    var offset = void 0;\n                    if (!percentage) {\n                        offset = nextPercentage ? 0 : width / 2;\n                    } else {\n                        offset = (width - lastUpperSide * (nextPercentage / percentage)) / 2;\n                    }\n                    offset = limitValue(offset, 0, width);\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + offset, box.y1 + height + previousHeight));\n                    previousOffset = offset;\n                    previousHeight += height + options.segmentSpacing;\n                    lastUpperSide = limitValue(width - 2 * offset, 0, width);\n                }\n            },\n            constantSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var decreasingWidth = options.neckRatio <= 1;\n                var neckRatio = decreasingWidth ? options.neckRatio * width : width;\n                var previousOffset = decreasingWidth ? 0 : (width - width / options.neckRatio) / 2;\n                var topMostWidth = decreasingWidth ? width : width - previousOffset * 2;\n                var finalNarrow = (topMostWidth - neckRatio) / 2;\n                var previousHeight = 0;\n                for (var idx = 0; idx < count; idx++) {\n                    var points = segments[idx].points = [];\n                    var percentage = segments[idx].percentage;\n                    var offset = options.dynamicHeight ? finalNarrow * percentage : finalNarrow / count;\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + previousOffset + offset, box.y1 + height + previousHeight));\n                    previousOffset += offset;\n                    previousHeight += height + options.segmentSpacing;\n                }\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var count = points.length;\n                if (!count) {\n                    return;\n                }\n                var options = this.options;\n                var box = chartBox.clone().unpad(this.labelPadding());\n                var totalHeight = box.height() - options.segmentSpacing * (count - 1);\n                var width = box.width();\n                if (options.dynamicSlope) {\n                    this.dynamicSlopeReflow(box, width, totalHeight);\n                } else {\n                    this.constantSlopeReflow(box, width, totalHeight);\n                }\n                for (var idx = 0; idx < count; idx++) {\n                    points[idx].reflow(chartBox);\n                }\n            }\n        });\n        setDefaultOptions(FunnelChart, {\n            neckRatio: 0.3,\n            width: 300,\n            dynamicSlope: false,\n            dynamicHeight: true,\n            segmentSpacing: 0,\n            labels: {\n                visible: false,\n                align: CENTER,\n                position: CENTER,\n                zIndex: 1\n            }\n        });\n        deepExtend(FunnelChart.prototype, PieChartMixin);\n        var FunnelPlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createFunnelChart(this.series);\n            },\n            createFunnelChart: function (series) {\n                var firstSeries = series[0];\n                var funnelChart = new FunnelChart(this, {\n                    series: series,\n                    legend: this.options.legend,\n                    neckRatio: firstSeries.neckRatio,\n                    dynamicHeight: firstSeries.dynamicHeight,\n                    dynamicSlope: firstSeries.dynamicSlope,\n                    segmentSpacing: firstSeries.segmentSpacing,\n                    highlight: firstSeries.highlight\n                });\n                this.appendChart(funnelChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var COLOR = 'color';\n        var FIRST = 'first';\n        var FROM = 'from';\n        var MAX = 'max';\n        var MIN = 'min';\n        var NOTE_TEXT = 'noteText';\n        var SUMMARY_FIELD = 'summary';\n        var TO = 'to';\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        PlotAreaFactory.current.register(FunnelPlotArea, [FUNNEL]);\n        PlotAreaFactory.current.register(PolarPlotArea, [\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ]);\n        PlotAreaFactory.current.register(RadarPlotArea, [\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        SeriesBinder.current.register([\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ], [\n            X,\n            Y\n        ], [COLOR]);\n        SeriesBinder.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], [VALUE], [COLOR]);\n        SeriesBinder.current.register([FUNNEL], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            'visible'\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        DefaultAggregates.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], {\n            value: MAX,\n            color: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        var AXIS_NAMES = [\n            CATEGORY,\n            VALUE,\n            X,\n            Y\n        ];\n        var MOUSEMOVE = 'mousemove';\n        var CONTEXTMENU = 'contextmenu';\n        var MOUSEMOVE_DELAY = 20;\n        var Chart = Class.extend({\n            init: function (element, userOptions, themeOptions, context) {\n                var this$1 = this;\n                if (context === void 0) {\n                    context = {};\n                }\n                this.observers = [];\n                this.addObserver(context.observer);\n                this.chartService = new services.ChartService(this, context);\n                this.chartService.theme = themeOptions;\n                this._initElement(element);\n                var options = deepExtend({}, this.options, userOptions);\n                this._originalOptions = deepExtend({}, options);\n                this._theme = themeOptions;\n                this._initTheme(options, themeOptions);\n                this._initSurface();\n                this._initHandlers();\n                this.bindCategories();\n                dataviz.FontLoader.preloadFonts(userOptions, function () {\n                    if (!this$1._destroyed) {\n                        this$1._redraw();\n                        this$1._attachEvents();\n                    }\n                });\n            },\n            _initElement: function (element) {\n                this._setElementClass(element);\n                element.style.position = 'relative';\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                this.element = element;\n            },\n            _setElementClass: function (element) {\n                dataviz.addClass(element, 'k-chart');\n            },\n            _initTheme: function (options, themeOptions) {\n                var seriesCopies = [];\n                var series = options.series || [];\n                for (var i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                this.applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    delete options.seriesColors;\n                }\n                this.options = deepExtend({}, themeOptions, options);\n                this.applySeriesColors();\n            },\n            getSize: function () {\n                return {\n                    width: this.element.offsetWidth,\n                    height: this.element.offsetHeight\n                };\n            },\n            resize: function (force) {\n                var size = this.getSize();\n                var currentSize = this._size;\n                if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n                    this._size = size;\n                    this._resize(size, force);\n                    this.trigger('resize', size);\n                }\n            },\n            _resize: function () {\n                this._noTransitionsRedraw();\n            },\n            redraw: function (paneName) {\n                this.applyDefaults(this.options);\n                this.applySeriesColors();\n                if (paneName) {\n                    var plotArea = this._model._plotArea;\n                    var pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    this._redraw();\n                }\n            },\n            getAxis: function (name) {\n                var axes = this._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    if (axes[idx].options.name === name) {\n                        return new ChartAxis(axes[idx]);\n                    }\n                }\n            },\n            findAxisByName: function (name) {\n                return this.getAxis(name);\n            },\n            plotArea: function () {\n                return new ChartPlotArea(this._plotArea);\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var points;\n                if (isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    var seriesName, categoryName;\n                    if (isObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    this.togglePointsHighlight(show, points);\n                }\n            },\n            togglePointsHighlight: function (show, points) {\n                var highlight = this._highlight;\n                for (var idx = 0; idx < points.length; idx++) {\n                    highlight.togglePointHighlight(points[idx], show);\n                }\n            },\n            showTooltip: function (filter) {\n                var shared = this._sharedTooltip();\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var plotArea = ref._plotArea;\n                var point, categoryIndex;\n                if (isFunction(filter)) {\n                    point = plotArea.findPoint(filter);\n                    if (point && shared) {\n                        categoryIndex = point.categoryIx;\n                    }\n                } else if (shared && defined(filter)) {\n                    categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n                }\n                if (shared) {\n                    if (categoryIndex >= 0) {\n                        var points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                        tooltip.showAt(points);\n                    }\n                } else if (point) {\n                    tooltip.show(point);\n                }\n            },\n            hideTooltip: function () {\n                this._tooltip.hide();\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea;\n                if (chartArea.width) {\n                    dataviz.elementSize(wrap, { width: chartArea.width });\n                }\n                if (chartArea.height) {\n                    dataviz.elementSize(wrap, { height: chartArea.height });\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    if (surface) {\n                        surface.destroy();\n                    }\n                    this.surface = drawing.Surface.create(wrap, { type: this.options.renderAs });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var model = this._getModel();\n                this._destroyView();\n                this._model = model;\n                this._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                this._initSurface();\n                this.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                this._tooltip = this._createTooltip();\n                this._highlight = new Highlight();\n                this._setupSelection();\n                this._createPannable();\n                this._createZoomSelection();\n                this._createMousewheelZoom();\n                this.trigger(RENDER);\n                if (!this._navState) {\n                    this._cancelDomEvents();\n                }\n            },\n            exportVisual: function (options) {\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = this.options.chartArea;\n                    var originalChartArea = this._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = this._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    visual = model.visual;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                return this._plotArea instanceof CategoricalPlotArea && this.options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _createTooltip: function () {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var tooltip;\n                if (this._sharedTooltip()) {\n                    tooltip = this._createSharedTooltip(tooltipOptions);\n                } else {\n                    tooltip = new Tooltip(this.chartService, tooltipOptions);\n                }\n                return tooltip;\n            },\n            _createSharedTooltip: function (options) {\n                return new SharedTooltip(this._plotArea, options);\n            },\n            applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            applySeriesColors: function () {\n                var options = this.options;\n                var series = options.series;\n                var colors = options.seriesColors || [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var seriesColor = colors[i % colors.length];\n                    var defaults = currentSeries._defaults;\n                    currentSeries.color = currentSeries.color || seriesColor;\n                    if (defaults) {\n                        defaults.color = defaults.color || seriesColor;\n                    }\n                }\n            },\n            _getModel: function () {\n                var options = this.options;\n                var plotArea = this._createPlotArea();\n                var model = new dataviz.RootElement(this._modelOptions());\n                model.chart = this;\n                model._plotArea = plotArea;\n                dataviz.Title.buildTitle(options.title, model);\n                if (options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend, this.chartService));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var element = ref.element;\n                var size = dataviz.elementSize(element);\n                this._size = null;\n                return deepExtend({\n                    width: Math.floor(size.width) || datavizConstants.DEFAULT_WIDTH,\n                    height: Math.floor(size.height) || datavizConstants.DEFAULT_HEIGHT,\n                    transitions: options.transitions\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var options = this.options;\n                var plotArea = PlotAreaFactory.current.create(skipSeries ? [] : options.series, options, this.chartService);\n                return plotArea;\n            },\n            _hasSelection: function () {\n                return this._selections && this._selections.length;\n            },\n            _setupSelection: function () {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref._plotArea.axes;\n                var selections = this._selections = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        var min = 0;\n                        var max = options.categories.length - 1;\n                        if (axis instanceof DateCategoryAxis) {\n                            min = options.categories[min];\n                            max = options.categories[max];\n                        }\n                        if (!options.justified) {\n                            if (axis instanceof DateCategoryAxis) {\n                                max = dataviz.addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                            } else {\n                                max++;\n                            }\n                        }\n                        var selection = new Selection(this$1, axis, deepExtend({\n                            min: min,\n                            max: max\n                        }, options.select));\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _initHandlers: function () {\n                this._clickHandler = this._click.bind(this);\n                this._mousewheelHandler = this._mousewheel.bind(this);\n                this._surfaceMouseenterHandler = this._mouseover.bind(this);\n                this._surfaceMouseleaveHandler = this._mouseout.bind(this);\n                this._mousemove = kendo.throttle(this._mousemove.bind(this), MOUSEMOVE_DELAY);\n            },\n            addObserver: function (observer) {\n                if (observer) {\n                    this.observers.push(observer);\n                }\n            },\n            removeObserver: function (observer) {\n                var index = this.observers.indexOf(observer);\n                if (index >= 0) {\n                    this.observers.splice(index, 1);\n                }\n            },\n            requiresHandlers: function (eventNames) {\n                var observers = this.observers;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].requiresHandlers(eventNames)) {\n                        return true;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                if (args === void 0) {\n                    args = {};\n                }\n                if (name === SHOW_TOOLTIP) {\n                    args.anchor.point = this._toDocumentCoordinates(args.anchor.point);\n                }\n                args.sender = this;\n                var observers = this.observers;\n                var isDefaultPrevented = false;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].trigger(name, args)) {\n                        isDefaultPrevented = true;\n                    }\n                }\n                return isDefaultPrevented;\n            },\n            _attachEvents: function () {\n                var ref = this;\n                var element = ref.element;\n                var surface = ref.surface;\n                surface.bind('mouseenter', this._surfaceMouseenterHandler);\n                surface.bind('mouseleave', this._surfaceMouseleaveHandler);\n                var obj;\n                bindEvents(element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n                this.domEvents = services.DomEventsBuilder.create(this.element, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            _cancelDomEvents: function () {\n                if (this.domEvents && this.domEvents.cancel) {\n                    this.domEvents.cancel();\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom && !this._stopDragEvent(e)) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function (e) {\n                if (this._zooming && !this._stopDragEvent(e)) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var mousewheelZoom = this._mousewheelZoom;\n                if (mousewheelZoom && !this._stopDragEvent(e)) {\n                    e.preventDefault();\n                    var previousGestureDistance = this._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (Math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = Math.round(scaleDelta * 10);\n                        this._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                            if (!this._zooming) {\n                                this._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !this.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var coords = this._eventCoordinates(e);\n                if (this._stopDragEvent(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (this.requiresHandlers([\n                        DRAG_START,\n                        DRAG,\n                        DRAG_END\n                    ])) {\n                    this._startNavigation(e, coords, DRAG_START);\n                }\n                if (this._pannable && this._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                    this._suppressHover = true;\n                }\n                if (this._zoomSelection) {\n                    if (this._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var ref = this;\n                var state = ref._navState;\n                var pannable = ref._pannable;\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                if (pannable) {\n                    var ranges = pannable.move(e);\n                    if (ranges && !this.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    var ranges$1 = {};\n                    var axes = state.axes;\n                    for (var i = 0; i < axes.length; i++) {\n                        var currentAxis = axes[i];\n                        var axisName = currentAxis.options.name;\n                        if (axisName) {\n                            var axis = currentAxis.options.vertical ? e.y : e.x;\n                            var delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges$1[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges$1;\n                    this.trigger(DRAG, {\n                        axisRanges: ranges$1,\n                        originalEvent: e\n                    });\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                if (this._stopDragEvent(e)) {\n                    return;\n                }\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _stopDragEvent: function () {\n                return this._hasSelection();\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                var mousewheelZoom = this._mousewheelZoom;\n                var coords = this._eventCoordinates(e);\n                if (!this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!this._zooming) {\n                            this._unsetActivePoint();\n                            this.surface.suspendTracking();\n                            this._zooming = true;\n                        }\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        args.axisRanges = mousewheelZoom.updateRanges(delta);\n                        if (args.axisRanges && !this.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1.trigger(ZOOM_END, args);\n                            this$1._zooming = false;\n                            if (this$1.surface) {\n                                this$1.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    var state = this._navState;\n                    if (!state) {\n                        var prevented = this._startNavigation(e, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = this._navState;\n                        }\n                    }\n                    if (state) {\n                        var totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        var axes = this._navState.axes;\n                        var ranges = {};\n                        for (var i = 0; i < axes.length; i++) {\n                            var currentAxis = axes[i];\n                            var axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        this.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var plotArea = this._model._plotArea;\n                var pane = plotArea.findPointPane(coords);\n                var axes = plotArea.axes.slice(0);\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                var prevented = this.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    this._cancelDomEvents();\n                } else {\n                    this._suppressHover = true;\n                    this._unsetActivePoint();\n                    this._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                if (this._navState) {\n                    this.trigger(chartEvent, {\n                        axisRanges: this._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var current = element;\n                var chartElement;\n                while (current && !chartElement) {\n                    chartElement = current.chartElement;\n                    current = current.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var coordinates = dataviz.eventCoordinates(e);\n                return this._toModelCoordinates(coordinates.x, coordinates.y);\n            },\n            _elementPadding: function () {\n                if (!this._padding) {\n                    var ref = elementStyles(this.element, [\n                        'paddingLeft',\n                        'paddingTop'\n                    ]);\n                    var paddingLeft = ref.paddingLeft;\n                    var paddingTop = ref.paddingTop;\n                    this._padding = {\n                        top: paddingTop,\n                        left: paddingLeft\n                    };\n                }\n                return this._padding;\n            },\n            _toDocumentCoordinates: function (point) {\n                var padding = this._elementPadding();\n                var offset = dataviz.elementOffset(this.element);\n                return {\n                    left: round(point.x + padding.left + offset.left),\n                    top: round(point.y + padding.top + offset.top)\n                };\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element;\n                var offset = dataviz.elementOffset(element);\n                var padding = this._elementPadding();\n                return new Point(clientX - offset.left - padding.left, clientY - offset.top - padding.top);\n            },\n            _tap: function (e) {\n                var this$1 = this;\n                var drawingElement = this.surface.eventTarget(e);\n                var element = this._drawingChartElement(drawingElement, e);\n                if (this._activePoint === element) {\n                    this._propagateClick(element, e);\n                } else {\n                    if (!this._startHover(drawingElement, e)) {\n                        this._unsetActivePoint();\n                    }\n                    this._propagateClick(element, e);\n                }\n                this.handlingTap = true;\n                setTimeout(function () {\n                    this$1.handlingTap = false;\n                }, 0);\n            },\n            _click: function (e) {\n                var element = this._getChartElement(e);\n                this._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                var this$1 = this;\n                var current = element;\n                while (current) {\n                    if (current.click) {\n                        current.click(this$1, e);\n                    }\n                    current = current.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                var chartElement = this._drawingChartElement(element, e);\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (this._suppressHover || !highlight || highlight.isHighlighted(chartElement) || this._sharedTooltip()) {\n                    return false;\n                }\n                var point = this._drawingChartElement(element, e, function (element) {\n                    return element.hover && !(element instanceof PlotAreaBase);\n                });\n                if (point && !point.hover(this, e)) {\n                    this._activePoint = point;\n                    var tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(point);\n                    }\n                    highlight.show(point);\n                    return point;\n                }\n            },\n            _mouseover: function (e) {\n                var point = this._startHover(e.element, e.originalEvent);\n                if (point && point.tooltipTracking) {\n                    this._mouseMoveTrackHandler = this._mouseMoveTrackHandler || this._mouseMoveTracking.bind(this);\n                    var obj;\n                    bindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                var point = ref._activePoint;\n                var coords = this._eventCoordinates(e);\n                if (this._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        var seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint !== point) {\n                            seriesPoint.hover(this, e);\n                            this._activePoint = seriesPoint;\n                            var tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                            if (tooltipOptions.visible) {\n                                tooltip.show(seriesPoint);\n                            }\n                            highlight.show(seriesPoint);\n                        }\n                    }\n                } else {\n                    var obj;\n                    unbindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                    this._unsetActivePoint();\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                this._trackCrosshairs(coords);\n                if (this._plotArea.hover) {\n                    this._plotArea.hover(this, e);\n                }\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs;\n                for (var i = 0; i < crosshairs.length; i++) {\n                    var current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e) {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var plotArea = ref._plotArea;\n                var categoryAxis = ref._plotArea.categoryAxis;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (plotArea.box.containsPoint(coords)) {\n                    var index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== this._tooltipCategoryIx) {\n                        var points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = points.map(function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                        } else {\n                            tooltip.hide();\n                        }\n                        this._tooltipCategoryIx = index;\n                    }\n                }\n            },\n            hideElements: function () {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._mousemove.cancel();\n                plotArea.hideCrosshairs();\n                highlight.hide();\n                tooltip.hide();\n                delete this._tooltipCategoryIx;\n            },\n            _unsetActivePoint: function () {\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._activePoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _deferRedraw: function () {\n                this._redraw();\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            bindCategories: function () {\n                var this$1 = this;\n                var options = this.options;\n                var definitions = [].concat(options.categoryAxis);\n                for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    var axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        this$1.bindCategoryAxisFromSeries(axis, axisIx);\n                    }\n                }\n            },\n            bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesLength = series.length;\n                var uniqueCategories = {};\n                var items = [];\n                var dateAxis;\n                for (var seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    var s = series[seriesIx];\n                    var onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    var data = s.data;\n                    var dataLength = data.length;\n                    if (s.categoryField && onAxis && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        var getFn = dateAxis ? getDateField : getField;\n                        for (var dataIx = 0; dataIx < dataLength; dataIx++) {\n                            var dataRow = data[dataIx];\n                            var category = getFn(s.categoryField, dataRow, this$1.chartService.intl);\n                            if (dateAxis || !uniqueCategories[category]) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories[category] = true;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dataviz.dateComparer(a[0], b[0]);\n                        });\n                    }\n                    var result = transpose(items);\n                    axis.categories = result[0];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series);\n                var result = true;\n                for (var i = 0; i < valueFields.length; i++) {\n                    var field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _noTransitionsRedraw: function () {\n                var options = this.options;\n                var transitionsState;\n                if (options.transitions) {\n                    options.transitions = false;\n                    transitionsState = true;\n                }\n                this._redraw();\n                if (transitionsState) {\n                    options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var highlight = ref._highlight;\n                var currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                var items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    items = plotArea.findPoint(function (point) {\n                        return point.series.index === seriesIndex && point.index === pointIndex;\n                    });\n                } else {\n                    items = plotArea.pointsBySeriesIndex(seriesIndex);\n                }\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                return this._plotArea.crosshairs.length || this._tooltip && this._sharedTooltip() || this.requiresHandlers([PLOT_AREA_HOVER]);\n            },\n            updateMouseMoveHandler: function () {\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(this.element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n            },\n            applyOptions: function (options, theme) {\n                clearMissingValues(this._originalOptions, options);\n                this._originalOptions = deepExtend(this._originalOptions, options);\n                this.options = deepExtend({}, this._originalOptions);\n                if (theme) {\n                    this._theme = theme;\n                    this.chartService.theme = theme;\n                }\n                this._initTheme(this.options, this._theme);\n            },\n            setOptions: function (options, theme) {\n                this.applyOptions(options, theme);\n                this.bindCategories();\n                this.redraw();\n                this.updateMouseMoveHandler();\n            },\n            destroy: function () {\n                this._destroyed = true;\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this.domEvents) {\n                    this.domEvents.destroy();\n                    delete this.domEvents;\n                }\n                var obj$1;\n                unbindEvents(document, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mouseMoveTrackHandler, obj$1));\n                this._destroyView();\n                if (this.surface) {\n                    this.surface.destroy();\n                    this.surface = null;\n                }\n                this._clearRedrawTimeout();\n            },\n            _destroyView: function () {\n                var ref = this;\n                var model = ref._model;\n                var selections = ref._selections;\n                if (model) {\n                    model.destroy();\n                    this._model = null;\n                }\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n                this._unsetActivePoint();\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                }\n                if (this._highlight) {\n                    this._highlight.destroy();\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.destroy();\n                    delete this._zoomSelection;\n                }\n                if (this._pannable) {\n                    this._pannable.destroy();\n                    delete this._pannable;\n                }\n                if (this._mousewheelZoom) {\n                    this._mousewheelZoom.destroy();\n                    delete this._mousewheelZoom;\n                }\n            }\n        });\n        function resolveAxisAliases(options) {\n            var aliases = AXIS_NAMES;\n            for (var idx = 0; idx < aliases.length; idx++) {\n                var alias = aliases[idx] + 'Axes';\n                if (options[alias]) {\n                    options[aliases[idx] + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            }\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            var axisName, axisDefaults, axes;\n            function mapAxisOptions(axisOptions) {\n                var axisColor = (axisOptions || {}).color || axisDefaults.color;\n                var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                    line: { color: axisColor },\n                    labels: { color: axisColor },\n                    title: { color: axisColor }\n                }, axisOptions);\n                delete result[axisName];\n                return result;\n            }\n            for (var idx = 0; idx < AXIS_NAMES.length; idx++) {\n                axisName = AXIS_NAMES[idx] + 'Axis';\n                axisDefaults = options.axisDefaults || {};\n                axes = [].concat(options[axisName]);\n                axes = axes.map(mapAxisOptions);\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            }\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series;\n            var seriesLength = series.length;\n            var seriesDefaults = options.seriesDefaults;\n            var commonDefaults = deepExtend({}, options.seriesDefaults);\n            var themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {};\n            var commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (var i = 0; i < seriesLength; i++) {\n                var seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function axisRanges(axes) {\n            var ranges = {};\n            for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i];\n                var axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function sortDates(dates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            var dates = sortDates(srcDates, comparer);\n            var length = dates.length;\n            var result = length > 0 ? [dates[0]] : [];\n            for (var i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function transpose(rows) {\n            var rowCount = rows.length;\n            var result = [];\n            for (var rowIx = 0; rowIx < rowCount; rowIx++) {\n                var row = rows[rowIx];\n                var colCount = row.length;\n                for (var colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        function clearMissingValues(originalOptions, options) {\n            for (var field in options) {\n                var fieldValue = options[field];\n                var originalValue = originalOptions[field];\n                if (defined(originalValue)) {\n                    var nullValue = fieldValue === null;\n                    if (nullValue || !defined(fieldValue)) {\n                        delete originalOptions[field];\n                        if (nullValue) {\n                            delete options[field];\n                        }\n                    } else if (originalValue && isObject(fieldValue)) {\n                        if (isObject(originalValue)) {\n                            clearMissingValues(originalValue, fieldValue);\n                        }\n                    }\n                }\n            }\n        }\n        setDefaultOptions(Chart, {\n            renderAs: '',\n            chartArea: {},\n            legend: {\n                visible: true,\n                labels: {}\n            },\n            categoryAxis: {},\n            seriesDefaults: {\n                type: COLUMN,\n                data: [],\n                highlight: { visible: true },\n                labels: {},\n                negativeValues: { visible: false }\n            },\n            series: [],\n            seriesColors: null,\n            tooltip: { visible: false },\n            transitions: true,\n            valueAxis: {},\n            plotArea: {},\n            title: {},\n            xAxis: {},\n            yAxis: {},\n            panes: [{}],\n            pannable: false,\n            zoomable: false\n        });\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BoxPlotChart: BoxPlotChart,\n            BoxPlot: BoxPlot,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            Chart: Chart,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            ChartAxis: ChartAxis,\n            ChartPlotArea: ChartPlotArea,\n            anyHasZIndex: anyHasZIndex,\n            appendIfNotNull: areNumbers,\n            areNumbers: areNumbers,\n            categoriesCount: categoriesCount,\n            countNumbers: countNumbers,\n            equalsIgnoreCase: equalsIgnoreCase,\n            evalOptions: evalOptions,\n            filterSeriesByType: filterSeriesByType,\n            getDateField: getDateField,\n            getField: getField,\n            hasGradientOverlay: hasGradientOverlay,\n            hasValue: hasValue,\n            isDateAxis: isDateAxis,\n            segmentVisible: segmentVisible,\n            seriesTotal: seriesTotal,\n            singleItemOrArray: singleItemOrArray\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/chart', [\n        'dataviz/chart/kendo-chart',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var NS = '.kendoChart';\n        var kendo = window.kendo;\n        var Class = kendo.Class;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var dataviz = kendo.dataviz;\n        var constants = dataviz.constants;\n        var KendoChart = dataviz.Chart;\n        var SeriesBinder = dataviz.SeriesBinder;\n        var Widget = kendo.ui.Widget;\n        var DataSource = kendo.data.DataSource;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n        var getField = dataviz.getField;\n        var InstanceObserver = dataviz.InstanceObserver;\n        var inArray = dataviz.inArray;\n        var services = dataviz.services;\n        var proxy = $.proxy;\n        var isArray = $.isArray;\n        var extend = $.extend;\n        var template = kendo.template;\n        var MOUSELEAVE_NS = 'mouseleave' + NS;\n        var AXIS_LABEL_CLICK = constants.AXIS_LABEL_CLICK;\n        var LEGEND_ITEM_CLICK = constants.LEGEND_ITEM_CLICK;\n        var LEGEND_ITEM_HOVER = constants.LEGEND_ITEM_HOVER;\n        var SERIES_CLICK = constants.SERIES_CLICK;\n        var SERIES_HOVER = constants.SERIES_HOVER;\n        var PLOT_AREA_CLICK = constants.PLOT_AREA_CLICK;\n        var PLOT_AREA_HOVER = constants.PLOT_AREA_HOVER;\n        var DRAG = constants.DRAG;\n        var DRAG_END = constants.DRAG_END;\n        var DRAG_START = constants.DRAG_START;\n        var ZOOM_START = constants.ZOOM_START;\n        var ZOOM = constants.ZOOM;\n        var ZOOM_END = constants.ZOOM_END;\n        var SELECT_START = constants.SELECT_START;\n        var SELECT = constants.SELECT;\n        var SELECT_END = constants.SELECT_END;\n        var RENDER = constants.RENDER;\n        var NOTE_CLICK = constants.NOTE_CLICK;\n        var NOTE_HOVER = constants.NOTE_HOVER;\n        var CHANGE = 'change';\n        var DATABOUND = 'dataBound';\n        var LEAVE = 'leave';\n        var VALUE = constants.VALUE;\n        var PIE = constants.PIE;\n        var DONUT = constants.DONUT;\n        var FUNNEL = constants.FUNNEL;\n        var Observable = kendo.Observable;\n        var TOOLTIP_ANIMATION_DURATION = 150;\n        var TOOLTIP_SHOW_DELAY = 100;\n        var TOOLTIP_INVERSE = 'k-chart-tooltip-inverse';\n        var SHARED_TOOLTIP_CLASS = 'k-chart-shared-tooltip';\n        services.DomEventsBuilder.register({\n            create: function (element, events) {\n                return new kendo.UserEvents(element, deepExtend({\n                    global: true,\n                    multiTouch: true,\n                    fastTap: true\n                }, events));\n            }\n        });\n        var ChartInstanceObserver = InstanceObserver.extend({\n            handlerMap: {\n                showTooltip: '_showTooltip',\n                hideTooltip: '_hideTooltip',\n                legendItemClick: '_onLegendItemClick',\n                render: '_onRender'\n            }\n        });\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(this, element);\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    delete userOptions.dataSource;\n                }\n                this.options = deepExtend({}, this.options, userOptions);\n                this.wrapper = this.element;\n                this._attachEvents();\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                this._seriesVisibility = new SeriesVisibilityState();\n                this.bind(this.events, this.options);\n                this._initDataSource(userOptions);\n                kendo.notify(this, dataviz.ui);\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                RENDER\n            ],\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                chartArea: {},\n                legend: {},\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {},\n                series: [],\n                seriesColors: null,\n                tooltip: {},\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            items: function () {\n                return $();\n            },\n            refresh: function () {\n                var chart = this;\n                var instance = chart._instance;\n                instance.applyDefaults(chart.options);\n                instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            redraw: function (paneName) {\n                this._size = null;\n                this._instance.redraw(paneName);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                delete options.dataSource;\n                Widget.fn._setEvents.call(chart, options);\n                this._instance.applyOptions(options, this._getThemeOptions(options));\n                this.options = this._instance.options;\n                this._tooltip.setOptions(this.options.tooltip);\n                this._sourceSeries = null;\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                chart._instance.updateMouseMoveHandler();\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                if (chart._instance) {\n                    chart._instance.destroy();\n                    delete this._instance;\n                }\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                    delete this._tooltip;\n                }\n                this._destroyCrosshairTooltips();\n                Widget.fn.destroy.call(chart);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(this, panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(this, panes[idx]);\n                }\n            },\n            findSeries: function (callback) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (callback(series[idx])) {\n                        return new ChartSeries(this, series[idx]);\n                    }\n                }\n            },\n            findSeriesByName: function (name) {\n                return this._createSeries({ name: name });\n            },\n            findSeriesByIndex: function (index) {\n                return this._createSeries({ index: index });\n            },\n            _createSeries: function (options) {\n                var seriesOptions = this._seriesOptions(options);\n                if (seriesOptions) {\n                    return new ChartSeries(this, seriesOptions);\n                }\n            },\n            _seriesOptions: function (options) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                var seriesOptions;\n                if (defined(options.index)) {\n                    seriesOptions = series[options.index];\n                } else if (defined(options.name)) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (series[idx].name === options.name) {\n                            seriesOptions = series[idx];\n                            break;\n                        }\n                    }\n                }\n                return seriesOptions;\n            },\n            _attachEvents: function () {\n                this.element.on(MOUSELEAVE_NS, proxy(this._mouseleave, this));\n            },\n            _mouseleave: function (e) {\n                var instance = this._instance;\n                var tooltip = this._tooltip;\n                var target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length) && instance && !instance.handlingTap) {\n                    instance.hideElements();\n                }\n            },\n            _getThemeOptions: function (userOptions) {\n                var themeName = (userOptions || {}).theme;\n                if (themeName === 'sass' || themeName === 'default-v2' || themeName === 'bootstrap-v4') {\n                    return dataviz.autoTheme().chart;\n                }\n                if (defined(themeName)) {\n                    var themes = dataviz.ui.themes || {};\n                    var theme = themes[themeName] || themes[themeName.toLowerCase()] || {};\n                    return theme.chart || {};\n                }\n            },\n            _initChart: function () {\n                this._createChart(this.options, this._getThemeOptions(this.options));\n                this.options = this._instance.options;\n            },\n            _createChart: function (options, themeOptions) {\n                this._instance = new KendoChart(this.element[0], options, themeOptions, {\n                    observer: new ChartInstanceObserver(this),\n                    sender: this\n                });\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind('change', chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                this._initChart();\n                this._initTooltip();\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            _destroyCrosshairTooltips: function () {\n                var tooltips = this._crosshairTooltips;\n                if (tooltips) {\n                    for (var key in tooltips) {\n                        tooltips[key].destroy();\n                    }\n                }\n                this._crosshairTooltips = {};\n            },\n            _getCrosshairTooltip: function (name, index) {\n                var tooltips = this._crosshairTooltips = this._crosshairTooltips || {};\n                var key = name + index;\n                var tooltip = tooltips[key];\n                if (!tooltip) {\n                    tooltip = tooltips[key] = new CrosshairTooltip(this.element);\n                }\n                return tooltip;\n            },\n            _showTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.show(e);\n                } else if (this._tooltip) {\n                    this._tooltip.show(e);\n                }\n            },\n            _hideTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.hide();\n                } else if (this._tooltip) {\n                    this._tooltip.hide(e);\n                }\n            },\n            _onRender: function (e) {\n                this._destroyCrosshairTooltips();\n                this._copyMembers(e.sender);\n                if (!this._hasDataSource || this._hasData || !this.options.autoBind) {\n                    this.trigger(RENDER);\n                }\n            },\n            _copyMembers: function (instance) {\n                this._instance = instance;\n                this.options = instance.options;\n                this._originalOptions = instance._originalOptions;\n                this.surface = instance.surface;\n                this._plotArea = instance._plotArea;\n                this._model = instance._model;\n                this._highlight = instance._highlight;\n                this._selections = instance._selections;\n                this._pannable = instance._pannable;\n                this._zoomSelection = instance._zoomSelection;\n                this._mousewheelZoom = instance._mousewheelZoom;\n            },\n            requiresHandlers: function (names) {\n                var events = this._events;\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (defined(events[names[idx]])) {\n                        return true;\n                    }\n                }\n            },\n            _initTooltip: function () {\n                this._tooltip = this._createTooltip();\n                this._tooltip.bind(LEAVE, proxy(this._tooltipleave, this));\n            },\n            _onLegendItemClick: function (e) {\n                if (!this.trigger(LEGEND_ITEM_CLICK, e)) {\n                    this._legendItemClick(e.seriesIndex, e.pointIndex);\n                }\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this._instance, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                if ($.inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ]) >= 0) {\n                    var pointVisibility = currentSeries.pointVisibility = currentSeries.pointVisibility || {};\n                    var visible = pointVisibility[pointIndex];\n                    pointVisibility[pointIndex] = defined(visible) ? !visible : false;\n                } else {\n                    currentSeries.visible = !currentSeries.visible;\n                    this._seriesVisibility.save(currentSeries);\n                }\n                chart._noTransitionsRedraw();\n            },\n            _createTooltip: function () {\n                return new Tooltip(this.element, this.options.tooltip);\n            },\n            _tooltipleave: function () {\n                var chart = this._instance, plotArea = chart._plotArea, highlight = chart._highlight;\n                plotArea.hideCrosshairs();\n                highlight.hide();\n            },\n            _bindData: function (e) {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], seriesVisibility = this._seriesVisibility, currentSeries, groupedSeries;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        groupedSeries = groupSeries(currentSeries, data);\n                        processedSeries = processedSeries.concat(groupedSeries);\n                        seriesVisibility.applyByGroup(groupedSeries, e);\n                    } else {\n                        currentSeries = extend({}, currentSeries);\n                        processedSeries.push(currentSeries);\n                        seriesVisibility.applyByIndex(currentSeries, e);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                this._instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                this._hasData = true;\n            },\n            _onDataChanged: function (e) {\n                this._bindData(e);\n                this.trigger(DATABOUND);\n                this._redraw();\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else if (this._instance) {\n                    this._instance.bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            }\n        });\n        var proxyMembers = [\n            'getAxis',\n            'findAxisByName',\n            'plotArea',\n            'toggleHighlight',\n            'showTooltip',\n            'hideTooltip',\n            'exportVisual',\n            '_resize',\n            '_redraw',\n            '_noTransitionsRedraw',\n            '_legendItemHover',\n            '_eventCoordinates'\n        ];\n        function createProxyMember(name) {\n            Chart.fn[name] = function () {\n                var instance = this._instance;\n                if (instance) {\n                    return instance[name].apply(instance, arguments);\n                }\n            };\n        }\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!kendo.isFunction(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                seriesClone._groupValue = data[groupIx].value;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        dataviz.ui.plugin(Chart);\n        var SeriesVisibilityState = Class.extend({\n            init: function () {\n                this.groups = {};\n                this.index = {};\n            },\n            applyByGroup: function (series, e) {\n                if (e && e.action) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (this.groups[series[idx]._groupValue] === false) {\n                            series[idx].visible = false;\n                        }\n                    }\n                } else {\n                    this.groups = {};\n                }\n            },\n            applyByIndex: function (series, e) {\n                if (e && e.action) {\n                    if (this.index[series.index] === false) {\n                        series.visible = false;\n                    }\n                } else {\n                    this.index = {};\n                }\n            },\n            save: function (series) {\n                if (!series) {\n                    return;\n                }\n                if (defined(series._groupValue)) {\n                    this.groups[series._groupValue] = series.visible;\n                } else {\n                    this.index[series.index] = series.visible;\n                }\n            }\n        });\n        var geom = kendo.geometry;\n        var Tooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                this.setOptions(options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = Tooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = Tooltip.template = kendo.template('<div class=\\'k-tooltip k-chart-tooltip\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + '#if (d.border) {# border: #= d.border.width #px solid; #}#' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>', {\n                        useWithBlock: false,\n                        paramName: 'd'\n                    });\n                }\n                tooltip.element = $(tooltip.template(tooltip.options));\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            setOptions: function (options) {\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION },\n                sharedTemplate: '<table>' + '<th colspan=\\'#= colspan #\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(colorMarker) { # ' + '<td><span class=\\'k-chart-shared-tooltip-marker\\' style=\\'background-color:#:point.series.color#\\'></span></td>' + '# } #' + '# if(nameColumn) { # ' + '<td> #if (point.series.name) {# #: point.series.name #: #} else {# &nbsp; #}#</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            getAnchor: function (size) {\n                var anchor = this.anchor;\n                var point = anchor.point;\n                var align = anchor.align;\n                var x = point.left;\n                var y = point.top;\n                if (align.horizontal === 'center') {\n                    x -= size.width / 2;\n                } else if (align.horizontal === 'right') {\n                    x -= size.width;\n                }\n                if (align.vertical === 'center') {\n                    y -= size.height / 2;\n                } else if (align.vertical === 'bottom') {\n                    y -= size.height;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.getAnchor(size), top = anchor.y, left = anchor.x, zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, outerHeight(viewport) / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, outerWidth(viewport) / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            show: function (e) {\n                this.anchor = e.anchor;\n                this.element.css(e.style);\n                this.element.toggleClass(TOOLTIP_INVERSE, !!e.className);\n                this.element.toggleClass(SHARED_TOOLTIP_CLASS, !!e.shared);\n                var content = e.shared ? this._sharedContent(e) : this._pointContent(e.point);\n                this.element.html(content);\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _sharedContent: function (e) {\n                var points = e.points;\n                var nameColumn = dataviz.grep(points, function (point) {\n                    return defined(point.series.name);\n                }).length;\n                var colorMarker = e.series.length > 1;\n                var colspan = 1;\n                if (nameColumn) {\n                    colspan++;\n                }\n                if (colorMarker) {\n                    colspan++;\n                }\n                var template = kendo.template(this.options.sharedTemplate);\n                var content = template({\n                    points: points,\n                    category: e.category,\n                    categoryText: e.categoryText,\n                    content: this._pointContent,\n                    colorMarker: colorMarker,\n                    nameColumn: nameColumn,\n                    colspan: colspan\n                });\n                return content;\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: outerWidth(this.element),\n                    height: outerHeight(this.element)\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                    this.hide();\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var CrosshairTooltip = Tooltip.extend({\n            init: function (chartElement, options) {\n                Tooltip.fn.init.call(this, chartElement, options);\n                this.element.addClass('k-chart-crosshair-tooltip');\n            },\n            show: function (e) {\n                var element = this.element;\n                if (element) {\n                    this.anchor = e.anchor;\n                    this.element.css(e.style);\n                    this.element.html(this.content(e));\n                    this.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (e) {\n                var content = e.value, options = e.crosshair.options.tooltip;\n                if (options.template) {\n                    content = template(options.template)({ value: content });\n                }\n                return content;\n            },\n            hide: function () {\n                this.element.hide();\n            }\n        });\n        var ChartPane = Class.extend({\n            init: function (chart, pane) {\n                this._chart = chart;\n                this._pane = pane;\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this.name = pane.options.name;\n            },\n            series: function () {\n                var chart = this._chart;\n                var seriesByPane = chart._plotArea.groupSeriesByPane();\n                var series = seriesByPane[this.name || 'default'];\n                var result = [];\n                if (series) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        result.push(new ChartSeries(chart, series[idx]));\n                    }\n                }\n                return result;\n            }\n        });\n        var ChartSeries = Class.extend({\n            init: function (chart, options) {\n                this._chart = chart;\n                this._options = options;\n            },\n            points: function (filter) {\n                var points = this._points;\n                if (!points) {\n                    var series = this._seriesOptions();\n                    var plotArea = this._chart._plotArea;\n                    this._points = points = plotArea.pointsBySeriesIndex(series.index);\n                }\n                if (kendo.isFunction(filter)) {\n                    points = this._filterPoints(points, filter);\n                }\n                return points;\n            },\n            data: function (data) {\n                var series = this._seriesOptions();\n                if (data) {\n                    var chart = this._chart;\n                    var plotArea = chart._plotArea;\n                    series.data = data;\n                    if (series.categoryField) {\n                        var axis = plotArea.seriesCategoryAxis(series);\n                        var options = [].concat(chart.options.categoryAxis);\n                        chart._instance.bindCategoryAxisFromSeries(options[axis.axisIndex], axis.axisIndex);\n                    }\n                    chart._noTransitionsRedraw();\n                    this._clearFields();\n                }\n                return series.data;\n            },\n            findPoint: function (filter) {\n                var points = this.points();\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (filter(points[idx])) {\n                        return points[idx];\n                    }\n                }\n            },\n            toggleHighlight: function (show, elements) {\n                if (!elements) {\n                    elements = this.points();\n                } else if (kendo.isFunction(elements)) {\n                    elements = this.points(elements);\n                } else {\n                    elements = isArray(elements) ? elements : [elements];\n                }\n                this._chart._instance.togglePointsHighlight(show, elements);\n            },\n            toggleVisibility: function (visible, filter) {\n                var chart = this._chart;\n                var seriesOptions = this._seriesOptions();\n                var hasFilter = kendo.isFunction(filter);\n                if (!hasFilter) {\n                    seriesOptions.visible = visible;\n                    chart._seriesVisibility.save(seriesOptions);\n                } else {\n                    if (inArray(seriesOptions.type, [\n                            PIE,\n                            DONUT,\n                            FUNNEL\n                        ])) {\n                        var data = this._filterData(filter);\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data[idx].visible = visible;\n                        }\n                    } else {\n                        seriesOptions.visible = function (data) {\n                            return filter(data.dataItem) ? visible : true;\n                        };\n                    }\n                }\n                chart._noTransitionsRedraw();\n                this._clearFields();\n            },\n            _filterData: function (filter) {\n                var data = this._seriesOptions().data;\n                var length = data.length;\n                var result = [];\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(data[idx])) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            _filterPoints: function (points, filter) {\n                var result = [];\n                var length = points.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(points[idx])) {\n                        result.push(points[idx]);\n                    }\n                }\n                return result;\n            },\n            _seriesOptions: function () {\n                var series = this._series;\n                if (!series) {\n                    series = this._series = this._chart._seriesOptions(this._options);\n                }\n                return series;\n            },\n            _clearFields: function () {\n                delete this._points;\n                delete this._series;\n            }\n        });\n        dataviz.Tooltip = Tooltip;\n        dataviz.CrosshairTooltip = CrosshairTooltip;\n        dataviz.ChartInstanceObserver = ChartInstanceObserver;\n        dataviz.ChartPane = ChartPane;\n        dataviz.ChartSeries = ChartSeries;\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'dataviz/chart/kendo-chart',\n        'dataviz/chart/chart'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [{\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }]\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}