{"version":3,"sources":["kendo.dataviz.core.js"],"names":["f","define","$","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","text","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","textContent","appendChild","body","String","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","isArray","Array","addClass","element","classes","idx","className","classArray","indexOf","removeClass","replace","SPACE_REGEX","alignPathToPixel","path","offset","stroke","drawing","defined","segments","anchor","round","translate","clockwise","angle1","angle2","x","y","isObject","isString","STRING","isNumber","isNaN","styleValue","isSizeField","field","SIZE_STYLES_REGEX","test","elementStyles","styles","result","field$1","stylesArray","getComputedStyle","parseFloat","getSpacing","defaultSpacing","spacing","top","right","bottom","left","TOP","RIGHT","BOTTOM","LEFT","grep","array","callback","hasClasses","classNames","names","split","inArray","interpolateValue","start","end","progress","COORD_PRECISION","isFunction","fn","mousewheelDelta","e","delta","wheelDelta","Math","ceil","floor","detail","setDefaultOptions","type","proto","prototype","sparseArrayLimits","arr","min","MAX_VALUE","max","MIN_VALUE","isFinite","undefined","rotatePoint","cx","cy","angle","theta","rad","Point","cos","sin","numericComparer","a","b","boxDiff","r","s","c","d","g","h","boxes","x1","y1","x2","y2","Box","innerRadialStops","currentStop","stops","usedSpace","innerRadius","radius","currentStops","rectToBox","rect","origin","bottomRight","createAxisTick","tickOptions","tickX","tickY","position","tick","Path","color","vertical","moveTo","lineTo","createAxisGridLine","gridLine","lineStart","lineEnd","line","dashType","absoluteDateDiff","diff","getTime","offsetDiff","getTimezoneOffset","TIME_PER_MINUTE","addTicks","date","ticks","Date","toDate","startOfWeek","weekStartDay","daysToSubtract","day","getDay","TIME_PER_DAY","adjustDST","hours","getHours","setHours","addHours","tzDiff","roundedDate","setMinutes","TIME_PER_HOUR","addDuration","dateValue","unit","YEARS","getFullYear","MONTHS","getMonth","WEEKS","DAYS","getDate","HOURS","MINUTES","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","MILLISECONDS","getMilliseconds","setMilliseconds","floorDate","ceilDate","dateComparer","dateDiff","toTime","dateEquals","timeIndex","baseUnit","TIME_PER_UNIT","dateIndex","baseUnitStep","index","startDate","duration","lteDateIndex","sortedDates","currentDate","low","high","parseDate","intlService","parseDates","dates","autoMajorUnit","scale","relativeValue","scaleMultiplier","DEFAULT_PRECISION","abs","pow","log","autoAxisMin","narrow","axisMin","minValue","ZERO_THRESHOLD","autoAxisMax","axisMax","maxValue","step","limitCoordinate","COORDINATE_LIMIT","autoAxisOptions","seriesMin","seriesMax","narrowRange","autoMin","autoMax","majorUnit","autoOptions","roundToMajorUnit","remainderClose","totalAxisOptions","axisOptions","userOptions","userSetLimits","minorUnit","divisor","ratio","remainder","threshold","timeUnits","TIME_PER_YEAR","TIME_PER_MONTH","TIME_PER_WEEK","applyDefaults","baseUnitTime","userMajorUnit","actualUnits","totalUnits","unitsToAdd","head","tail","initRange","axisCrossingValue","throwNegativeValuesError","autoAxisMin$1","base","autoAxisMax$1","logMaxRemainder","Error","angularDistance","numberSign","Group","geometry","Rect","Circle","geometryTransform","Segment","dataviz","__common_getter_js","X","Y","CENTER","WIDTH","HEIGHT","DEFAULT_WIDTH","DEFAULT_HEIGHT","WHITE","BLACK","DEFAULT_FONT","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","OUTSIDE","NONE","CIRCLE","TRIANGLE","CROSS","ARC","INSIDE","VALUE","OBJECT","DATE","FORMAT_REGEX","constants","TRIGGER","InstanceObserver","ref","append","bindEvents","deg","elementOffset","elementSize","eventElement","eventCoordinates","last","limitValue","unbindEvents","valueOrDefault","FontLoader","Ring","Sector","ShapeBuilder","ChartElement","BoxElement","ShapeElement","LINEAR","RADIAL","GRADIENTS","RootElement","FloatElement","DrawingText","Text","ROWS_SPLIT_REGEX","TextBox","Title","AxisLabel","defaultImplementation","IntlService","FORMAT_REPLACE_REGEX","FormatService","ChartService","current$1","DomEventsBuilder","current$2","TemplateService","services","DEFAULT_ICON_SIZE","DEFAULT_LABEL_COLOR","Note","Axis","MIN_CATEGORY_POINTS_RANGE","CategoryAxis","TIME_PER_MILLISECOND","DateLabelFormats","AUTO","BASE_UNITS","FIT","DateCategoryAxis","MIN_VALUE_RANGE","NumericAxis","DateValueAxis","DEFAULT_MAJOR_UNIT","LogarithmicAxis","GridLinesMixin","RadarCategoryAxis","PolarAxis","RadarNumericAxisMixin","RadarNumericAxis","RadarLogarithmicAxis","WEIGHT","EXTREMUM_ALLOWED_DEVIATION","CurveProcessor","transform","getter","Number","observer","handlers","handlerMap","trigger","name","args","isDefaultPrevented","callObserver","fnName","len","arguments","apply","requiresHandlers","this$1","fetchFonts","fonts","state","depth","MAX_DEPTH","Object","keys","forEach","loadFonts","promises","font","load","logToConsole","Promise","all","then","preloadFonts","clone","equals","point","rotate","center","degrees","cosT","sinT","multiply","distanceTo","dx","dy","sqrt","onCircle","radians","move","wrap","targetBox","wrapPoint","arrayPoint","snapTo","axis","alignTo","targetCenter","shrink","dw","dh","expand","pad","padding","unpad","containsPoint","points","getHash","overlaps","rotation","r1","r2","r3","r4","toRect","hasSize","align","alignment","c1","c2","sizeFunc","startAngle","middle","setRadius","newRadius","radianAngle","ax","ay","adjacentBox","distance","sector","midAndle","midPoint","hw","hh","sa","ca","p","endAngle","vector","startPoint","startVector","endPoint","endVector","dist","getBBox","angles","allAngles","startAngleIndex","endAngleIndex","slice","concat","call","createRing","innerEnd","arc","Arc","radiusX","radiusY","fromArc","close","pointAt","children","reflow","currentChild","destroy","animation","getRoot","parent","getSender","service","getService","sender","chartService","translateChildren","childrenCount","item","arguments$1","renderVisual","visible","createVisual","addVisual","renderChildren","createAnimation","renderComplete","visual","chartElement","appendVisual","zIndex","Animation","create","childVisual","noclip","clipRoot","stackRoot","stackVisual","isStackRoot","pos","sibling","here","visuals","insert","traverse","child","closest","match","matched","hasHighlight","highlight","createHighlight","toggleHighlight","show","highlightOptions","customVisual","_highlight","fill","opacity","highlightVisualArgs","series","dataItem","category","percentage","runningTotal","total","createGradientOverlay","gradientOptions","overlay","createGradient","closed","elements","margin","shrinkToFit","hasSetSize","borderWidth","border","reflowPaddingBox","vAlign","paddingBox","contentBox","hasBox","background","fromRect","visualStyle","cursor","pointData","getElement","halfWidth","fromPoints","MultiPath","visualOptions","glass","sharpBevel","roundedBevel","roundedGlass","supportVML","sharpGlass","bubbleShadow","rootOptions","parseInt","gradients","currentBox","createBackground","drawingGradient","hashCode","gradient","LinearGradient","RadialGradient","_initDirection","groupAxis","elementAxis","groupSizeField","elementSizeField","groupSpacing","elementSpacing","vSpacing","reflowChildren","groupStart","groupIdx","group","groupElements","elementStart","groupElementsCount","elementSize$$1","groupElementStart","elementBox","ref$1","groupOptions","groups","groupsSize","maxGroupElementsSize","groupsCount","groupsStart","alignStart","groupSize","maxSize","groupElementsSize","content","topLeft","_initContainer","_autoReflow","rowIdx","rows","floatElement","textOptions","container","trim","visualBox","visualFn","_boxReflow","visualContext","clippedBBox","normalBox","rotatedBox","rotationTransform","getDefaultVisual","boxCenter","buildTitle","defaultOptions","title","titleOptions","context","format","culture","click","widget","alignRotation","bbox","matrix","rotationMatrix","rotationOrigin","alignAxis","distanceAxis","axisAnchor","topRight","bottomLeft","distanceLeft","distanceRight","alignEnd","alignCenter","transformCopy","toString","register","userImplementation","defineProperties","implementation","_intlService","auto","formatString","intl","values","localeAuto","locale","placeholderFormat","substring","chart","notify","events","compile","template","fields","render","hide","label","icon","noteTemplate","wrapperBox","linePoints","createLine","defaultVisual","eventArgs","preventDefault","hover","leave","_unsetActivePoint","labels","majorTickSize","minorTickSize","minorTicks","minorTickType","majorTicks","majorTickType","_deferLabels","createLabels","createTitle","createNotes","labelsRange","skip","labelsCount","range","labelOptions","autoRotateLabels","createAxisLabel","lineBox","mirror","axisX","axisY","lineWidth","visualSize","note","notes","items","data","parseNoteValue","reverse","createPlotBands","gridLinesVisual","gridLines","_gridLines","createTicks","lineGroup","tickPositions","skipUnit","count","tickLineOptions","getMajorTickPositions","getMinorTickPositions","_alignLines","_lineGroup","getActualTickSize","tickSize","_backgroundPath","altAxis","slotX","slotY","bandRect","plotBands","plotArea","_plotbandGroup","pane","axes","getSlot","from","to","createGridLines","axisLineVisible","linePos","lineOptions","minorGridLines","majorGridLines","labelSize","sizeFn","titleSize","space","rootBox","boxSize","maxLabelSize","arrangeTitle","arrangeLabels","arrangeNotes","getLabelsTickPositions","labelTickIndex","tickIx","labelPos","labelBox","firstTickPosition","nextTickPosition","labelX","labelY","labelsBetweenTicks","justified","labelOffset","idx$1","slot","shouldRenderNote","noteSlot","secondAxis","axisLabelText","tmpl","limit","lastLabel","limitRange","rangeSize","valueRange","_ticks","_initCategories","categories","definedMin","definedMax","srcCategories","rangeIndices","totalRange","totalRangeIndices","_seriesMax","getScale","getTickPositions","stepSize","positions","unshift","hideOutOfRangeLabels","valueAxis","firstLabel","getTicks","cache","_hash","p1","p2","slotBox","singleSlot","categoryIndex","pointCategoryIndex","startValue","getCategory","translateRange","zoomRange","rate","totalMin","totalMax","scaleRange","dataItems","hideOutOfRangeNotes","pan","pointsRange","diffStart","diffEnd","rangeMin","rangeMax","years","months","weeks","days","minutes","seconds","milliseconds","useDefault","roundToBaseUnit","userSetBaseUnit","userSetBaseUnitStep","toLowerCase","defaultBaseUnit","autoBaseUnit","_groupsStart","groupCategories","rounds","lastCategory","categoryIx","minDiff","_categoryRange","_range","categoryLimits","categoriesRange","minIdx","maxIdx","_roundToTotalStep","currentRange","round$$1","datesRange","totalLimits","panRange","indicesRange","autoBaseUnitSteps","maxDateGroups","maxDiff","rangeDiff","baseUnitIndex","autoBaseUnitStep","stepIndex","rangeOptions","autoUnit","stepOptions","unitSteps","nextStep","span","autoUnitIx","units","shift","nextDate","maxCategory","upper","roundToNext","roundedStep","unitFormat","dateFormats","totalOptions","totalMajorUnit","getDivisions","stepValue","lineSize","divisions","dir","startEdge","skipStep","getValue","valueOffset","endValue","isValidRange","newRange","axisCrossingValues","timeRange","exact","limittedRange","logMin","logMax","floorMax","traverseMajorTicksPositions","tickPosition","traverseMinorTicksPositions","power","_lineOptions","minorOptions","ref$2","_minorIntervalOptions","minorStep","acceptOptionsRange","acceptNewRange","nextValue","difference","majorAngles","minorAngles","skipMajor","majorGridLineAngles","renderMajorGridLines","minorGridLineAngles","renderMinorGridLines","renderGridLines","radiusCallback","circle","gridLineAngles","skipAngles","divs","intervals","altAxisVisible","alpha","intervalAngle","reflowLabels","skipOption","stepOption","divCount","divAngle","majorIntervals","minorIntervals","interval","minorAngle","minorRadius","band","ring","plotBandSlot","slotStart","toValue","slots","totalDivs","slotAngle","fromValue","instanceOptions","tmp","atan2","PI","bandStyle","shape","polarAxis","plotBandPoints","innerPoints","outerPoints","innerCircle","outerCircle","radarMajorGridLinePositions","radarMinorGridLinePositions","tickRadius","angleIx","midAngle","gamma","beta","axisType","minorSkipStep","process","dataPoints","p0","tangent","initialControlPoint","lastControlPoint","controlPoints","tangent$1","cp0","controlPoints$1","cp1","controlPoints$2","tangent$2","removeDuplicates","pop","controlOut","firstControlPoint","secondControlPoint","splice","invertAxis","lineFunction","calculateFunction","isLine","monotonic","sign","oldXField","xField","yField","restrict","switchOrientation","isMonotonicByField","restrictControlPoint","cp","p3","t1","t2","xValue","yValue","controlPoint","Gradients","draw","ExportMixin","skipLegacy","exportVisual","exportSVG","exportImage","exportPDF","svg","imageDataURL","Surface","exportGroup","surface","image","support","canvas","css","display","appendTo","_rootElement","toDataURL","remove","Point2D","Box2D","mwDelta","originalEvent"],"mappings":"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","file":"kendo.dataviz.core.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                measureBox.textContent = text;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (String(text).length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/kendo-core', [\n        'kendo.core',\n        'kendo.drawing'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var drawing = kendo.drawing;\n        var util = drawing.util;\n        var Path = drawing.Path;\n        var Group = drawing.Group;\n        var Class = kendo.Class;\n        var geometry = kendo.geometry;\n        var Rect = geometry.Rect;\n        var Circle = geometry.Circle;\n        var geometryTransform = geometry.transform;\n        var Segment = geometry.Segment;\n        var dataviz = kendo.dataviz;\n        var deepExtend = kendo.deepExtend;\n        var __common_getter_js = kendo.getter;\n        var X = 'x';\n        var Y = 'y';\n        var TOP = 'top';\n        var BOTTOM = 'bottom';\n        var LEFT = 'left';\n        var RIGHT = 'right';\n        var CENTER = 'center';\n        var WIDTH = 'width';\n        var HEIGHT = 'height';\n        var COORD_PRECISION = 3;\n        var MAX_VALUE = Number.MAX_VALUE;\n        var MIN_VALUE = -Number.MAX_VALUE;\n        var DEFAULT_WIDTH = 600;\n        var DEFAULT_HEIGHT = 400;\n        var WHITE = '#fff';\n        var BLACK = '#000';\n        var DEFAULT_FONT = '12px sans-serif';\n        var DEFAULT_PRECISION = 10;\n        var AXIS_LABEL_CLICK = 'axisLabelClick';\n        var NOTE_CLICK = 'noteClick';\n        var NOTE_HOVER = 'noteHover';\n        var OUTSIDE = 'outside';\n        var NONE = 'none';\n        var CIRCLE = 'circle';\n        var TRIANGLE = 'triangle';\n        var CROSS = 'cross';\n        var ARC = 'arc';\n        var INSIDE = 'inside';\n        var VALUE = 'value';\n        var STRING = 'string';\n        var OBJECT = 'object';\n        var DATE = 'date';\n        var FORMAT_REGEX = /\\{\\d+:?/;\n        var constants = {\n            X: X,\n            Y: Y,\n            WIDTH: WIDTH,\n            HEIGHT: HEIGHT,\n            DEFAULT_HEIGHT: DEFAULT_HEIGHT,\n            DEFAULT_WIDTH: DEFAULT_WIDTH,\n            TOP: TOP,\n            LEFT: LEFT,\n            BOTTOM: BOTTOM,\n            RIGHT: RIGHT,\n            CENTER: CENTER,\n            COORD_PRECISION: COORD_PRECISION,\n            DEFAULT_PRECISION: DEFAULT_PRECISION,\n            CIRCLE: CIRCLE,\n            TRIANGLE: TRIANGLE,\n            CROSS: CROSS,\n            MAX_VALUE: MAX_VALUE,\n            MIN_VALUE: MIN_VALUE,\n            WHITE: WHITE,\n            BLACK: BLACK,\n            DEFAULT_FONT: DEFAULT_FONT,\n            AXIS_LABEL_CLICK: AXIS_LABEL_CLICK,\n            OUTSIDE: OUTSIDE,\n            INSIDE: INSIDE,\n            NONE: NONE,\n            NOTE_CLICK: NOTE_CLICK,\n            NOTE_HOVER: NOTE_HOVER,\n            VALUE: VALUE,\n            STRING: STRING,\n            OBJECT: OBJECT,\n            DATE: DATE,\n            ARC: ARC,\n            FORMAT_REGEX: FORMAT_REGEX\n        };\n        function isArray(value) {\n            return Array.isArray(value);\n        }\n        function addClass(element, classes) {\n            var classArray = isArray(classes) ? classes : [classes];\n            for (var idx = 0; idx < classArray.length; idx++) {\n                var className = classArray[idx];\n                if (element.className.indexOf(className) === -1) {\n                    element.className += ' ' + className;\n                }\n            }\n        }\n        var SPACE_REGEX = /\\s+/g;\n        function removeClass(element, className) {\n            if (element && element.className) {\n                element.className = element.className.replace(className, '').replace(SPACE_REGEX, ' ');\n            }\n        }\n        function alignPathToPixel(path) {\n            var offset = 0.5;\n            if (path.options.stroke && kendo.drawing.util.defined(path.options.stroke.width)) {\n                if (path.options.stroke.width % 2 === 0) {\n                    offset = 0;\n                }\n            }\n            for (var i = 0; i < path.segments.length; i++) {\n                path.segments[i].anchor().round(0).translate(offset, offset);\n            }\n            return path;\n        }\n        function clockwise(angle1, angle2) {\n            return -angle1.x * angle2.y + angle1.y * angle2.x < 0;\n        }\n        function isObject(value) {\n            return typeof value === 'object';\n        }\n        function isString(value) {\n            return typeof value === STRING;\n        }\n        function isNumber(value) {\n            return typeof value === 'number' && !isNaN(value);\n        }\n        function styleValue(value) {\n            if (isNumber(value)) {\n                return value + 'px';\n            }\n            return value;\n        }\n        var SIZE_STYLES_REGEX = /width|height|top|left|bottom|right/i;\n        function isSizeField(field) {\n            return SIZE_STYLES_REGEX.test(field);\n        }\n        function elementStyles(element, styles) {\n            var stylesArray = isString(styles) ? [styles] : styles;\n            if (isArray(stylesArray)) {\n                var result = {};\n                var style = window.getComputedStyle(element);\n                for (var idx = 0; idx < stylesArray.length; idx++) {\n                    var field = stylesArray[idx];\n                    result[field] = isSizeField(field) ? parseFloat(style[field]) : style[field];\n                }\n                return result;\n            } else if (isObject(styles)) {\n                for (var field$1 in styles) {\n                    element.style[field$1] = styleValue(styles[field$1]);\n                }\n            }\n        }\n        function getSpacing(value, defaultSpacing) {\n            if (defaultSpacing === void 0) {\n                defaultSpacing = 0;\n            }\n            var spacing = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            };\n            if (typeof value === 'number') {\n                spacing[TOP] = spacing[RIGHT] = spacing[BOTTOM] = spacing[LEFT] = value;\n            } else {\n                spacing[TOP] = value[TOP] || defaultSpacing;\n                spacing[RIGHT] = value[RIGHT] || defaultSpacing;\n                spacing[BOTTOM] = value[BOTTOM] || defaultSpacing;\n                spacing[LEFT] = value[LEFT] || defaultSpacing;\n            }\n            return spacing;\n        }\n        function grep(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                if (callback(array[idx])) {\n                    result.push(array[idx]);\n                }\n            }\n            return result;\n        }\n        function hasClasses(element, classNames) {\n            if (element.className) {\n                var names = classNames.split(' ');\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (element.className.indexOf(names[idx]) !== -1) {\n                        return true;\n                    }\n                }\n            }\n        }\n        function inArray(value, array) {\n            if (array) {\n                return array.indexOf(value) !== -1;\n            }\n        }\n        function interpolateValue(start, end, progress) {\n            return kendo.drawing.util.round(start + (end - start) * progress, COORD_PRECISION);\n        }\n        var TRIGGER = 'trigger';\n        var InstanceObserver = Class.extend({\n            init: function (observer, handlers) {\n                this.observer = observer;\n                this.handlerMap = deepExtend({}, this.handlerMap, handlers);\n            },\n            trigger: function (name, args) {\n                var ref = this;\n                var observer = ref.observer;\n                var handlerMap = ref.handlerMap;\n                var isDefaultPrevented;\n                if (handlerMap[name]) {\n                    isDefaultPrevented = this.callObserver(handlerMap[name], args);\n                } else if (observer[TRIGGER]) {\n                    isDefaultPrevented = this.callObserver(TRIGGER, name, args);\n                }\n                return isDefaultPrevented;\n            },\n            callObserver: function (fnName) {\n                var args = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    args[len] = arguments[len + 1];\n                return this.observer[fnName].apply(this.observer, args);\n            },\n            requiresHandlers: function (names) {\n                var this$1 = this;\n                if (this.observer.requiresHandlers) {\n                    return this.observer.requiresHandlers(names);\n                }\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (this$1.handlerMap[names[idx]]) {\n                        return true;\n                    }\n                }\n            }\n        });\n        function isFunction(fn) {\n            return typeof fn === 'function';\n        }\n        function map(array, callback) {\n            var length = array.length;\n            var result = [];\n            for (var idx = 0; idx < length; idx++) {\n                var value = callback(array[idx]);\n                if (kendo.drawing.util.defined(value)) {\n                    result.push(value);\n                }\n            }\n            return result;\n        }\n        function mousewheelDelta(e) {\n            var delta = 0;\n            if (e.wheelDelta) {\n                delta = -e.wheelDelta / 120;\n                delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n            }\n            if (e.detail) {\n                delta = kendo.drawing.util.round(e.detail / 3);\n            }\n            return delta;\n        }\n        var ref = kendo.drawing.util;\n        var append = ref.append;\n        var bindEvents = ref.bindEvents;\n        var defined = ref.defined;\n        var deg = ref.deg;\n        var elementOffset = ref.elementOffset;\n        var elementSize = ref.elementSize;\n        var eventElement = ref.eventElement;\n        var eventCoordinates = ref.eventCoordinates;\n        var last = ref.last;\n        var limitValue = ref.limitValue;\n        var objectKey = ref.objectKey;\n        var rad = ref.rad;\n        var round = ref.round;\n        var unbindEvents = ref.unbindEvents;\n        var valueOrDefault = ref.valueOrDefault;\n        var FontLoader = Class.extend({});\n        FontLoader.fetchFonts = function (options, fonts, state) {\n            if (state === void 0) {\n                state = { depth: 0 };\n            }\n            var MAX_DEPTH = 5;\n            if (!options || state.depth > MAX_DEPTH || !document.fonts) {\n                return;\n            }\n            Object.keys(options).forEach(function (key) {\n                var value = options[key];\n                if (key === 'dataSource' || key[0] === '$' || !value) {\n                    return;\n                }\n                if (key === 'font') {\n                    fonts.push(value);\n                } else if (typeof value === 'object') {\n                    state.depth++;\n                    FontLoader.fetchFonts(value, fonts, state);\n                    state.depth--;\n                }\n            });\n        };\n        FontLoader.loadFonts = function (fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        };\n        FontLoader.preloadFonts = function (options, callback) {\n            var fonts = [];\n            FontLoader.fetchFonts(options, fonts);\n            FontLoader.loadFonts(fonts, callback);\n        };\n        function setDefaultOptions(type, options) {\n            var proto = type.prototype;\n            if (proto.options) {\n                proto.options = deepExtend({}, proto.options, options);\n            } else {\n                proto.options = options;\n            }\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_VALUE;\n            var max = MIN_VALUE;\n            for (var idx = 0, length = arr.length; idx < length; idx++) {\n                var value = arr[idx];\n                if (value !== null && isFinite(value)) {\n                    min = Math.min(min, value);\n                    max = Math.max(max, value);\n                }\n            }\n            return {\n                min: min === MAX_VALUE ? undefined : min,\n                max: max === MIN_VALUE ? undefined : max\n            };\n        }\n        var Point = Class.extend({\n            init: function (x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n            },\n            clone: function () {\n                return new Point(this.x, this.y);\n            },\n            equals: function (point) {\n                return point && this.x === point.x && this.y === point.y;\n            },\n            rotate: function (center, degrees) {\n                var theta = rad(degrees);\n                var cosT = Math.cos(theta);\n                var sinT = Math.sin(theta);\n                var cx = center.x;\n                var cy = center.y;\n                var ref = this;\n                var x = ref.x;\n                var y = ref.y;\n                this.x = round(cx + (x - cx) * cosT + (y - cy) * sinT, COORD_PRECISION);\n                this.y = round(cy + (y - cy) * cosT - (x - cx) * sinT, COORD_PRECISION);\n                return this;\n            },\n            multiply: function (a) {\n                this.x *= a;\n                this.y *= a;\n                return this;\n            },\n            distanceTo: function (point) {\n                var dx = this.x - point.x;\n                var dy = this.y - point.y;\n                return Math.sqrt(dx * dx + dy * dy);\n            }\n        });\n        Point.onCircle = function (center, angle, radius) {\n            var radians = rad(angle);\n            return new Point(center.x - radius * Math.cos(radians), center.y - radius * Math.sin(radians));\n        };\n        var Box = Class.extend({\n            init: function (x1, y1, x2, y2) {\n                this.x1 = x1 || 0;\n                this.y1 = y1 || 0;\n                this.x2 = x2 || 0;\n                this.y2 = y2 || 0;\n            },\n            width: function () {\n                return this.x2 - this.x1;\n            },\n            height: function () {\n                return this.y2 - this.y1;\n            },\n            translate: function (dx, dy) {\n                this.x1 += dx;\n                this.x2 += dx;\n                this.y1 += dy;\n                this.y2 += dy;\n                return this;\n            },\n            move: function (x, y) {\n                var height = this.height();\n                var width = this.width();\n                if (defined(x)) {\n                    this.x1 = x;\n                    this.x2 = this.x1 + width;\n                }\n                if (defined(y)) {\n                    this.y1 = y;\n                    this.y2 = this.y1 + height;\n                }\n                return this;\n            },\n            wrap: function (targetBox) {\n                this.x1 = Math.min(this.x1, targetBox.x1);\n                this.y1 = Math.min(this.y1, targetBox.y1);\n                this.x2 = Math.max(this.x2, targetBox.x2);\n                this.y2 = Math.max(this.y2, targetBox.y2);\n                return this;\n            },\n            wrapPoint: function (point) {\n                var arrayPoint = isArray(point);\n                var x = arrayPoint ? point[0] : point.x;\n                var y = arrayPoint ? point[1] : point.y;\n                this.wrap(new Box(x, y, x, y));\n                return this;\n            },\n            snapTo: function (targetBox, axis) {\n                if (axis === X || !axis) {\n                    this.x1 = targetBox.x1;\n                    this.x2 = targetBox.x2;\n                }\n                if (axis === Y || !axis) {\n                    this.y1 = targetBox.y1;\n                    this.y2 = targetBox.y2;\n                }\n                return this;\n            },\n            alignTo: function (targetBox, anchor) {\n                var height = this.height();\n                var width = this.width();\n                var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n                var offset = axis === Y ? height : width;\n                if (anchor === CENTER) {\n                    var targetCenter = targetBox.center();\n                    var center = this.center();\n                    this.x1 += targetCenter.x - center.x;\n                    this.y1 += targetCenter.y - center.y;\n                } else if (anchor === TOP || anchor === LEFT) {\n                    this[axis + 1] = targetBox[axis + 1] - offset;\n                } else {\n                    this[axis + 1] = targetBox[axis + 2];\n                }\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            shrink: function (dw, dh) {\n                this.x2 -= dw;\n                this.y2 -= dh;\n                return this;\n            },\n            expand: function (dw, dh) {\n                this.shrink(-dw, -dh);\n                return this;\n            },\n            pad: function (padding) {\n                var spacing = getSpacing(padding);\n                this.x1 -= spacing.left;\n                this.x2 += spacing.right;\n                this.y1 -= spacing.top;\n                this.y2 += spacing.bottom;\n                return this;\n            },\n            unpad: function (padding) {\n                var spacing = getSpacing(padding);\n                spacing.left = -spacing.left;\n                spacing.top = -spacing.top;\n                spacing.right = -spacing.right;\n                spacing.bottom = -spacing.bottom;\n                return this.pad(spacing);\n            },\n            clone: function () {\n                return new Box(this.x1, this.y1, this.x2, this.y2);\n            },\n            center: function () {\n                return new Point(this.x1 + this.width() / 2, this.y1 + this.height() / 2);\n            },\n            containsPoint: function (point) {\n                return point.x >= this.x1 && point.x <= this.x2 && point.y >= this.y1 && point.y <= this.y2;\n            },\n            points: function () {\n                return [\n                    new Point(this.x1, this.y1),\n                    new Point(this.x2, this.y1),\n                    new Point(this.x2, this.y2),\n                    new Point(this.x1, this.y2)\n                ];\n            },\n            getHash: function () {\n                return [\n                    this.x1,\n                    this.y1,\n                    this.x2,\n                    this.y2\n                ].join(',');\n            },\n            overlaps: function (box) {\n                return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n            },\n            rotate: function (rotation) {\n                var width = this.width();\n                var height = this.height();\n                var ref = this.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var r1 = rotatePoint(0, 0, cx, cy, rotation);\n                var r2 = rotatePoint(width, 0, cx, cy, rotation);\n                var r3 = rotatePoint(width, height, cx, cy, rotation);\n                var r4 = rotatePoint(0, height, cx, cy, rotation);\n                width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n                height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n                this.x2 = this.x1 + width;\n                this.y2 = this.y1 + height;\n                return this;\n            },\n            toRect: function () {\n                return new Rect([\n                    this.x1,\n                    this.y1\n                ], [\n                    this.width(),\n                    this.height()\n                ]);\n            },\n            hasSize: function () {\n                return this.width() !== 0 && this.height() !== 0;\n            },\n            align: function (targetBox, axis, alignment) {\n                var c1 = axis + 1;\n                var c2 = axis + 2;\n                var sizeFunc = axis === X ? WIDTH : HEIGHT;\n                var size = this[sizeFunc]();\n                if (inArray(alignment, [\n                        LEFT,\n                        TOP\n                    ])) {\n                    this[c1] = targetBox[c1];\n                    this[c2] = this[c1] + size;\n                } else if (inArray(alignment, [\n                        RIGHT,\n                        BOTTOM\n                    ])) {\n                    this[c2] = targetBox[c2];\n                    this[c1] = this[c2] - size;\n                } else if (alignment === CENTER) {\n                    this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n                    this[c2] = this[c1] + size;\n                }\n            }\n        });\n        function rotatePoint(x, y, cx, cy, angle) {\n            var theta = rad(angle);\n            return new Point(cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta), cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta));\n        }\n        var Ring = Class.extend({\n            init: function (center, innerRadius, radius, startAngle, angle) {\n                this.center = center;\n                this.innerRadius = innerRadius;\n                this.radius = radius;\n                this.startAngle = startAngle;\n                this.angle = angle;\n            },\n            clone: function () {\n                return new Ring(this.center, this.innerRadius, this.radius, this.startAngle, this.angle);\n            },\n            middle: function () {\n                return this.startAngle + this.angle / 2;\n            },\n            setRadius: function (newRadius, innerRadius) {\n                if (innerRadius) {\n                    this.innerRadius = newRadius;\n                } else {\n                    this.radius = newRadius;\n                }\n                return this;\n            },\n            point: function (angle, innerRadius) {\n                var radianAngle = rad(angle);\n                var ax = Math.cos(radianAngle);\n                var ay = Math.sin(radianAngle);\n                var radius = innerRadius ? this.innerRadius : this.radius;\n                var x = round(this.center.x - ax * radius, COORD_PRECISION);\n                var y = round(this.center.y - ay * radius, COORD_PRECISION);\n                return new Point(x, y);\n            },\n            adjacentBox: function (distance, width, height) {\n                var sector = this.clone().expand(distance);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                var hw = width / 2;\n                var hh = height / 2;\n                var sa = Math.sin(rad(midAndle));\n                var ca = Math.cos(rad(midAndle));\n                var x = midPoint.x - hw;\n                var y = midPoint.y - hh;\n                if (Math.abs(sa) < 0.9) {\n                    x += hw * -ca / Math.abs(ca);\n                }\n                if (Math.abs(ca) < 0.9) {\n                    y += hh * -sa / Math.abs(sa);\n                }\n                return new Box(x, y, x + width, y + height);\n            },\n            containsPoint: function (p) {\n                var center = this.center;\n                var innerRadius = this.innerRadius;\n                var radius = this.radius;\n                var startAngle = this.startAngle;\n                var endAngle = this.startAngle + this.angle;\n                var dx = p.x - center.x;\n                var dy = p.y - center.y;\n                var vector = new Point(dx, dy);\n                var startPoint = this.point(startAngle);\n                var startVector = new Point(startPoint.x - center.x, startPoint.y - center.y);\n                var endPoint = this.point(endAngle);\n                var endVector = new Point(endPoint.x - center.x, endPoint.y - center.y);\n                var dist = round(dx * dx + dy * dy, COORD_PRECISION);\n                return (startVector.equals(vector) || clockwise(startVector, vector)) && !clockwise(endVector, vector) && dist >= innerRadius * innerRadius && dist <= radius * radius;\n            },\n            getBBox: function () {\n                var this$1 = this;\n                var box = new Box(MAX_VALUE, MAX_VALUE, MIN_VALUE, MIN_VALUE);\n                var startAngle = round(this.startAngle % 360);\n                var endAngle = round((startAngle + this.angle) % 360);\n                var innerRadius = this.innerRadius;\n                var allAngles = [\n                    0,\n                    90,\n                    180,\n                    270,\n                    startAngle,\n                    endAngle\n                ].sort(numericComparer);\n                var startAngleIndex = allAngles.indexOf(startAngle);\n                var endAngleIndex = allAngles.indexOf(endAngle);\n                var angles;\n                if (startAngle === endAngle) {\n                    angles = allAngles;\n                } else {\n                    if (startAngleIndex < endAngleIndex) {\n                        angles = allAngles.slice(startAngleIndex, endAngleIndex + 1);\n                    } else {\n                        angles = [].concat(allAngles.slice(0, endAngleIndex + 1), allAngles.slice(startAngleIndex, allAngles.length));\n                    }\n                }\n                for (var i = 0; i < angles.length; i++) {\n                    var point = this$1.point(angles[i]);\n                    box.wrapPoint(point);\n                    box.wrapPoint(point, innerRadius);\n                }\n                if (!innerRadius) {\n                    box.wrapPoint(this.center);\n                }\n                return box;\n            },\n            expand: function (value) {\n                this.radius += value;\n                return this;\n            }\n        });\n        function numericComparer(a, b) {\n            return a - b;\n        }\n        var Sector = Ring.extend({\n            init: function (center, radius, startAngle, angle) {\n                Ring.fn.init.call(this, center, 0, radius, startAngle, angle);\n            },\n            expand: function (value) {\n                return Ring.fn.expand.call(this, value);\n            },\n            clone: function () {\n                return new Sector(this.center, this.radius, this.startAngle, this.angle);\n            },\n            setRadius: function (newRadius) {\n                this.radius = newRadius;\n                return this;\n            }\n        });\n        var ShapeBuilder = Class.extend({\n            createRing: function (sector, options) {\n                var startAngle = sector.startAngle + 180;\n                var endAngle = sector.angle + startAngle;\n                var center = new geometry.Point(sector.center.x, sector.center.y);\n                var radius = Math.max(sector.radius, 0);\n                var innerRadius = Math.max(sector.innerRadius, 0);\n                var arc = new geometry.Arc(center, {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: radius,\n                    radiusY: radius\n                });\n                var path = Path.fromArc(arc, options).close();\n                if (innerRadius) {\n                    arc.radiusX = arc.radiusY = innerRadius;\n                    var innerEnd = arc.pointAt(endAngle);\n                    path.lineTo(innerEnd.x, innerEnd.y);\n                    path.arc(endAngle, startAngle, innerRadius, innerRadius, true);\n                } else {\n                    path.lineTo(center.x, center.y);\n                }\n                return path;\n            }\n        });\n        ShapeBuilder.current = new ShapeBuilder();\n        var ChartElement = Class.extend({\n            init: function (options) {\n                this.children = [];\n                this.options = deepExtend({}, this.options, options);\n            },\n            reflow: function (targetBox) {\n                var children = this.children;\n                var box;\n                for (var i = 0; i < children.length; i++) {\n                    var currentChild = children[i];\n                    currentChild.reflow(targetBox);\n                    box = box ? box.wrap(currentChild.box) : currentChild.box.clone();\n                }\n                this.box = box || targetBox;\n            },\n            destroy: function () {\n                var children = this.children;\n                if (this.animation) {\n                    this.animation.destroy();\n                }\n                for (var i = 0; i < children.length; i++) {\n                    children[i].destroy();\n                }\n            },\n            getRoot: function () {\n                var parent = this.parent;\n                return parent ? parent.getRoot() : null;\n            },\n            getSender: function () {\n                var service = this.getService();\n                if (service) {\n                    return service.sender;\n                }\n            },\n            getService: function () {\n                var element = this;\n                while (element) {\n                    if (element.chartService) {\n                        return element.chartService;\n                    }\n                    element = element.parent;\n                }\n            },\n            translateChildren: function (dx, dy) {\n                var children = this.children;\n                var childrenCount = children.length;\n                for (var i = 0; i < childrenCount; i++) {\n                    children[i].box.translate(dx, dy);\n                }\n            },\n            append: function () {\n                var arguments$1 = arguments;\n                var this$1 = this;\n                for (var i = 0; i < arguments.length; i++) {\n                    var item = arguments$1[i];\n                    this$1.children.push(item);\n                    item.parent = this$1;\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visible === false) {\n                    return;\n                }\n                this.createVisual();\n                this.addVisual();\n                this.renderChildren();\n                this.createAnimation();\n                this.renderComplete();\n            },\n            addVisual: function () {\n                if (this.visual) {\n                    this.visual.chartElement = this;\n                    if (this.parent) {\n                        this.parent.appendVisual(this.visual);\n                    }\n                }\n            },\n            renderChildren: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    children[i].renderVisual();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group({\n                    zIndex: this.options.zIndex,\n                    visible: valueOrDefault(this.options.visible, true)\n                });\n            },\n            createAnimation: function () {\n                if (this.visual) {\n                    this.animation = drawing.Animation.create(this.visual, this.options.animation);\n                }\n            },\n            appendVisual: function (childVisual) {\n                if (!childVisual.chartElement) {\n                    childVisual.chartElement = this;\n                }\n                if (childVisual.options.noclip) {\n                    this.clipRoot().visual.append(childVisual);\n                } else if (defined(childVisual.options.zIndex)) {\n                    this.stackRoot().stackVisual(childVisual);\n                } else if (this.isStackRoot) {\n                    this.stackVisual(childVisual);\n                } else if (this.visual) {\n                    this.visual.append(childVisual);\n                } else {\n                    this.parent.appendVisual(childVisual);\n                }\n            },\n            clipRoot: function () {\n                if (this.parent) {\n                    return this.parent.clipRoot();\n                }\n                return this;\n            },\n            stackRoot: function () {\n                if (this.parent) {\n                    return this.parent.stackRoot();\n                }\n                return this;\n            },\n            stackVisual: function (childVisual) {\n                var zIndex = childVisual.options.zIndex || 0;\n                var visuals = this.visual.children;\n                var length = visuals.length;\n                var pos;\n                for (pos = 0; pos < length; pos++) {\n                    var sibling = visuals[pos];\n                    var here = valueOrDefault(sibling.options.zIndex, 0);\n                    if (here > zIndex) {\n                        break;\n                    }\n                }\n                this.visual.insert(pos, childVisual);\n            },\n            traverse: function (callback) {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    var child = children[i];\n                    callback(child);\n                    if (child.traverse) {\n                        child.traverse(callback);\n                    }\n                }\n            },\n            closest: function (match) {\n                var element = this;\n                var matched = false;\n                while (element && !matched) {\n                    matched = match(element);\n                    if (!matched) {\n                        element = element.parent;\n                    }\n                }\n                if (matched) {\n                    return element;\n                }\n            },\n            renderComplete: function () {\n            },\n            hasHighlight: function () {\n                var options = (this.options || {}).highlight;\n                return !(!this.createHighlight || options && options.visible === false);\n            },\n            toggleHighlight: function (show) {\n                var this$1 = this;\n                var options = (this.options || {}).highlight;\n                var customVisual = (options || {}).visual;\n                var highlight = this._highlight;\n                if (!highlight) {\n                    var highlightOptions = {\n                        fill: {\n                            color: WHITE,\n                            opacity: 0.2\n                        },\n                        stroke: {\n                            color: WHITE,\n                            width: 1,\n                            opacity: 0.2\n                        }\n                    };\n                    if (customVisual) {\n                        highlight = this._highlight = customVisual($.extend(this.highlightVisualArgs(), {\n                            createVisual: function () {\n                                return this$1.createHighlight(highlightOptions);\n                            },\n                            sender: this.getSender(),\n                            series: this.series,\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            runningTotal: this.runningTotal,\n                            total: this.total\n                        }));\n                        if (!highlight) {\n                            return;\n                        }\n                    } else {\n                        highlight = this._highlight = this.createHighlight(highlightOptions);\n                    }\n                    highlight.options.zIndex = this.options.zIndex;\n                    this.appendVisual(highlight);\n                }\n                highlight.visible(show);\n            },\n            createGradientOverlay: function (element, options, gradientOptions) {\n                var overlay = new Path($.extend({\n                    stroke: { color: 'none' },\n                    fill: this.createGradient(gradientOptions),\n                    closed: element.options.closed\n                }, options));\n                overlay.segments.elements(element.segments.elements());\n                return overlay;\n            },\n            createGradient: function (options) {\n                if (this.parent) {\n                    return this.parent.createGradient(options);\n                }\n            }\n        });\n        ChartElement.prototype.options = {};\n        var BoxElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.options.margin = getSpacing(this.options.margin);\n                this.options.padding = getSpacing(this.options.padding);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var shrinkToFit = options.shrinkToFit;\n                var hasSetSize = width && height;\n                var margin = options.margin;\n                var padding = options.padding;\n                var borderWidth = options.border.width;\n                var box;\n                var reflowPaddingBox = function () {\n                    this$1.align(targetBox, X, options.align);\n                    this$1.align(targetBox, Y, options.vAlign);\n                    this$1.paddingBox = box.clone().unpad(margin).unpad(borderWidth);\n                };\n                var contentBox = targetBox.clone();\n                if (hasSetSize) {\n                    contentBox.x2 = contentBox.x1 + width;\n                    contentBox.y2 = contentBox.y1 + height;\n                }\n                if (shrinkToFit) {\n                    contentBox.unpad(margin).unpad(borderWidth).unpad(padding);\n                }\n                ChartElement.fn.reflow.call(this, contentBox);\n                if (hasSetSize) {\n                    box = this.box = new Box(0, 0, width, height);\n                } else {\n                    box = this.box;\n                }\n                if (shrinkToFit && hasSetSize) {\n                    reflowPaddingBox();\n                    contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);\n                } else {\n                    contentBox = this.contentBox = box.clone();\n                    box.pad(padding).pad(borderWidth).pad(margin);\n                    reflowPaddingBox();\n                }\n                this.translateChildren(box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left, box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top);\n                var children = this.children;\n                for (var i = 0; i < children.length; i++) {\n                    var item = children[i];\n                    item.reflow(item.box);\n                }\n            },\n            align: function (targetBox, axis, alignment) {\n                this.box.align(targetBox, axis, alignment);\n            },\n            hasBox: function () {\n                var options = this.options;\n                return options.border.width || options.background;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                if (options.visible && this.hasBox()) {\n                    this.visual.append(Path.fromRect(this.paddingBox.toRect(), this.visualStyle()));\n                }\n            },\n            visualStyle: function () {\n                var options = this.options;\n                var border = options.border || {};\n                return {\n                    stroke: {\n                        width: border.width,\n                        color: border.color,\n                        opacity: valueOrDefault(border.opacity, options.opacity),\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    cursor: options.cursor\n                };\n            }\n        });\n        setDefaultOptions(BoxElement, {\n            align: LEFT,\n            vAlign: TOP,\n            margin: {},\n            padding: {},\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            background: '',\n            shrinkToFit: false,\n            width: 0,\n            height: 0,\n            visible: true\n        });\n        var ShapeElement = BoxElement.extend({\n            init: function (options, pointData) {\n                BoxElement.fn.init.call(this, options);\n                this.pointData = pointData;\n            },\n            getElement: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.paddingBox;\n                var type = options.type;\n                var rotation = options.rotation;\n                var center = box.center();\n                var halfWidth = box.width() / 2;\n                if (!options.visible || !this.hasBox()) {\n                    return null;\n                }\n                var style = this.visualStyle();\n                var element;\n                if (type === CIRCLE) {\n                    element = new drawing.Circle(new Circle([\n                        round(box.x1 + halfWidth, COORD_PRECISION),\n                        round(box.y1 + box.height() / 2, COORD_PRECISION)\n                    ], halfWidth), style);\n                } else if (type === TRIANGLE) {\n                    element = Path.fromPoints([\n                        [\n                            box.x1 + halfWidth,\n                            box.y1\n                        ],\n                        [\n                            box.x1,\n                            box.y2\n                        ],\n                        [\n                            box.x2,\n                            box.y2\n                        ]\n                    ], style).close();\n                } else if (type === CROSS) {\n                    element = new drawing.MultiPath(style);\n                    element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n                    element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n                } else {\n                    element = Path.fromRect(box.toRect(), style);\n                }\n                if (rotation) {\n                    element.transform(geometryTransform().rotate(-rotation, [\n                        center.x,\n                        center.y\n                    ]));\n                }\n                element.options.zIndex = options.zIndex;\n                return element;\n            },\n            createElement: function () {\n                var this$1 = this;\n                var customVisual = this.options.visual;\n                var pointData = this.pointData || {};\n                var visual;\n                if (customVisual) {\n                    visual = customVisual({\n                        value: pointData.value,\n                        dataItem: pointData.dataItem,\n                        sender: this.getSender(),\n                        series: pointData.series,\n                        category: pointData.category,\n                        rect: this.paddingBox.toRect(),\n                        options: this.visualOptions(),\n                        createVisual: function () {\n                            return this$1.getElement();\n                        }\n                    });\n                } else {\n                    visual = this.getElement();\n                }\n                return visual;\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    margin: options.margin,\n                    padding: options.padding,\n                    type: options.type,\n                    size: options.width,\n                    visible: options.visible\n                };\n            },\n            createVisual: function () {\n                this.visual = this.createElement();\n            }\n        });\n        setDefaultOptions(ShapeElement, {\n            type: CIRCLE,\n            align: CENTER,\n            vAlign: CENTER\n        });\n        var LINEAR = 'linear';\n        var RADIAL = 'radial';\n        var GRADIENTS = {\n            glass: {\n                type: LINEAR,\n                rotation: 0,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.25,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 1,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.55\n                    },\n                    {\n                        offset: 0.65,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0.25\n                    }\n                ]\n            },\n            roundedBevel: {\n                type: RADIAL,\n                stops: [\n                    {\n                        offset: 0.33,\n                        color: WHITE,\n                        opacity: 0.06\n                    },\n                    {\n                        offset: 0.83,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.95,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            roundedGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    {\n                        offset: 0.5,\n                        color: WHITE,\n                        opacity: 0.3\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            sharpGlass: {\n                type: RADIAL,\n                supportVML: false,\n                stops: [\n                    {\n                        offset: 0,\n                        color: WHITE,\n                        opacity: 0.2\n                    },\n                    {\n                        offset: 0.15,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.17,\n                        color: WHITE,\n                        opacity: 0.35\n                    },\n                    {\n                        offset: 0.85,\n                        color: WHITE,\n                        opacity: 0.05\n                    },\n                    {\n                        offset: 0.87,\n                        color: WHITE,\n                        opacity: 0.15\n                    },\n                    {\n                        offset: 0.99,\n                        color: WHITE,\n                        opacity: 0\n                    }\n                ]\n            },\n            bubbleShadow: {\n                type: RADIAL,\n                center: [\n                    0.5,\n                    0.5\n                ],\n                radius: 0.5\n            }\n        };\n        function boxDiff(r, s) {\n            if (r.x1 === s.x1 && r.y1 === s.y1 && r.x2 === s.x2 && r.y2 === s.y2) {\n                return s;\n            }\n            var a = Math.min(r.x1, s.x1);\n            var b = Math.max(r.x1, s.x1);\n            var c = Math.min(r.x2, s.x2);\n            var d = Math.max(r.x2, s.x2);\n            var e = Math.min(r.y1, s.y1);\n            var f = Math.max(r.y1, s.y1);\n            var g = Math.min(r.y2, s.y2);\n            var h = Math.max(r.y2, s.y2);\n            var boxes = [];\n            boxes[0] = new Box(b, e, c, f);\n            boxes[1] = new Box(a, f, b, g);\n            boxes[2] = new Box(c, f, d, g);\n            boxes[3] = new Box(b, g, c, h);\n            if (r.x1 === a && r.y1 === e || s.x1 === a && s.y1 === e) {\n                boxes[4] = new Box(a, e, b, f);\n                boxes[5] = new Box(c, g, d, h);\n            } else {\n                boxes[4] = new Box(c, e, d, f);\n                boxes[5] = new Box(a, g, b, h);\n            }\n            return grep(boxes, function (box) {\n                return box.height() > 0 && box.width() > 0;\n            })[0];\n        }\n        var RootElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                var rootOptions = this.options;\n                rootOptions.width = parseInt(rootOptions.width, 10);\n                rootOptions.height = parseInt(rootOptions.height, 10);\n                this.gradients = {};\n            },\n            reflow: function () {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var currentBox = new Box(0, 0, options.width, options.height);\n                this.box = currentBox.unpad(options.margin);\n                for (var i = 0; i < children.length; i++) {\n                    children[i].reflow(currentBox);\n                    currentBox = boxDiff(currentBox, children[i].box) || new Box();\n                }\n            },\n            createVisual: function () {\n                this.visual = new Group();\n                this.createBackground();\n            },\n            createBackground: function () {\n                var options = this.options;\n                var border = options.border || {};\n                var box = this.box.clone().pad(options.margin).unpad(border.width);\n                var background = Path.fromRect(box.toRect(), {\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    fill: {\n                        color: options.background,\n                        opacity: options.opacity\n                    },\n                    zIndex: -10\n                });\n                this.visual.append(background);\n            },\n            getRoot: function () {\n                return this;\n            },\n            createGradient: function (options) {\n                var gradients = this.gradients;\n                var hashCode = objectKey(options);\n                var gradient = GRADIENTS[options.gradient];\n                var drawingGradient;\n                if (gradients[hashCode]) {\n                    drawingGradient = gradients[hashCode];\n                } else {\n                    var gradientOptions = $.extend({}, gradient, options);\n                    if (gradient.type === 'linear') {\n                        drawingGradient = new drawing.LinearGradient(gradientOptions);\n                    } else {\n                        if (options.innerRadius) {\n                            gradientOptions.stops = innerRadialStops(gradientOptions);\n                        }\n                        drawingGradient = new drawing.RadialGradient(gradientOptions);\n                        drawingGradient.supportVML = gradient.supportVML !== false;\n                    }\n                    gradients[hashCode] = drawingGradient;\n                }\n                return drawingGradient;\n            }\n        });\n        setDefaultOptions(RootElement, {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT,\n            background: WHITE,\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            margin: getSpacing(5),\n            zIndex: -2\n        });\n        function innerRadialStops(options) {\n            var stops = options.stops;\n            var usedSpace = options.innerRadius / options.radius * 100;\n            var length = stops.length;\n            var currentStops = [];\n            for (var i = 0; i < length; i++) {\n                var currentStop = $.extend({}, stops[i]);\n                currentStop.offset = (currentStop.offset * (100 - usedSpace) + usedSpace) / 100;\n                currentStops.push(currentStop);\n            }\n            return currentStops;\n        }\n        var FloatElement = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this._initDirection();\n            },\n            _initDirection: function () {\n                var options = this.options;\n                if (options.vertical) {\n                    this.groupAxis = X;\n                    this.elementAxis = Y;\n                    this.groupSizeField = WIDTH;\n                    this.elementSizeField = HEIGHT;\n                    this.groupSpacing = options.spacing;\n                    this.elementSpacing = options.vSpacing;\n                } else {\n                    this.groupAxis = Y;\n                    this.elementAxis = X;\n                    this.groupSizeField = HEIGHT;\n                    this.elementSizeField = WIDTH;\n                    this.groupSpacing = options.vSpacing;\n                    this.elementSpacing = options.spacing;\n                }\n            },\n            reflow: function (targetBox) {\n                this.box = targetBox.clone();\n                this.reflowChildren();\n            },\n            reflowChildren: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var elementAxis = ref.elementAxis;\n                var groupAxis = ref.groupAxis;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var ref$1 = this.groupOptions();\n                var groups = ref$1.groups;\n                var groupsSize = ref$1.groupsSize;\n                var maxGroupElementsSize = ref$1.maxGroupElementsSize;\n                var groupsCount = groups.length;\n                var groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n                if (groupsCount) {\n                    var groupStart = groupsStart;\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        var group = groups[groupIdx];\n                        var groupElements = group.groupElements;\n                        var elementStart = box[elementAxis + 1];\n                        var groupElementsCount = groupElements.length;\n                        for (var idx = 0; idx < groupElementsCount; idx++) {\n                            var element = groupElements[idx];\n                            var elementSize$$1 = this$1.elementSize(element);\n                            var groupElementStart = groupStart + this$1.alignStart(elementSize$$1[groupSizeField], group.groupSize);\n                            var elementBox = new Box();\n                            elementBox[groupAxis + 1] = groupElementStart;\n                            elementBox[groupAxis + 2] = groupElementStart + elementSize$$1[groupSizeField];\n                            elementBox[elementAxis + 1] = elementStart;\n                            elementBox[elementAxis + 2] = elementStart + elementSize$$1[elementSizeField];\n                            element.reflow(elementBox);\n                            elementStart += elementSize$$1[elementSizeField] + this$1.elementSpacing;\n                        }\n                        groupStart += group.groupSize + this$1.groupSpacing;\n                    }\n                    box[groupAxis + 1] = groupsStart;\n                    box[groupAxis + 2] = groupsStart + groupsSize;\n                    box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n                }\n            },\n            alignStart: function (size, maxSize) {\n                var start = 0;\n                var align = this.options.align;\n                if (align === RIGHT || align === BOTTOM) {\n                    start = maxSize - size;\n                } else if (align === CENTER) {\n                    start = (maxSize - size) / 2;\n                }\n                return start;\n            },\n            groupOptions: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var children = ref.children;\n                var elementSizeField = ref.elementSizeField;\n                var groupSizeField = ref.groupSizeField;\n                var elementSpacing = ref.elementSpacing;\n                var groupSpacing = ref.groupSpacing;\n                var maxSize = round(box[elementSizeField]());\n                var childrenCount = children.length;\n                var groups = [];\n                var groupSize = 0;\n                var groupElementsSize = 0;\n                var groupsSize = 0;\n                var maxGroupElementsSize = 0;\n                var groupElements = [];\n                for (var idx = 0; idx < childrenCount; idx++) {\n                    var element = children[idx];\n                    if (!element.box) {\n                        element.reflow(box);\n                    }\n                    var elementSize$$1 = this$1.elementSize(element);\n                    if (this$1.options.wrap && round(groupElementsSize + elementSpacing + elementSize$$1[elementSizeField]) > maxSize) {\n                        groups.push({\n                            groupElements: groupElements,\n                            groupSize: groupSize,\n                            groupElementsSize: groupElementsSize\n                        });\n                        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                        groupsSize += groupSpacing + groupSize;\n                        groupSize = 0;\n                        groupElementsSize = 0;\n                        groupElements = [];\n                    }\n                    groupSize = Math.max(groupSize, elementSize$$1[groupSizeField]);\n                    if (groupElementsSize > 0) {\n                        groupElementsSize += elementSpacing;\n                    }\n                    groupElementsSize += elementSize$$1[elementSizeField];\n                    groupElements.push(element);\n                }\n                groups.push({\n                    groupElements: groupElements,\n                    groupSize: groupSize,\n                    groupElementsSize: groupElementsSize\n                });\n                maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                groupsSize += groupSize;\n                return {\n                    groups: groups,\n                    groupsSize: groupsSize,\n                    maxGroupElementsSize: maxGroupElementsSize\n                };\n            },\n            elementSize: function (element) {\n                return {\n                    width: element.box.width(),\n                    height: element.box.height()\n                };\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(FloatElement, {\n            vertical: true,\n            wrap: true,\n            vSpacing: 0,\n            spacing: 0\n        });\n        var DrawingText = drawing.Text;\n        var Text = ChartElement.extend({\n            init: function (content, options) {\n                ChartElement.fn.init.call(this, options);\n                this.content = content;\n                this.reflow(new Box());\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var size = options.size = util.measureText(this.content, { font: options.font });\n                this.baseline = size.baseline;\n                this.box = new Box(targetBox.x1, targetBox.y1, targetBox.x1 + size.width, targetBox.y1 + size.height);\n            },\n            createVisual: function () {\n                var ref = this.options;\n                var font = ref.font;\n                var color = ref.color;\n                var opacity = ref.opacity;\n                var cursor = ref.cursor;\n                this.visual = new DrawingText(this.content, this.box.toRect().topLeft(), {\n                    font: font,\n                    fill: {\n                        color: color,\n                        opacity: opacity\n                    },\n                    cursor: cursor\n                });\n            }\n        });\n        setDefaultOptions(Text, {\n            font: DEFAULT_FONT,\n            color: BLACK\n        });\n        function rectToBox(rect) {\n            var origin = rect.origin;\n            var bottomRight = rect.bottomRight();\n            return new Box(origin.x, origin.y, bottomRight.x, bottomRight.y);\n        }\n        var ROWS_SPLIT_REGEX = /\\n|\\\\n/m;\n        var TextBox = BoxElement.extend({\n            init: function (content, options) {\n                BoxElement.fn.init.call(this, options);\n                this.content = content;\n                this._initContainer();\n                if (this.options._autoReflow !== false) {\n                    this.reflow(new Box());\n                }\n            },\n            _initContainer: function () {\n                var options = this.options;\n                var rows = String(this.content).split(ROWS_SPLIT_REGEX);\n                var floatElement = new FloatElement({\n                    vertical: true,\n                    align: options.align,\n                    wrap: false\n                });\n                var textOptions = deepExtend({}, options, {\n                    opacity: 1,\n                    animation: null\n                });\n                this.container = floatElement;\n                this.append(floatElement);\n                for (var rowIdx = 0; rowIdx < rows.length; rowIdx++) {\n                    var text = new Text(rows[rowIdx].trim(), textOptions);\n                    floatElement.append(text);\n                }\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var visualFn = options.visual;\n                this.container.options.align = options.align;\n                if (visualFn && !this._boxReflow) {\n                    var visualBox = targetBox;\n                    if (!visualBox.hasSize()) {\n                        this._boxReflow = true;\n                        this.reflow(visualBox);\n                        this._boxReflow = false;\n                        visualBox = this.box;\n                    }\n                    var visual = this.visual = visualFn(this.visualContext(visualBox));\n                    if (visual) {\n                        visualBox = rectToBox(visual.clippedBBox() || new Rect());\n                        visual.options.zIndex = options.zIndex;\n                        visual.options.noclip = options.noclip;\n                    }\n                    this.box = this.contentBox = this.paddingBox = visualBox;\n                } else {\n                    BoxElement.fn.reflow.call(this, targetBox);\n                    if (options.rotation) {\n                        var margin = getSpacing(options.margin);\n                        var box = this.box.unpad(margin);\n                        this.targetBox = targetBox;\n                        this.normalBox = box.clone();\n                        box = this.rotate();\n                        box.translate(margin.left - margin.right, margin.top - margin.bottom);\n                        this.rotatedBox = box.clone();\n                        box.pad(margin);\n                    }\n                }\n            },\n            createVisual: function () {\n                var options = this.options;\n                if (!options.visible) {\n                    return;\n                }\n                this.visual = new Group({\n                    transform: this.rotationTransform(),\n                    zIndex: options.zIndex,\n                    noclip: options.noclip\n                });\n                if (this.hasBox()) {\n                    var box = Path.fromRect(this.paddingBox.toRect(), this.visualStyle());\n                    this.visual.append(box);\n                }\n            },\n            renderVisual: function () {\n                if (this.options.visual) {\n                    this.addVisual();\n                    this.createAnimation();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            visualOptions: function () {\n                var options = this.options;\n                return {\n                    background: options.background,\n                    border: options.border,\n                    color: options.color,\n                    font: options.font,\n                    margin: options.margin,\n                    padding: options.padding,\n                    visible: options.visible\n                };\n            },\n            visualContext: function (targetBox) {\n                var this$1 = this;\n                return {\n                    text: this.content,\n                    rect: targetBox.toRect(),\n                    sender: this.getSender(),\n                    options: this.visualOptions(),\n                    createVisual: function () {\n                        this$1._boxReflow = true;\n                        this$1.reflow(targetBox);\n                        this$1._boxReflow = false;\n                        return this$1.getDefaultVisual();\n                    }\n                };\n            },\n            getDefaultVisual: function () {\n                this.createVisual();\n                this.renderChildren();\n                var visual = this.visual;\n                delete this.visual;\n                return visual;\n            },\n            rotate: function () {\n                var options = this.options;\n                this.box.rotate(options.rotation);\n                this.align(this.targetBox, X, options.align);\n                this.align(this.targetBox, Y, options.vAlign);\n                return this.box;\n            },\n            rotationTransform: function () {\n                var rotation = this.options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                var ref = this.normalBox.center();\n                var cx = ref.x;\n                var cy = ref.y;\n                var boxCenter = this.rotatedBox.center();\n                return geometryTransform().translate(boxCenter.x - cx, boxCenter.y - cy).rotate(rotation, [\n                    cx,\n                    cy\n                ]);\n            }\n        });\n        var Title = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.append(new TextBox(this.options.text, $.extend({}, this.options, { vAlign: this.options.position })));\n            },\n            reflow: function (targetBox) {\n                ChartElement.fn.reflow.call(this, targetBox);\n                this.box.snapTo(targetBox, X);\n            }\n        });\n        Title.buildTitle = function (options, parent, defaultOptions) {\n            var titleOptions = options;\n            if (typeof options === 'string') {\n                titleOptions = { text: options };\n            }\n            titleOptions = $.extend({ visible: true }, defaultOptions, titleOptions);\n            var title;\n            if (titleOptions && titleOptions.visible && titleOptions.text) {\n                title = new Title(titleOptions);\n                parent.append(title);\n            }\n            return title;\n        };\n        setDefaultOptions(Title, {\n            color: BLACK,\n            position: TOP,\n            align: CENTER,\n            margin: getSpacing(5),\n            padding: getSpacing(5)\n        });\n        var AxisLabel = TextBox.extend({\n            init: function (value, text, index, dataItem, options) {\n                TextBox.fn.init.call(this, text, options);\n                this.text = text;\n                this.value = value;\n                this.index = index;\n                this.dataItem = dataItem;\n                this.reflow(new Box());\n            },\n            visualContext: function (targetBox) {\n                var context = TextBox.fn.visualContext.call(this, targetBox);\n                context.value = this.value;\n                context.dataItem = this.dataItem;\n                context.format = this.options.format;\n                context.culture = this.options.culture;\n                return context;\n            },\n            click: function (widget, e) {\n                widget.trigger(AXIS_LABEL_CLICK, {\n                    element: eventElement(e),\n                    value: this.value,\n                    text: this.text,\n                    index: this.index,\n                    dataItem: this.dataItem,\n                    axis: this.parent.options\n                });\n            },\n            rotate: function () {\n                if (this.options.alignRotation !== CENTER) {\n                    var box = this.normalBox.toRect();\n                    var transform = this.rotationTransform();\n                    this.box = rectToBox(box.bbox(transform.matrix()));\n                } else {\n                    TextBox.fn.rotate.call(this);\n                }\n                return this.box;\n            },\n            rotationTransform: function () {\n                var options = this.options;\n                var rotation = options.rotation;\n                if (!rotation) {\n                    return null;\n                }\n                if (options.alignRotation === CENTER) {\n                    return TextBox.fn.rotationTransform.call(this);\n                }\n                var rotationMatrix = geometryTransform().rotate(rotation).matrix();\n                var box = this.normalBox.toRect();\n                var rect = this.targetBox.toRect();\n                var rotationOrigin = options.rotationOrigin || TOP;\n                var alignAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? X : Y;\n                var distanceAxis = rotationOrigin === TOP || rotationOrigin === BOTTOM ? Y : X;\n                var axisAnchor = rotationOrigin === TOP || rotationOrigin === LEFT ? rect.origin : rect.bottomRight();\n                var topLeft = box.topLeft().transformCopy(rotationMatrix);\n                var topRight = box.topRight().transformCopy(rotationMatrix);\n                var bottomRight = box.bottomRight().transformCopy(rotationMatrix);\n                var bottomLeft = box.bottomLeft().transformCopy(rotationMatrix);\n                var rotatedBox = Rect.fromPoints(topLeft, topRight, bottomRight, bottomLeft);\n                var translate = {};\n                translate[distanceAxis] = rect.origin[distanceAxis] - rotatedBox.origin[distanceAxis];\n                var distanceLeft = Math.abs(topLeft[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var distanceRight = Math.abs(topRight[distanceAxis] + translate[distanceAxis] - axisAnchor[distanceAxis]);\n                var alignStart, alignEnd;\n                if (round(distanceLeft, DEFAULT_PRECISION) === round(distanceRight, DEFAULT_PRECISION)) {\n                    alignStart = topLeft;\n                    alignEnd = topRight;\n                } else if (distanceRight < distanceLeft) {\n                    alignStart = topRight;\n                    alignEnd = bottomRight;\n                } else {\n                    alignStart = topLeft;\n                    alignEnd = bottomLeft;\n                }\n                var alignCenter = alignStart[alignAxis] + (alignEnd[alignAxis] - alignStart[alignAxis]) / 2;\n                translate[alignAxis] = rect.center()[alignAxis] - alignCenter;\n                return geometryTransform().translate(translate.x, translate.y).rotate(rotation);\n            }\n        });\n        setDefaultOptions(AxisLabel, { _autoReflow: false });\n        var defaultImplementation = {\n            format: function (format, value) {\n                return value;\n            },\n            toString: function (value) {\n                return value;\n            },\n            parseDate: function (value) {\n                return new Date(value);\n            }\n        };\n        var current = defaultImplementation;\n        var IntlService = Class.extend({});\n        IntlService.register = function (userImplementation) {\n            current = userImplementation;\n        };\n        if (Object.defineProperties) {\n            Object.defineProperties(IntlService, {\n                implementation: {\n                    get: function () {\n                        return current;\n                    }\n                }\n            });\n        }\n        var FORMAT_REPLACE_REGEX = /\\{(\\d+)(:[^\\}]+)?\\}/g;\n        var FormatService = Class.extend({\n            init: function (intlService) {\n                this._intlService = intlService;\n            },\n            auto: function (formatString) {\n                var values = [], len = arguments.length - 1;\n                while (len-- > 0)\n                    values[len] = arguments[len + 1];\n                var intl = this.intlService;\n                if (formatString.match(FORMAT_REGEX)) {\n                    return intl.format.apply(intl, [formatString].concat(values));\n                }\n                return intl.toString(values[0], formatString);\n            },\n            localeAuto: function (formatString, values, locale) {\n                var intl = this.intlService;\n                var result;\n                if (formatString.match(FORMAT_REGEX)) {\n                    result = formatString.replace(FORMAT_REPLACE_REGEX, function (match, index, placeholderFormat) {\n                        var value = values[parseInt(index, 10)];\n                        return intl.toString(value, placeholderFormat ? placeholderFormat.substring(1) : '', locale);\n                    });\n                } else {\n                    result = intl.toString(values[0], formatString, locale);\n                }\n                return result;\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(FormatService.fn, {\n                intlService: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    }\n                }\n            });\n        }\n        var ChartService = Class.extend({\n            init: function (chart, context) {\n                if (context === void 0) {\n                    context = {};\n                }\n                this._intlService = context.intlService;\n                this.sender = context.sender || chart;\n                this.format = new FormatService(context.intlService);\n                this.chart = chart;\n            },\n            notify: function (name, args) {\n                this.chart.trigger(name, args);\n            }\n        });\n        if (Object.defineProperties) {\n            Object.defineProperties(ChartService.fn, {\n                intl: {\n                    get: function () {\n                        return this._intlService || IntlService.implementation;\n                    }\n                }\n            });\n        }\n        var current$1;\n        var DomEventsBuilder = Class.extend({});\n        DomEventsBuilder.register = function (userImplementation) {\n            current$1 = userImplementation;\n        };\n        DomEventsBuilder.create = function (element, events) {\n            if (current$1) {\n                return current$1.create(element, events);\n            }\n        };\n        var current$2 = {\n            compile: function (template) {\n                return template;\n            }\n        };\n        var TemplateService = Class.extend({});\n        TemplateService.register = function (userImplementation) {\n            current$2 = userImplementation;\n        };\n        TemplateService.compile = function (template) {\n            return current$2.compile(template);\n        };\n        var services = {\n            ChartService: ChartService,\n            DomEventsBuilder: DomEventsBuilder,\n            FormatService: FormatService,\n            IntlService: IntlService,\n            TemplateService: TemplateService\n        };\n        var DEFAULT_ICON_SIZE = 7;\n        var DEFAULT_LABEL_COLOR = '#fff';\n        var Note = BoxElement.extend({\n            init: function (fields, options, chartService) {\n                BoxElement.fn.init.call(this, options);\n                this.fields = fields;\n                this.chartService = chartService;\n                this.render();\n            },\n            hide: function () {\n                this.options.visible = false;\n            },\n            show: function () {\n                this.options.visible = true;\n            },\n            render: function () {\n                var options = this.options;\n                if (options.visible) {\n                    var label = options.label;\n                    var icon = options.icon;\n                    var box = new Box();\n                    var size = icon.size;\n                    var text = this.fields.text;\n                    var width, height;\n                    if (defined(label) && label.visible) {\n                        if (label.template) {\n                            var noteTemplate = TemplateService.compile(label.template);\n                            text = noteTemplate(this.fields);\n                        } else if (label.format) {\n                            text = this.chartService.format.auto(label.format, text);\n                        }\n                        if (!label.color) {\n                            label.color = label.position === INSIDE ? DEFAULT_LABEL_COLOR : icon.background;\n                        }\n                        this.label = new TextBox(text, deepExtend({}, label));\n                        if (label.position === INSIDE && !defined(size)) {\n                            if (icon.type === CIRCLE) {\n                                size = Math.max(this.label.box.width(), this.label.box.height());\n                            } else {\n                                width = this.label.box.width();\n                                height = this.label.box.height();\n                            }\n                            box.wrap(this.label.box);\n                        }\n                    }\n                    icon.width = width || size || DEFAULT_ICON_SIZE;\n                    icon.height = height || size || DEFAULT_ICON_SIZE;\n                    var marker = new ShapeElement(deepExtend({}, icon));\n                    this.marker = marker;\n                    this.append(marker);\n                    if (this.label) {\n                        this.append(this.label);\n                    }\n                    marker.reflow(new Box());\n                    this.wrapperBox = box.wrap(marker.box);\n                }\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var marker = ref.marker;\n                var wrapperBox = ref.wrapperBox;\n                var center = targetBox.center();\n                var length = options.line.length;\n                var position = options.position;\n                if (options.visible) {\n                    var lineStart, box, contentBox;\n                    if (inArray(position, [\n                            LEFT,\n                            RIGHT\n                        ])) {\n                        if (position === LEFT) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(-length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x1,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x2,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(length, targetBox.center().y - wrapperBox.center().y);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    targetBox.x2,\n                                    center.y\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        contentBox.x1,\n                                        center.y\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    } else {\n                        if (position === BOTTOM) {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y2\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y1\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        } else {\n                            contentBox = wrapperBox.alignTo(targetBox, position).translate(targetBox.center().x - wrapperBox.center().x, -length);\n                            if (options.line.visible) {\n                                lineStart = [\n                                    center.x,\n                                    targetBox.y1\n                                ];\n                                this.linePoints = [\n                                    lineStart,\n                                    [\n                                        center.x,\n                                        contentBox.y2\n                                    ]\n                                ];\n                                box = contentBox.clone().wrapPoint(lineStart);\n                            }\n                        }\n                    }\n                    if (marker) {\n                        marker.reflow(contentBox);\n                    }\n                    if (label) {\n                        label.reflow(contentBox);\n                        if (marker) {\n                            if (options.label.position === OUTSIDE) {\n                                label.box.alignTo(marker.box, position);\n                            }\n                            label.reflow(label.box);\n                        }\n                    }\n                    this.contentBox = contentBox;\n                    this.targetBox = targetBox;\n                    this.box = box || contentBox;\n                }\n            },\n            createVisual: function () {\n                BoxElement.fn.createVisual.call(this);\n                this.visual.options.noclip = this.options.noclip;\n                if (this.options.visible) {\n                    this.createLine();\n                }\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (options.visible && customVisual) {\n                    this.visual = customVisual($.extend(this.fields, {\n                        sender: this.getSender(),\n                        rect: this.targetBox.toRect(),\n                        options: {\n                            background: options.background,\n                            border: options.background,\n                            icon: options.icon,\n                            label: options.label,\n                            line: options.line,\n                            position: options.position,\n                            visible: options.visible\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    }));\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            },\n            createLine: function () {\n                var options = this.options.line;\n                if (this.linePoints) {\n                    var path = Path.fromPoints(this.linePoints, {\n                        stroke: {\n                            color: options.color,\n                            width: options.width,\n                            dashType: options.dashType\n                        }\n                    });\n                    alignPathToPixel(path);\n                    this.visual.append(path);\n                }\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_CLICK, args)) {\n                    e.preventDefault();\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(NOTE_HOVER, args)) {\n                    e.preventDefault();\n                }\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return $.extend(this.fields, {\n                    element: eventElement(e),\n                    text: defined(options.label) ? options.label.text : '',\n                    visual: this.visual\n                });\n            }\n        });\n        setDefaultOptions(Note, {\n            icon: {\n                visible: true,\n                type: CIRCLE\n            },\n            label: {\n                position: INSIDE,\n                visible: true,\n                align: CENTER,\n                vAlign: CENTER\n            },\n            line: { visible: true },\n            visible: true,\n            position: TOP,\n            zIndex: 2\n        });\n        function createAxisTick(options, tickOptions) {\n            var tickX = options.tickX;\n            var tickY = options.tickY;\n            var position = options.position;\n            var tick = new Path({\n                stroke: {\n                    width: tickOptions.width,\n                    color: tickOptions.color\n                }\n            });\n            if (options.vertical) {\n                tick.moveTo(tickX, position).lineTo(tickX + tickOptions.size, position);\n            } else {\n                tick.moveTo(position, tickY).lineTo(position, tickY + tickOptions.size);\n            }\n            alignPathToPixel(tick);\n            return tick;\n        }\n        function createAxisGridLine(options, gridLine) {\n            var lineStart = options.lineStart;\n            var lineEnd = options.lineEnd;\n            var position = options.position;\n            var line = new Path({\n                stroke: {\n                    width: gridLine.width,\n                    color: gridLine.color,\n                    dashType: gridLine.dashType\n                }\n            });\n            if (options.vertical) {\n                line.moveTo(lineStart, position).lineTo(lineEnd, position);\n            } else {\n                line.moveTo(position, lineStart).lineTo(position, lineEnd);\n            }\n            alignPathToPixel(line);\n            return line;\n        }\n        var Axis = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = new ChartService();\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!this.options.visible) {\n                    this.options = deepExtend({}, this.options, {\n                        labels: { visible: false },\n                        line: { visible: false },\n                        margin: 0,\n                        majorTickSize: 0,\n                        minorTickSize: 0\n                    });\n                }\n                this.options.minorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.minorTickType !== NONE\n                }, this.options.minorTicks, {\n                    size: this.options.minorTickSize,\n                    align: this.options.minorTickType\n                });\n                this.options.majorTicks = deepExtend({}, {\n                    color: this.options.line.color,\n                    width: this.options.line.width,\n                    visible: this.options.majorTickType !== NONE\n                }, this.options.majorTicks, {\n                    size: this.options.majorTickSize,\n                    align: this.options.majorTickType\n                });\n                if (!this.options._deferLabels) {\n                    this.createLabels();\n                }\n                this.createTitle();\n                this.createNotes();\n            },\n            labelsRange: function () {\n                return {\n                    min: this.options.labels.skip,\n                    max: this.labelsCount()\n                };\n            },\n            createLabels: function () {\n                var this$1 = this;\n                var options = this.options;\n                var align = options.vertical ? RIGHT : CENTER;\n                var labelOptions = deepExtend({}, options.labels, {\n                    align: align,\n                    zIndex: options.zIndex\n                });\n                var step = Math.max(1, labelOptions.step);\n                this.children = grep(this.children, function (child) {\n                    return !(child instanceof AxisLabel);\n                });\n                this.labels = [];\n                if (labelOptions.visible) {\n                    var range = this.labelsRange();\n                    var rotation = labelOptions.rotation;\n                    if (isObject(rotation)) {\n                        labelOptions.alignRotation = rotation.align;\n                        labelOptions.rotation = rotation.angle;\n                    }\n                    if (labelOptions.rotation === 'auto') {\n                        labelOptions.rotation = 0;\n                        options.autoRotateLabels = true;\n                    }\n                    for (var idx = range.min; idx < range.max; idx += step) {\n                        var label = this$1.createAxisLabel(idx, labelOptions);\n                        if (label) {\n                            this$1.append(label);\n                            this$1.labels.push(label);\n                        }\n                    }\n                }\n            },\n            lineBox: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var axisX = mirror ? box.x1 : box.x2;\n                var axisY = mirror ? box.y2 : box.y1;\n                var lineWidth = options.line.width || 0;\n                return vertical ? new Box(axisX, box.y1, axisX, box.y2 - lineWidth) : new Box(box.x1, axisY, box.x2 - lineWidth, axisY);\n            },\n            createTitle: function () {\n                var options = this.options;\n                var titleOptions = deepExtend({\n                    rotation: options.vertical ? -90 : 0,\n                    text: '',\n                    zIndex: 1,\n                    visualSize: true\n                }, options.title);\n                if (titleOptions.visible && titleOptions.text) {\n                    var title = new TextBox(titleOptions.text, titleOptions);\n                    this.append(title);\n                    this.title = title;\n                }\n            },\n            createNotes: function () {\n                var this$1 = this;\n                var options = this.options;\n                var notes = options.notes;\n                var items = notes.data || [];\n                this.notes = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = deepExtend({}, notes, items[i]);\n                    item.value = this$1.parseNoteValue(item.value);\n                    var note = new Note({\n                        value: item.value,\n                        text: item.label.text,\n                        dataItem: item\n                    }, item, this$1.chartService);\n                    if (note.options.visible) {\n                        if (defined(note.options.position)) {\n                            if (options.vertical && !inArray(note.options.position, [\n                                    LEFT,\n                                    RIGHT\n                                ])) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else if (!options.vertical && !inArray(note.options.position, [\n                                    TOP,\n                                    BOTTOM\n                                ])) {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        } else {\n                            if (options.vertical) {\n                                note.options.position = options.reverse ? LEFT : RIGHT;\n                            } else {\n                                note.options.position = options.reverse ? BOTTOM : TOP;\n                            }\n                        }\n                        this$1.append(note);\n                        this$1.notes.push(note);\n                    }\n                }\n            },\n            parseNoteValue: function (value) {\n                return value;\n            },\n            renderVisual: function () {\n                ChartElement.fn.renderVisual.call(this);\n                this.createPlotBands();\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this.createBackground();\n                this.createLine();\n            },\n            gridLinesVisual: function () {\n                var gridLines = this._gridLines;\n                if (!gridLines) {\n                    gridLines = this._gridLines = new Group({ zIndex: -2 });\n                    this.appendVisual(this._gridLines);\n                }\n                return gridLines;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n                var tickLineOptions = { vertical: options.vertical };\n                function render(tickPositions, tickOptions, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, tickOptions.step);\n                    if (tickOptions.visible) {\n                        for (var i = tickOptions.skip; i < count; i += step) {\n                            if (defined(skipUnit) && i % skipUnit === 0) {\n                                continue;\n                            }\n                            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                            tickLineOptions.position = tickPositions[i];\n                            lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), options.majorTicks);\n                render(this.getMinorTickPositions(), options.minorTicks, majorUnit / options.minorUnit);\n            },\n            createLine: function () {\n                var options = this.options;\n                var line = options.line;\n                var lineBox = this.lineBox();\n                if (line.width > 0 && line.visible) {\n                    var path = new Path({\n                        stroke: {\n                            width: line.width,\n                            color: line.color,\n                            dashType: line.dashType\n                        }\n                    });\n                    path.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                    if (options._alignLines) {\n                        alignPathToPixel(path);\n                    }\n                    var group = this._lineGroup = new Group();\n                    group.append(path);\n                    this.visual.append(group);\n                    this.createTicks(group);\n                }\n            },\n            getActualTickSize: function () {\n                var options = this.options;\n                var tickSize = 0;\n                if (options.majorTicks.visible && options.minorTicks.visible) {\n                    tickSize = Math.max(options.majorTicks.size, options.minorTicks.size);\n                } else if (options.majorTicks.visible) {\n                    tickSize = options.majorTicks.size;\n                } else if (options.minorTicks.visible) {\n                    tickSize = options.minorTicks.size;\n                }\n                return tickSize;\n            },\n            createBackground: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var background = options.background;\n                if (background) {\n                    this._backgroundPath = Path.fromRect(box.toRect(), {\n                        fill: { color: background },\n                        stroke: null\n                    });\n                    this.visual.append(this._backgroundPath);\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var options = this.options;\n                var plotBands = options.plotBands || [];\n                var vertical = options.vertical;\n                var plotArea = this.plotArea;\n                if (plotBands.length === 0) {\n                    return;\n                }\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                var altAxis = grep(this.pane.axes, function (axis) {\n                    return axis.options.vertical !== this$1.options.vertical;\n                })[0];\n                for (var idx = 0; idx < plotBands.length; idx++) {\n                    var item = plotBands[idx];\n                    var slotX = void 0, slotY = void 0;\n                    if (vertical) {\n                        slotX = (altAxis || plotArea.axisX).lineBox();\n                        slotY = this$1.getSlot(item.from, item.to, true);\n                    } else {\n                        slotX = this$1.getSlot(item.from, item.to, true);\n                        slotY = (altAxis || plotArea.axisY).lineBox();\n                    }\n                    if (slotX.width() !== 0 && slotY.height() !== 0) {\n                        var bandRect = new Rect([\n                            slotX.x1,\n                            slotY.y1\n                        ], [\n                            slotX.width(),\n                            slotY.height()\n                        ]);\n                        var path = Path.fromRect(bandRect, {\n                            fill: {\n                                color: item.color,\n                                opacity: item.opacity\n                            },\n                            stroke: null\n                        });\n                        group.append(path);\n                    }\n                }\n                this.appendVisual(group);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var minorUnit = options.minorUnit;\n                var vertical = options.vertical;\n                var axisLineVisible = altAxis.options.line.visible;\n                var majorUnit = majorGridLines.visible ? options.majorUnit : 0;\n                var lineBox = altAxis.lineBox();\n                var linePos = lineBox[vertical ? 'y1' : 'x1'];\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPositions, gridLine, skipUnit) {\n                    var count = tickPositions.length;\n                    var step = Math.max(1, gridLine.step);\n                    if (gridLine.visible) {\n                        for (var i = gridLine.skip; i < count; i += step) {\n                            var pos = round(tickPositions[i]);\n                            if (!inArray(pos, majorTicks)) {\n                                if (i % skipUnit !== 0 && (!axisLineVisible || linePos !== pos)) {\n                                    lineOptions.position = pos;\n                                    container.append(createAxisGridLine(lineOptions, gridLine));\n                                    majorTicks.push(pos);\n                                }\n                            }\n                        }\n                    }\n                }\n                render(this.getMajorTickPositions(), majorGridLines);\n                render(this.getMinorTickPositions(), minorGridLines, majorUnit / minorUnit);\n                return container.children;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var title = ref.title;\n                var vertical = options.vertical;\n                var count = labels.length;\n                var sizeFn = vertical ? WIDTH : HEIGHT;\n                var titleSize = title ? title.box[sizeFn]() : 0;\n                var space = this.getActualTickSize() + options.margin + titleSize;\n                var rootBox = (this.getRoot() || {}).box || box;\n                var boxSize = rootBox[sizeFn]();\n                var maxLabelSize = 0;\n                for (var i = 0; i < count; i++) {\n                    var labelSize = labels[i].box[sizeFn]();\n                    if (labelSize + space <= boxSize) {\n                        maxLabelSize = Math.max(maxLabelSize, labelSize);\n                    }\n                }\n                if (vertical) {\n                    this.box = new Box(box.x1, box.y1, box.x1 + maxLabelSize + space, box.y2);\n                } else {\n                    this.box = new Box(box.x1, box.y1, box.x2, box.y1 + maxLabelSize + space);\n                }\n                this.arrangeTitle();\n                this.arrangeLabels();\n                this.arrangeNotes();\n            },\n            getLabelsTickPositions: function () {\n                return this.getMajorTickPositions();\n            },\n            labelTickIndex: function (label) {\n                return label.index;\n            },\n            arrangeLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelsBetweenTicks = !options.justified;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var mirror = options.labels.mirror;\n                var tickPositions = this.getLabelsTickPositions();\n                var labelOffset = this.getActualTickSize() + options.margin;\n                for (var idx = 0; idx < labels.length; idx++) {\n                    var label = labels[idx];\n                    var tickIx = this$1.labelTickIndex(label);\n                    var labelSize = vertical ? label.box.height() : label.box.width();\n                    var labelPos = tickPositions[tickIx] - labelSize / 2;\n                    var labelBox = void 0, firstTickPosition = void 0, nextTickPosition = void 0;\n                    if (vertical) {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                            var middle = firstTickPosition + (nextTickPosition - firstTickPosition) / 2;\n                            labelPos = middle - labelSize / 2;\n                        }\n                        var labelX = lineBox.x2;\n                        if (mirror) {\n                            labelX += labelOffset;\n                            label.options.rotationOrigin = LEFT;\n                        } else {\n                            labelX -= labelOffset + label.box.width();\n                            label.options.rotationOrigin = RIGHT;\n                        }\n                        labelBox = label.box.move(labelX, labelPos);\n                    } else {\n                        if (labelsBetweenTicks) {\n                            firstTickPosition = tickPositions[tickIx];\n                            nextTickPosition = tickPositions[tickIx + 1];\n                        } else {\n                            firstTickPosition = labelPos;\n                            nextTickPosition = labelPos + labelSize;\n                        }\n                        var labelY = lineBox.y1;\n                        if (mirror) {\n                            labelY -= labelOffset + label.box.height();\n                            label.options.rotationOrigin = BOTTOM;\n                        } else {\n                            labelY += labelOffset;\n                            label.options.rotationOrigin = TOP;\n                        }\n                        labelBox = new Box(firstTickPosition, labelY, nextTickPosition, labelY + label.box.height());\n                    }\n                    label.reflow(labelBox);\n                }\n            },\n            autoRotateLabels: function () {\n                if (this.options.autoRotateLabels && !this.options.vertical) {\n                    var tickPositions = this.getMajorTickPositions();\n                    var labels = this.labels;\n                    var angle;\n                    for (var idx = 0; idx < labels.length; idx++) {\n                        var width = tickPositions[idx + 1] - tickPositions[idx];\n                        var labelBox = labels[idx].box;\n                        if (labelBox.width() > width) {\n                            if (labelBox.height() > width) {\n                                angle = -90;\n                                break;\n                            }\n                            angle = -45;\n                        }\n                    }\n                    if (angle) {\n                        for (var idx$1 = 0; idx$1 < labels.length; idx$1++) {\n                            labels[idx$1].options.rotation = angle;\n                            labels[idx$1].reflow(new Box());\n                        }\n                        return true;\n                    }\n                }\n            },\n            arrangeTitle: function () {\n                var ref = this;\n                var options = ref.options;\n                var title = ref.title;\n                var mirror = options.labels.mirror;\n                var vertical = options.vertical;\n                if (title) {\n                    if (vertical) {\n                        title.options.align = mirror ? RIGHT : LEFT;\n                        title.options.vAlign = title.options.position;\n                    } else {\n                        title.options.align = title.options.position;\n                        title.options.vAlign = mirror ? TOP : BOTTOM;\n                    }\n                    title.reflow(this.box);\n                }\n            },\n            arrangeNotes: function () {\n                var this$1 = this;\n                for (var idx = 0; idx < this.notes.length; idx++) {\n                    var item = this$1.notes[idx];\n                    var value = item.options.value;\n                    var slot = void 0;\n                    if (defined(value)) {\n                        if (this$1.shouldRenderNote(value)) {\n                            item.show();\n                        } else {\n                            item.hide();\n                        }\n                        slot = this$1.noteSlot(value);\n                    } else {\n                        item.hide();\n                    }\n                    item.reflow(slot || this$1.lineBox());\n                }\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            alignTo: function (secondAxis) {\n                var lineBox = secondAxis.lineBox();\n                var vertical = this.options.vertical;\n                var pos = vertical ? Y : X;\n                this.box.snapTo(lineBox, pos);\n                if (vertical) {\n                    this.box.shrink(0, this.lineBox().height() - lineBox.height());\n                } else {\n                    this.box.shrink(this.lineBox().width() - lineBox.width(), 0);\n                }\n                this.box[pos + 1] -= this.lineBox()[pos + 1] - lineBox[pos + 1];\n                this.box[pos + 2] -= this.lineBox()[pos + 2] - lineBox[pos + 2];\n            },\n            axisLabelText: function (value, dataItem, options) {\n                var text = value;\n                if (options.template) {\n                    var tmpl = TemplateService.compile(options.template);\n                    text = tmpl({\n                        value: value,\n                        dataItem: dataItem,\n                        format: options.format,\n                        culture: options.culture\n                    });\n                } else if (options.format) {\n                    text = this.chartService.format.localeAuto(options.format, [value], options.culture);\n                }\n                return text;\n            },\n            slot: function (from, to, limit) {\n                var slot = this.getSlot(from, to, limit);\n                if (slot) {\n                    return slot.toRect();\n                }\n            },\n            contentBox: function () {\n                var box = this.box.clone();\n                var labels = this.labels;\n                if (labels.length) {\n                    if (labels[0].options.visible) {\n                        box.wrap(labels[0].box);\n                    }\n                    var lastLabel = labels[labels.length - 1];\n                    if (lastLabel.options.visible) {\n                        box.wrap(lastLabel.box);\n                    }\n                }\n                return box;\n            },\n            limitRange: function (from, to, min, max, offset) {\n                var options = this.options;\n                if (from < min && offset < 0 && (!defined(options.min) || options.min <= min) || max < to && offset > 0 && (!defined(options.max) || max <= options.max)) {\n                    return null;\n                }\n                if (to < min && offset > 0 || max < from && offset < 0) {\n                    return {\n                        min: from,\n                        max: to\n                    };\n                }\n                var rangeSize = to - from;\n                var minValue = from;\n                var maxValue = to;\n                if (from < min) {\n                    minValue = limitValue(from, min, max);\n                    maxValue = limitValue(from + rangeSize, min + rangeSize, max);\n                } else if (to > max) {\n                    maxValue = limitValue(to, min, max);\n                    minValue = limitValue(to - rangeSize, min, max - rangeSize);\n                }\n                return {\n                    min: minValue,\n                    max: maxValue\n                };\n            },\n            valueRange: function () {\n                return {\n                    min: this.seriesMin,\n                    max: this.seriesMax\n                };\n            }\n        });\n        setDefaultOptions(Axis, {\n            labels: {\n                visible: true,\n                rotation: 0,\n                mirror: false,\n                step: 1,\n                skip: 0\n            },\n            line: {\n                width: 1,\n                color: BLACK,\n                visible: true\n            },\n            title: {\n                visible: true,\n                position: CENTER\n            },\n            majorTicks: {\n                align: OUTSIDE,\n                size: 4,\n                skip: 0,\n                step: 1\n            },\n            minorTicks: {\n                align: OUTSIDE,\n                size: 3,\n                skip: 0,\n                step: 1\n            },\n            axisCrossingValue: 0,\n            majorTickType: OUTSIDE,\n            minorTickType: NONE,\n            majorGridLines: {\n                skip: 0,\n                step: 1\n            },\n            minorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK,\n                skip: 0,\n                step: 1\n            },\n            margin: 5,\n            visible: true,\n            reverse: false,\n            justified: true,\n            notes: { label: { text: '' } },\n            _alignLines: true,\n            _deferLabels: false\n        });\n        var MIN_CATEGORY_POINTS_RANGE = 0.01;\n        var CategoryAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                this._ticks = {};\n                this._initCategories(this.options);\n            },\n            _initCategories: function (options) {\n                var categories = (options.categories || []).slice(0);\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    options.srcCategories = options.categories;\n                    var min = definedMin ? Math.floor(options.min) : 0;\n                    var max;\n                    if (definedMax) {\n                        max = options.justified ? Math.floor(options.max) + 1 : Math.ceil(options.max);\n                    } else {\n                        max = categories.length;\n                    }\n                    options.categories = options.categories.slice(min, max);\n                }\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = (options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: isNumber(options.min) ? options.min : 0,\n                    max: isNumber(options.max) ? options.max : options.categories.length\n                };\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: Math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0)\n                };\n            },\n            getScale: function () {\n                var ref = this.rangeIndices();\n                var min = ref.min;\n                var max = ref.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return scale * (this.options.reverse ? -1 : 1);\n            },\n            getTickPositions: function (stepSize) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var ref$1 = this.rangeIndices();\n                var min = ref$1.min;\n                var max = ref$1.max;\n                var lineBox = this.lineBox();\n                var scale = this.getScale();\n                var pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)];\n                var positions = [];\n                var current = min % 1 !== 0 ? Math.floor(min / 1) + stepSize : min;\n                while (current <= max) {\n                    positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n                    current += stepSize;\n                }\n                return positions;\n            },\n            getLabelsTickPositions: function () {\n                var tickPositions = this.getMajorTickPositions().slice(0);\n                var range = this.rangeIndices();\n                var scale = this.getScale();\n                var box = this.lineBox();\n                var options = this.options;\n                var axis = options.vertical ? Y : X;\n                var start = options.reverse ? 2 : 1;\n                var end = options.reverse ? 1 : 2;\n                if (range.min % 1 !== 0) {\n                    tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n                }\n                if (range.max % 1 !== 0) {\n                    tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n                }\n                return tickPositions;\n            },\n            labelTickIndex: function (label) {\n                var range = this.rangeIndices();\n                var index = label.index;\n                if (range.min > 0) {\n                    index = index - Math.floor(range.min);\n                }\n                return index;\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var ref = this;\n                var box = ref.box;\n                var labels = ref.labels;\n                if (labels.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    var firstLabel = labels[0];\n                    var lastLabel = last(labels);\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getTicks: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var cache = this._ticks;\n                var range = this.rangeIndices();\n                var lineBox = this.lineBox();\n                var hash = lineBox.getHash() + range.min + ',' + range.max + reverse + justified;\n                if (cache._hash !== hash) {\n                    cache._hash = hash;\n                    cache.majorTicks = this.getTickPositions(1);\n                    cache.minorTicks = this.getTickPositions(0.5);\n                }\n                return cache;\n            },\n            getSlot: function (from, to, limit) {\n                var ref = this;\n                var options = ref.options;\n                var reverse = options.reverse;\n                var justified = options.justified;\n                var vertical = options.vertical;\n                var ref$1 = this.rangeIndices();\n                var min = ref$1.min;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var slotBox = lineBox.clone();\n                var singleSlot = !defined(to);\n                var start = valueOrDefault(from, 0);\n                var end = valueOrDefault(to, start);\n                end = Math.max(end - 1, start);\n                end = Math.max(start, end);\n                var p1 = lineStart + (start - min) * scale;\n                var p2 = lineStart + (end + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                    p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            slot: function (from, to, limit) {\n                var start = from;\n                var end = to;\n                if (typeof start === 'string') {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === 'string') {\n                    end = this.categoryIndex(end);\n                }\n                return Axis.fn.slot.call(this, start, end, limit);\n            },\n            pointCategoryIndex: function (point) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var range = this.rangeIndices();\n                var startValue = reverse ? range.max : range.min;\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + 1];\n                var lineEnd = lineBox[valueAxis + 2];\n                var pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var value = startValue + (pos - lineStart) / scale;\n                var diff = value % 1;\n                if (justified) {\n                    value = Math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return Math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var index = (options.srcCategories || options.categories).indexOf(value);\n                return index - Math.floor(options.min || 0);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = options.categories.length;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var ref = this.totalRange();\n                var totalMin = ref.min;\n                var totalMax = ref.max;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var range = this.options.categories.length;\n                var delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var justified = options.justified;\n                var labelOptions = options.labels;\n                var ref = this.totalRangeIndices(true);\n                var min = ref.min;\n                var max = ref.max;\n                var start = Math.floor(min);\n                if (!justified) {\n                    min = Math.floor(min);\n                    max = Math.ceil(max);\n                } else {\n                    min = Math.ceil(min);\n                    max = Math.floor(max);\n                }\n                var skip;\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * Math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var category = valueOrDefault(options.categories[index], '');\n                var text = this.axisLabelText(category, dataItem, labelOptions);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.totalRangeIndices();\n                return Math.floor(range.min) <= value && value <= Math.ceil(range.max);\n            },\n            noteSlot: function (value) {\n                var options = this.options;\n                var index = value - Math.floor(options.min || 0);\n                return this.getSlot(index);\n            },\n            arrangeNotes: function () {\n                Axis.fn.arrangeNotes.call(this);\n                this.hideOutOfRangeNotes();\n            },\n            hideOutOfRangeNotes: function () {\n                var ref = this;\n                var notes = ref.notes;\n                var box = ref.box;\n                if (notes && notes.length) {\n                    var valueAxis = this.options.vertical ? Y : X;\n                    var start = box[valueAxis + 1];\n                    var end = box[valueAxis + 2];\n                    for (var idx = 0; idx < notes.length; idx++) {\n                        var note = notes[idx];\n                        if (note.box && (end < note.box[valueAxis + 1] || note.box[valueAxis + 2] < start)) {\n                            note.hide();\n                        }\n                    }\n                }\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true);\n                var scale = this.getScale();\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var totalRange = this.totalRange();\n                var min = range.min + offset;\n                var max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var range = this.totalRangeIndices(true);\n                var scale = this.getScale();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                var rangeMin = Math.min(min, max);\n                var rangeMax = Math.max(min, max);\n                if (rangeMax - rangeMin >= MIN_CATEGORY_POINTS_RANGE) {\n                    return {\n                        min: rangeMin,\n                        max: rangeMax\n                    };\n                }\n            },\n            valueRange: function () {\n                return this.range();\n            }\n        });\n        setDefaultOptions(CategoryAxis, {\n            type: 'category',\n            categories: [],\n            vertical: false,\n            majorGridLines: {\n                visible: false,\n                width: 1,\n                color: BLACK\n            },\n            labels: { zIndex: 1 },\n            justified: false,\n            _deferLabels: true\n        });\n        var MILLISECONDS = 'milliseconds';\n        var SECONDS = 'seconds';\n        var MINUTES = 'minutes';\n        var HOURS = 'hours';\n        var DAYS = 'days';\n        var WEEKS = 'weeks';\n        var MONTHS = 'months';\n        var YEARS = 'years';\n        var TIME_PER_MILLISECOND = 1;\n        var TIME_PER_SECOND = 1000;\n        var TIME_PER_MINUTE = 60 * TIME_PER_SECOND;\n        var TIME_PER_HOUR = 60 * TIME_PER_MINUTE;\n        var TIME_PER_DAY = 24 * TIME_PER_HOUR;\n        var TIME_PER_WEEK = 7 * TIME_PER_DAY;\n        var TIME_PER_MONTH = 31 * TIME_PER_DAY;\n        var TIME_PER_YEAR = 365 * TIME_PER_DAY;\n        var TIME_PER_UNIT = {\n            'years': TIME_PER_YEAR,\n            'months': TIME_PER_MONTH,\n            'weeks': TIME_PER_WEEK,\n            'days': TIME_PER_DAY,\n            'hours': TIME_PER_HOUR,\n            'minutes': TIME_PER_MINUTE,\n            'seconds': TIME_PER_SECOND,\n            'milliseconds': TIME_PER_MILLISECOND\n        };\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b;\n            var offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            return new Date(date.getTime() + ticks);\n        }\n        function toDate(value) {\n            var result;\n            if (value instanceof Date) {\n                result = value;\n            } else if (value) {\n                result = new Date(value);\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            if (weekStartDay === void 0) {\n                weekStartDay = 0;\n            }\n            var daysToSubtract = 0;\n            var day = date.getDay();\n            if (!isNaN(day)) {\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function adjustDST(date, hours) {\n            if (hours === 0 && date.getHours() === 23) {\n                date.setHours(date.getHours() + 2);\n                return true;\n            }\n            return false;\n        }\n        function addHours(date, hours) {\n            var roundedDate = new Date(date);\n            roundedDate.setMinutes(0, 0, 0);\n            var tzDiff = (date.getTimezoneOffset() - roundedDate.getTimezoneOffset()) * TIME_PER_MINUTE;\n            return addTicks(roundedDate, tzDiff + hours * TIME_PER_HOUR);\n        }\n        function addDuration(dateValue, value, unit, weekStartDay) {\n            var result = dateValue;\n            if (dateValue) {\n                var date = toDate(dateValue);\n                var hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    result = addHours(date, value);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                } else if (unit === MILLISECONDS) {\n                    result = addTicks(date, value);\n                }\n                if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function floorDate(date, unit, weekStartDay) {\n            return addDuration(toDate(date), 0, unit, weekStartDay);\n        }\n        function ceilDate(dateValue, unit, weekStartDay) {\n            var date = toDate(dateValue);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateComparer(a, b) {\n            if (a && b) {\n                return a.getTime() - b.getTime();\n            }\n            return -1;\n        }\n        function dateDiff(a, b) {\n            return a.getTime() - b;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                var result = [];\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push(toTime(value[idx]));\n                }\n                return result;\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return absoluteDateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var date = toDate(value);\n            var startDate = toDate(start);\n            var index;\n            if (baseUnit === MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit === YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else if (baseUnit === DAYS || baseUnit === WEEKS) {\n                index = timeIndex(date, startDate, baseUnit);\n            } else {\n                index = dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n            }\n            return index / baseUnitStep;\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = Math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0;\n            var high = sortedDates.length - 1;\n            var index;\n            while (low <= high) {\n                index = Math.floor((low + high) / 2);\n                var currentDate = sortedDates[index];\n                if (currentDate < date) {\n                    low = index + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = index - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[index - 1], date)) {\n                    index--;\n                }\n                return index;\n            }\n            if (sortedDates[index] <= date) {\n                return index;\n            }\n            return index - 1;\n        }\n        function parseDate(intlService, date) {\n            var result;\n            if (isString(date)) {\n                result = intlService.parseDate(date) || toDate(date);\n            } else {\n                result = toDate(date);\n            }\n            return result;\n        }\n        function parseDates(intlService, dates) {\n            if (isArray(dates)) {\n                var result = [];\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result.push(parseDate(intlService, dates[idx]));\n                }\n                return result;\n            }\n            return parseDate(intlService, dates);\n        }\n        var COORDINATE_LIMIT = 300000;\n        var DateLabelFormats = {\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var ZERO_THRESHOLD = 0.2;\n        var AUTO = 'auto';\n        var BASE_UNITS = [\n            MILLISECONDS,\n            SECONDS,\n            MINUTES,\n            HOURS,\n            DAYS,\n            WEEKS,\n            MONTHS,\n            YEARS\n        ];\n        var FIT = 'fit';\n        var DateCategoryAxis = CategoryAxis.extend({\n            init: function (axisOptions, chartService) {\n                CategoryAxis.fn.init.call(this, axisOptions, chartService);\n                var intlService = chartService.intl;\n                var options = this.options;\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: parseDates(intlService, options.categories),\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max)\n                });\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                if (options.categories && options.categories.length > 0) {\n                    var baseUnit = (options.baseUnit || '').toLowerCase();\n                    var useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n                    if (useDefault) {\n                        options.baseUnit = this.defaultBaseUnit(options);\n                    }\n                    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                        this.autoBaseUnit(options);\n                    }\n                    this._groupsStart = addDuration(options.categories[0], 0, options.baseUnit, options.weekStartDay);\n                    this.groupCategories(options);\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                }\n                this.options = options;\n            },\n            _initCategories: function () {\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                var categories = this.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return parseDate(this.chartService.intl, value);\n            },\n            noteSlot: function (value) {\n                return this.getSlot(value);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / (range.max - range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if (range.min && range.max) {\n                    var from = addTicks(options.min || range.min, offset);\n                    var to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var rounds = Math.abs(delta);\n                var result = this.range();\n                var from = result.min;\n                var to = result.max;\n                if (from && to) {\n                    while (rounds--) {\n                        var range = dateDiff(from, to);\n                        var step = Math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    result = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return result;\n            },\n            defaultBaseUnit: function (options) {\n                var categories = options.categories;\n                var count = defined(categories) ? categories.length : 0;\n                var minDiff = MAX_VALUE;\n                var lastCategory, unit;\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    var category = categories[categoryIx];\n                    if (category && lastCategory) {\n                        var diff = absoluteDateDiff(category, lastCategory);\n                        if (diff > 0) {\n                            minDiff = Math.min(minDiff, diff);\n                            if (minDiff >= TIME_PER_YEAR) {\n                                unit = YEARS;\n                            } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                                unit = MONTHS;\n                            } else if (minDiff >= TIME_PER_WEEK) {\n                                unit = WEEKS;\n                            } else if (minDiff >= TIME_PER_DAY) {\n                                unit = DAYS;\n                            } else if (minDiff >= TIME_PER_HOUR) {\n                                unit = HOURS;\n                            } else if (minDiff >= TIME_PER_MINUTE) {\n                                unit = MINUTES;\n                            } else {\n                                unit = SECONDS;\n                            }\n                        }\n                    }\n                    lastCategory = category;\n                }\n                return unit || DAYS;\n            },\n            _categoryRange: function (categories) {\n                var range = categories._range;\n                if (!range) {\n                    range = categories._range = sparseArrayLimits(categories);\n                }\n                return range;\n            },\n            totalRange: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var categories = options.categories;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var categoryLimits = this.categoriesRange();\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                var minIdx = 0, maxIdx = 0;\n                if (categories.length) {\n                    minIdx = dateIndex(min, categories[0], baseUnit, baseUnitStep);\n                    maxIdx = dateIndex(max, categories[0], baseUnit, baseUnitStep);\n                    if (options.roundToBaseUnit) {\n                        minIdx = Math.floor(minIdx);\n                        maxIdx = options.justified ? Math.floor(maxIdx) : Math.ceil(maxIdx);\n                    }\n                }\n                return {\n                    min: minIdx,\n                    max: maxIdx\n                };\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var range = this.rangeIndices();\n                var min = Math.floor(range.min);\n                var max = Math.ceil(range.max);\n                return {\n                    min: min + labelOptions.skip,\n                    max: options.categories.length ? max + (options.justified ? 1 : 0) : 0\n                };\n            },\n            categoriesRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                var max = toDate(range.max);\n                if (!options.justified && dateEquals(max, this._roundToTotalStep(max, options, false))) {\n                    max = this._roundToTotalStep(max, options, true, true);\n                }\n                return {\n                    min: toDate(range.min),\n                    max: max\n                };\n            },\n            currentRange: function () {\n                var options = this.options;\n                var round$$1 = options.roundToBaseUnit !== false;\n                var totalRange = this.categoriesRange();\n                var min = options.min;\n                var max = options.max;\n                if (!min) {\n                    min = round$$1 ? this._roundToTotalStep(totalRange.min, options, false) : totalRange.min;\n                }\n                if (!max) {\n                    max = round$$1 ? this._roundToTotalStep(totalRange.max, options, !options.justified) : totalRange.max;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            datesRange: function () {\n                var range = this._categoryRange(this.options.srcCategories || this.options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            pan: function (delta) {\n                var options = this.options;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var ref = this.currentRange();\n                var min = ref.min;\n                var max = ref.max;\n                var totalLimits = this.totalLimits();\n                var scale = size / (max - min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var from = addTicks(min, offset);\n                var to = addTicks(max, offset);\n                var panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = options.baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.currentRange();\n                var indicesRange = this.rangeIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                var options = this.options;\n                var totalLimits = this.totalLimits();\n                var weekStartDay = options.weekStartDay;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var ref = this.currentRange();\n                var rangeMin = ref.min;\n                var rangeMax = ref.max;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (options.userSetBaseUnit === FIT) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var diff = dateDiff(max, min);\n                    var baseUnitIndex = BASE_UNITS.indexOf(baseUnit);\n                    var autoBaseUnitStep, ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== MILLISECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                min = toDate(limitValue(min, totalLimits.min, totalLimits.max));\n                max = toDate(limitValue(max, totalLimits.min, totalLimits.max));\n                if (min && max && dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep\n                    };\n                }\n            },\n            totalLimits: function () {\n                var options = this.options;\n                var datesRange = this.datesRange();\n                var min = this._roundToTotalStep(toDate(datesRange.min), options, false);\n                var max = datesRange.max;\n                if (!options.justified) {\n                    max = this._roundToTotalStep(max, options, true, dateEquals(max, this._roundToTotalStep(max, options, false)));\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function (rangeOptions) {\n                var options = rangeOptions || this.options;\n                var categories = options.categories;\n                var autoUnit = options.baseUnit === FIT;\n                var baseUnit = autoUnit ? BASE_UNITS[0] : options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var stepOptions = {\n                    baseUnit: baseUnit,\n                    baseUnitStep: baseUnitStep,\n                    weekStartDay: options.weekStartDay\n                };\n                var categoryLimits = this._categoryRange(categories);\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                return {\n                    min: this._roundToTotalStep(min, stepOptions, false),\n                    max: this._roundToTotalStep(max, stepOptions, true, true)\n                };\n            },\n            autoBaseUnit: function (options) {\n                var categoryLimits = this._categoryRange(options.categories);\n                var span = toDate(options.max || categoryLimits.max) - toDate(options.min || categoryLimits.min);\n                var maxDateGroups = options.maxDateGroups || this.options.maxDateGroups;\n                var autoUnit = options.baseUnit === FIT;\n                var autoUnitIx = 0;\n                var baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit;\n                var units = span / TIME_PER_UNIT[baseUnit];\n                var totalUnits = units;\n                var autoBaseUnitSteps = deepExtend({}, this.options.autoBaseUnitSteps, options.autoBaseUnitSteps);\n                var unitSteps, step, nextStep;\n                while (!step || units >= maxDateGroups) {\n                    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                    nextStep = unitSteps.shift();\n                    if (nextStep) {\n                        step = nextStep;\n                        units = totalUnits / step;\n                    } else if (baseUnit === last(BASE_UNITS)) {\n                        step = Math.ceil(totalUnits / maxDateGroups);\n                        break;\n                    } else if (autoUnit) {\n                        baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                        totalUnits = span / TIME_PER_UNIT[baseUnit];\n                        unitSteps = null;\n                    } else {\n                        if (units > maxDateGroups) {\n                            step = Math.ceil(totalUnits / maxDateGroups);\n                        }\n                        break;\n                    }\n                }\n                options.baseUnitStep = step;\n                options.baseUnit = baseUnit;\n            },\n            groupCategories: function (options) {\n                var categories = options.categories;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var maxCategory = toDate(sparseArrayLimits(categories).max);\n                var ref = this.range(options);\n                var min = ref.min;\n                var max = ref.max;\n                var groups = [];\n                var nextDate;\n                for (var date = min; date < max; date = nextDate) {\n                    groups.push(date);\n                    nextDate = addDuration(date, baseUnitStep, baseUnit, options.weekStartDay);\n                    if (nextDate > maxCategory && !options.max) {\n                        break;\n                    }\n                }\n                options.srcCategories = categories;\n                options.categories = groups;\n            },\n            _roundToTotalStep: function (value, axisOptions, upper, roundToNext) {\n                var options = axisOptions || this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var start = this._groupsStart;\n                if (start) {\n                    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                    var roundedStep = upper ? Math.ceil(step) : Math.floor(step);\n                    if (roundToNext) {\n                        roundedStep++;\n                    }\n                    return addDuration(start, roundedStep * baseUnitStep, baseUnit, options.weekStartDay);\n                }\n                return addDuration(value, upper ? baseUnitStep : 0, baseUnit, options.weekStartDay);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var dataItem = options.dataItems ? options.dataItems[index] : null;\n                var date = options.categories[index];\n                var baseUnit = options.baseUnit;\n                var unitFormat = labelOptions.dateFormats[baseUnit];\n                var visible = true;\n                if (options.justified) {\n                    var roundedDate = floorDate(date, baseUnit, options.weekStartDay);\n                    visible = dateEquals(roundedDate, date);\n                } else if (!options.roundToBaseUnit) {\n                    visible = !dateEquals(this.range().max, date);\n                }\n                if (visible) {\n                    labelOptions.format = labelOptions.format || unitFormat;\n                    var text = this.axisLabelText(date, dataItem, labelOptions);\n                    if (text) {\n                        return new AxisLabel(date, text, index, dataItem, labelOptions);\n                    }\n                }\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var categories = options.categories;\n                var index = -1;\n                if (categories.length) {\n                    index = Math.floor(dateIndex(toDate(value), categories[0], options.baseUnit, options.baseUnitStep || 1));\n                }\n                return index;\n            },\n            getSlot: function (a, b, limit) {\n                var start = a;\n                var end = b;\n                if (typeof start === OBJECT) {\n                    start = this.categoryIndex(start);\n                }\n                if (typeof end === OBJECT) {\n                    end = this.categoryIndex(end);\n                }\n                return CategoryAxis.fn.getSlot.call(this, start, end, limit);\n            },\n            valueRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            }\n        });\n        setDefaultOptions(DateCategoryAxis, {\n            type: DATE,\n            labels: { dateFormats: DateLabelFormats },\n            autoBaseUnitSteps: {\n                milliseconds: [\n                    1,\n                    10,\n                    100\n                ],\n                seconds: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                minutes: [\n                    1,\n                    2,\n                    5,\n                    15,\n                    30\n                ],\n                hours: [\n                    1,\n                    2,\n                    3\n                ],\n                days: [\n                    1,\n                    2,\n                    3\n                ],\n                weeks: [\n                    1,\n                    2\n                ],\n                months: [\n                    1,\n                    2,\n                    3,\n                    6\n                ],\n                years: [\n                    1,\n                    2,\n                    3,\n                    5,\n                    10,\n                    25,\n                    50\n                ]\n            },\n            maxDateGroups: 10\n        });\n        function autoMajorUnit(min, max) {\n            var diff = round(max - min, DEFAULT_PRECISION - 1);\n            if (diff === 0) {\n                if (max === 0) {\n                    return 0.1;\n                }\n                diff = Math.abs(max);\n            }\n            var scale = Math.pow(10, Math.floor(Math.log(diff) / Math.log(10)));\n            var relativeValue = round(diff / scale, DEFAULT_PRECISION);\n            var scaleMultiplier = 1;\n            if (relativeValue < 1.904762) {\n                scaleMultiplier = 0.2;\n            } else if (relativeValue < 4.761904) {\n                scaleMultiplier = 0.5;\n            } else if (relativeValue < 9.523809) {\n                scaleMultiplier = 1;\n            } else {\n                scaleMultiplier = 2;\n            }\n            return round(scale * scaleMultiplier, DEFAULT_PRECISION);\n        }\n        function autoAxisMin(min, max, narrow) {\n            if (!min && !max) {\n                return 0;\n            }\n            var axisMin;\n            if (min >= 0 && max >= 0) {\n                var minValue = min === max ? 0 : min;\n                var diff = (max - minValue) / max;\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMin = Math.max(0, minValue - (max - minValue) / 2);\n            } else {\n                axisMin = min;\n            }\n            return axisMin;\n        }\n        function autoAxisMax(min, max, narrow) {\n            if (!min && !max) {\n                return 1;\n            }\n            var axisMax;\n            if (min <= 0 && max <= 0) {\n                var maxValue = min === max ? 0 : max;\n                var diff = Math.abs((maxValue - min) / maxValue);\n                if (narrow === false || !narrow && diff > ZERO_THRESHOLD) {\n                    return 0;\n                }\n                axisMax = Math.min(0, maxValue - (min - maxValue) / 2);\n            } else {\n                axisMax = max;\n            }\n            return axisMax;\n        }\n        function floor(value, step) {\n            return round(Math.floor(value / step) * step, DEFAULT_PRECISION);\n        }\n        function ceil(value, step) {\n            return round(Math.ceil(value / step) * step, DEFAULT_PRECISION);\n        }\n        function limitCoordinate(value) {\n            return Math.max(Math.min(value, COORDINATE_LIMIT), -COORDINATE_LIMIT);\n        }\n        var MIN_VALUE_RANGE = Math.pow(10, -DEFAULT_PRECISION + 1);\n        var NumericAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var autoOptions = autoAxisOptions(seriesMin, seriesMax, options);\n                var totalOptions = totalAxisOptions(autoOptions, options);\n                Axis.fn.init.call(this, axisOptions(autoOptions, options), chartService);\n                this.totalMin = totalOptions.min;\n                this.totalMax = totalOptions.max;\n                this.totalMajorUnit = totalOptions.majorUnit;\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n            },\n            startValue: function () {\n                return 0;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                if (stepValue === 0) {\n                    return 1;\n                }\n                var options = this.options;\n                var range = options.max - options.min;\n                return Math.floor(round(range / stepValue, COORD_PRECISION)) + 1;\n            },\n            getTickPositions: function (unit, skipUnit) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var range = options.max - options.min;\n                var scale = lineSize / range;\n                var step = unit * scale;\n                var divisions = this.getDivisions(unit);\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var positions = [];\n                var pos = lineBox[(vertical ? Y : X) + startEdge];\n                var skipStep = 0;\n                if (skipUnit) {\n                    skipStep = skipUnit / unit;\n                }\n                for (var idx = 0; idx < divisions; idx++) {\n                    if (idx % skipStep !== 0) {\n                        positions.push(round(pos, COORD_PRECISION));\n                    }\n                    pos = pos + step * dir;\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                if (limit === void 0) {\n                    limit = false;\n                }\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (options.max - options.min));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 0;\n                }\n                if (!defined(end)) {\n                    end = start || 0;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                var p1, p2;\n                if (vertical) {\n                    p1 = options.max - Math.max(start, end);\n                    p2 = options.max - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - options.min;\n                    p2 = Math.max(start, end) - options.min;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = Number(options.max);\n                var min = Number(options.min);\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var offset = dir * (point[valueAxis] - lineStart);\n                var step = (max - min) / lineSize;\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = vertical ? max - valueOffset : min + valueOffset;\n                return round(value, DEFAULT_PRECISION);\n            },\n            translateRange: function (delta) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var max = options.max;\n                var min = options.min;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var range = max - min;\n                var scale = size / range;\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: min + offset,\n                    max: max + offset\n                };\n            },\n            scaleRange: function (delta) {\n                var options = this.options;\n                var offset = -delta * options.majorUnit;\n                return {\n                    min: options.min - offset,\n                    max: options.max + offset\n                };\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var value = round(options.min + index * options.majorUnit, DEFAULT_PRECISION);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                if (this.isValidRange(min, max)) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            isValidRange: function (min, max) {\n                return max - min > MIN_VALUE_RANGE;\n            }\n        });\n        function autoAxisOptions(seriesMin, seriesMax, options) {\n            var narrowRange = options.narrowRange;\n            var autoMin = autoAxisMin(seriesMin, seriesMax, narrowRange);\n            var autoMax = autoAxisMax(seriesMin, seriesMax, narrowRange);\n            var majorUnit = autoMajorUnit(autoMin, autoMax);\n            var autoOptions = { majorUnit: majorUnit };\n            if (options.roundToMajorUnit !== false) {\n                if (autoMin < 0 && remainderClose(autoMin, majorUnit, 1 / 3)) {\n                    autoMin -= majorUnit;\n                }\n                if (autoMax > 0 && remainderClose(autoMax, majorUnit, 1 / 3)) {\n                    autoMax += majorUnit;\n                }\n            }\n            autoOptions.min = floor(autoMin, majorUnit);\n            autoOptions.max = ceil(autoMax, majorUnit);\n            return autoOptions;\n        }\n        function totalAxisOptions(autoOptions, options) {\n            return {\n                min: defined(options.min) ? Math.min(autoOptions.min, options.min) : autoOptions.min,\n                max: defined(options.max) ? Math.max(autoOptions.max, options.max) : autoOptions.max,\n                majorUnit: autoOptions.majorUnit\n            };\n        }\n        function axisOptions(autoOptions, userOptions) {\n            var options = userOptions;\n            if (userOptions) {\n                var userSetLimits = defined(userOptions.min) || defined(userOptions.max);\n                if (userSetLimits) {\n                    if (userOptions.min === userOptions.max) {\n                        if (userOptions.min > 0) {\n                            userOptions.min = 0;\n                        } else {\n                            userOptions.max = 1;\n                        }\n                    }\n                }\n                if (userOptions.majorUnit) {\n                    autoOptions.min = floor(autoOptions.min, userOptions.majorUnit);\n                    autoOptions.max = ceil(autoOptions.max, userOptions.majorUnit);\n                } else if (userSetLimits) {\n                    options = deepExtend(autoOptions, userOptions);\n                    autoOptions.majorUnit = autoMajorUnit(options.min, options.max);\n                }\n            }\n            autoOptions.minorUnit = (options.majorUnit || autoOptions.majorUnit) / 5;\n            return deepExtend(autoOptions, options);\n        }\n        function remainderClose(value, divisor, ratio) {\n            var remainder = round(Math.abs(value % divisor), DEFAULT_PRECISION);\n            var threshold = divisor * (1 - ratio);\n            return remainder === 0 || remainder > threshold;\n        }\n        setDefaultOptions(NumericAxis, {\n            type: 'numeric',\n            min: 0,\n            max: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { format: '#.####################' },\n            zIndex: 1\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, axisOptions, chartService) {\n                var min = toDate(seriesMin);\n                var max = toDate(seriesMax);\n                var intlService = chartService.intl;\n                var options = axisOptions || {};\n                options = deepExtend(options || {}, {\n                    min: parseDate(intlService, options.min),\n                    max: parseDate(intlService, options.max),\n                    axisCrossingValue: parseDates(intlService, options.axisCrossingValues || options.axisCrossingValue)\n                });\n                options = applyDefaults(min, max, options);\n                Axis.fn.init.call(this, options, chartService);\n                this.seriesMin = min;\n                this.seriesMax = max;\n                this.totalMin = toTime(floorDate(toTime(min) - 1, options.baseUnit));\n                this.totalMax = toTime(ceilDate(toTime(max) + 1, options.baseUnit));\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return Math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (options.reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * step, options.baseUnit);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                return this.getTickPositions(this.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.prototype.getSlot.call(this, toDate(a), toDate(b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.prototype.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, null, labelOptions);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            translateRange: function (delta, exact) {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var weekStartDay = options.weekStartDay;\n                var lineBox = this.lineBox();\n                var size = options.vertical ? lineBox.height() : lineBox.width();\n                var range = this.range();\n                var scale = size / dateDiff(range.max, range.min);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                var from = addTicks(options.min, offset);\n                var to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            scaleRange: function (delta) {\n                var ref = this.options;\n                var from = ref.min;\n                var to = ref.max;\n                var rounds = Math.abs(delta);\n                while (rounds--) {\n                    var range = dateDiff(from, to);\n                    var step = Math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        function timeUnits(delta) {\n            var unit = HOURS;\n            if (delta >= TIME_PER_YEAR) {\n                unit = YEARS;\n            } else if (delta >= TIME_PER_MONTH) {\n                unit = MONTHS;\n            } else if (delta >= TIME_PER_WEEK) {\n                unit = WEEKS;\n            } else if (delta >= TIME_PER_DAY) {\n                unit = DAYS;\n            }\n            return unit;\n        }\n        function applyDefaults(seriesMin, seriesMax, options) {\n            var min = options.min || seriesMin;\n            var max = options.max || seriesMax;\n            var baseUnit = options.baseUnit || (max && min ? timeUnits(absoluteDateDiff(max, min)) : HOURS);\n            var baseUnitTime = TIME_PER_UNIT[baseUnit];\n            var autoMin = floorDate(toTime(min) - 1, baseUnit) || toDate(max);\n            var autoMax = ceilDate(toTime(max) + 1, baseUnit);\n            var userMajorUnit = options.majorUnit ? options.majorUnit : undefined;\n            var majorUnit = userMajorUnit || ceil(autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime;\n            var actualUnits = duration(autoMin, autoMax, baseUnit);\n            var totalUnits = ceil(actualUnits, majorUnit);\n            var unitsToAdd = totalUnits - actualUnits;\n            var head = Math.floor(unitsToAdd / 2);\n            var tail = unitsToAdd - head;\n            if (!options.baseUnit) {\n                delete options.baseUnit;\n            }\n            options.baseUnit = options.baseUnit || baseUnit;\n            options.min = options.min || addDuration(autoMin, -head, baseUnit);\n            options.max = options.max || addDuration(autoMax, tail, baseUnit);\n            options.minorUnit = options.minorUnit || majorUnit / 5;\n            options.majorUnit = majorUnit;\n            return options;\n        }\n        setDefaultOptions(DateValueAxis, {\n            type: DATE,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            labels: { dateFormats: DateLabelFormats }\n        });\n        var DEFAULT_MAJOR_UNIT = 10;\n        var LogarithmicAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options, chartService) {\n                var axisOptions = deepExtend({\n                    majorUnit: DEFAULT_MAJOR_UNIT,\n                    min: seriesMin,\n                    max: seriesMax\n                }, options);\n                var base = axisOptions.majorUnit;\n                var autoMax = autoAxisMax$1(seriesMax, base);\n                var autoMin = autoAxisMin$1(seriesMin, seriesMax, axisOptions);\n                var range = initRange(autoMin, autoMax, axisOptions, options);\n                axisOptions.max = range.max;\n                axisOptions.min = range.min;\n                axisOptions.minorUnit = options.minorUnit || round(base - 1, DEFAULT_PRECISION);\n                Axis.fn.init.call(this, axisOptions, chartService);\n                this.totalMin = defined(options.min) ? Math.min(autoMin, options.min) : autoMin;\n                this.totalMax = defined(options.max) ? Math.max(autoMax, options.max) : autoMax;\n                this.logMin = round(log(range.min, base), DEFAULT_PRECISION);\n                this.logMax = round(log(range.max, base), DEFAULT_PRECISION);\n                this.seriesMin = seriesMin;\n                this.seriesMax = seriesMax;\n                this.createLabels();\n            },\n            startValue: function () {\n                return this.options.min;\n            },\n            getSlot: function (a, b, limit) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var dir = reverse ? -1 : 1;\n                var step = dir * (lineSize / (logMax - logMin));\n                var slotBox = new Box(lineBox.x1, lineBox.y1, lineBox.x1, lineBox.y1);\n                var start = a;\n                var end = b;\n                if (!defined(start)) {\n                    start = end || 1;\n                }\n                if (!defined(end)) {\n                    end = start || 1;\n                }\n                if (start <= 0 || end <= 0) {\n                    return null;\n                }\n                if (limit) {\n                    start = Math.max(Math.min(start, options.max), options.min);\n                    end = Math.max(Math.min(end, options.max), options.min);\n                }\n                start = log(start, base);\n                end = log(end, base);\n                var p1, p2;\n                if (vertical) {\n                    p1 = logMax - Math.max(start, end);\n                    p2 = logMax - Math.min(start, end);\n                } else {\n                    p1 = Math.min(start, end) - logMin;\n                    p2 = Math.max(start, end) - logMin;\n                }\n                slotBox[valueAxis + 1] = limitCoordinate(lineStart + step * (reverse ? p2 : p1));\n                slotBox[valueAxis + 2] = limitCoordinate(lineStart + step * (reverse ? p1 : p2));\n                return slotBox;\n            },\n            getValue: function (point) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = (logMax - logMin) / lineSize;\n                var valueAxis = vertical ? Y : X;\n                var lineStart = lineBox[valueAxis + startEdge];\n                var offset = dir * (point[valueAxis] - lineStart);\n                var valueOffset = offset * step;\n                if (offset < 0 || offset > lineSize) {\n                    return null;\n                }\n                var value = logMin + valueOffset;\n                return round(Math.pow(base, value), DEFAULT_PRECISION);\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            scaleRange: function (delta) {\n                var base = this.options.majorUnit;\n                var offset = -delta;\n                return {\n                    min: Math.pow(base, this.logMin - offset),\n                    max: Math.pow(base, this.logMax + offset)\n                };\n            },\n            translateRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var logMin = ref.logMin;\n                var logMax = ref.logMax;\n                var reverse = options.reverse;\n                var vertical = options.vertical;\n                var base = options.majorUnit;\n                var lineBox = this.lineBox();\n                var size = vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (logMax - logMin);\n                var offset = round(delta / scale, DEFAULT_PRECISION);\n                if ((vertical || reverse) && !(vertical && reverse)) {\n                    offset = -offset;\n                }\n                return {\n                    min: Math.pow(base, logMin + offset),\n                    max: Math.pow(base, logMax + offset)\n                };\n            },\n            labelsCount: function () {\n                var floorMax = Math.floor(this.logMax);\n                var count = Math.floor(floorMax - this.logMin) + 1;\n                return count;\n            },\n            getMajorTickPositions: function () {\n                var ticks = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    ticks.push(position);\n                }, {\n                    step: 1,\n                    skip: 0\n                });\n                return ticks;\n            },\n            createTicks: function (lineGroup) {\n                var options = this.options;\n                var majorTicks = options.majorTicks;\n                var minorTicks = options.minorTicks;\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var lineBox = this.lineBox();\n                var ticks = [];\n                var tickLineOptions = { vertical: vertical };\n                function render(tickPosition, tickOptions) {\n                    tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                    tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                    tickLineOptions.position = tickPosition;\n                    lineGroup.append(createAxisTick(tickLineOptions, tickOptions));\n                }\n                if (majorTicks.visible) {\n                    this.traverseMajorTicksPositions(render, majorTicks);\n                }\n                if (minorTicks.visible) {\n                    this.traverseMinorTicksPositions(render, minorTicks);\n                }\n                return ticks;\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var vertical = options.vertical;\n                var lineBox = altAxis.lineBox();\n                var lineOptions = {\n                    lineStart: lineBox[vertical ? 'x1' : 'y1'],\n                    lineEnd: lineBox[vertical ? 'x2' : 'y2'],\n                    vertical: vertical\n                };\n                var majorTicks = [];\n                var container = this.gridLinesVisual();\n                function render(tickPosition, gridLine) {\n                    if (!inArray(tickPosition, majorTicks)) {\n                        lineOptions.position = tickPosition;\n                        container.append(createAxisGridLine(lineOptions, gridLine));\n                        majorTicks.push(tickPosition);\n                    }\n                }\n                if (majorGridLines.visible) {\n                    this.traverseMajorTicksPositions(render, majorGridLines);\n                }\n                if (minorGridLines.visible) {\n                    this.traverseMinorTicksPositions(render, minorGridLines);\n                }\n                return container.children;\n            },\n            traverseMajorTicksPositions: function (callback, tickOptions) {\n                var ref = this._lineOptions();\n                var lineStart = ref.lineStart;\n                var step = ref.step;\n                var ref$1 = this;\n                var logMin = ref$1.logMin;\n                var logMax = ref$1.logMax;\n                for (var power = Math.ceil(logMin) + tickOptions.skip; power <= logMax; power += tickOptions.step) {\n                    var position = round(lineStart + step * (power - logMin), DEFAULT_PRECISION);\n                    callback(position, tickOptions);\n                }\n            },\n            traverseMinorTicksPositions: function (callback, tickOptions) {\n                var this$1 = this;\n                var ref = this.options;\n                var min = ref.min;\n                var max = ref.max;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var ref$1 = this._lineOptions();\n                var lineStart = ref$1.lineStart;\n                var step = ref$1.step;\n                var ref$2 = this;\n                var logMin = ref$2.logMin;\n                var logMax = ref$2.logMax;\n                var start = Math.floor(logMin);\n                for (var power = start; power < logMax; power++) {\n                    var minorOptions = this$1._minorIntervalOptions(power);\n                    for (var idx = tickOptions.skip; idx < minorUnit; idx += tickOptions.step) {\n                        var value = minorOptions.value + idx * minorOptions.minorStep;\n                        if (value > max) {\n                            break;\n                        }\n                        if (value >= min) {\n                            var position = round(lineStart + step * (log(value, base) - logMin), DEFAULT_PRECISION);\n                            callback(position, tickOptions);\n                        }\n                    }\n                }\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var power = Math.ceil(this.logMin + index);\n                var value = Math.pow(this.options.majorUnit, power);\n                var text = this.axisLabelText(value, null, labelOptions);\n                return new AxisLabel(value, text, index, null, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return range.min <= value && value <= range.max;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta);\n                return this.limitRange(range.min, range.max, this.totalMin, this.totalMax, -delta);\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = Math.min(startValue, endValue);\n                var max = Math.max(startValue, endValue);\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            zoomRange: function (delta) {\n                var ref = this;\n                var options = ref.options;\n                var totalMin = ref.totalMin;\n                var totalMax = ref.totalMax;\n                var newRange = this.scaleRange(delta);\n                var min = limitValue(newRange.min, totalMin, totalMax);\n                var max = limitValue(newRange.max, totalMin, totalMax);\n                var base = options.majorUnit;\n                var acceptOptionsRange = max > min && options.min && options.max && round(log(options.max, base) - log(options.min, base), DEFAULT_PRECISION) < 1;\n                var acceptNewRange = !(options.min === totalMin && options.max === totalMax) && round(log(max, base) - log(min, base), DEFAULT_PRECISION) >= 1;\n                if (acceptOptionsRange || acceptNewRange) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            _minorIntervalOptions: function (power) {\n                var ref = this.options;\n                var minorUnit = ref.minorUnit;\n                var base = ref.majorUnit;\n                var value = Math.pow(base, power);\n                var nextValue = Math.pow(base, power + 1);\n                var difference = nextValue - value;\n                var minorStep = difference / minorUnit;\n                return {\n                    value: value,\n                    minorStep: minorStep\n                };\n            },\n            _lineOptions: function () {\n                var ref = this.options;\n                var reverse = ref.reverse;\n                var vertical = ref.vertical;\n                var valueAxis = vertical ? Y : X;\n                var lineBox = this.lineBox();\n                var dir = vertical === reverse ? 1 : -1;\n                var startEdge = dir === 1 ? 1 : 2;\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var step = dir * (lineSize / (this.logMax - this.logMin));\n                var lineStart = lineBox[valueAxis + startEdge];\n                return {\n                    step: step,\n                    lineStart: lineStart,\n                    lineBox: lineBox\n                };\n            }\n        });\n        function initRange(autoMin, autoMax, axisOptions, options) {\n            var min = axisOptions.min;\n            var max = axisOptions.max;\n            if (defined(axisOptions.axisCrossingValue) && axisOptions.axisCrossingValue <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.max)) {\n                max = autoMax;\n            } else if (options.max <= 0) {\n                throwNegativeValuesError();\n            }\n            if (!defined(options.min)) {\n                min = autoMin;\n            } else if (options.min <= 0) {\n                throwNegativeValuesError();\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function autoAxisMin$1(min, max, options) {\n            var base = options.majorUnit;\n            var autoMin = min;\n            if (min <= 0) {\n                autoMin = max <= 1 ? Math.pow(base, -2) : 1;\n            } else if (!options.narrowRange) {\n                autoMin = Math.pow(base, Math.floor(log(min, base)));\n            }\n            return autoMin;\n        }\n        function autoAxisMax$1(max, base) {\n            var logMaxRemainder = round(log(max, base), DEFAULT_PRECISION) % 1;\n            var autoMax;\n            if (max <= 0) {\n                autoMax = base;\n            } else if (logMaxRemainder !== 0 && (logMaxRemainder < 0.3 || logMaxRemainder > 0.9)) {\n                autoMax = Math.pow(base, log(max, base) + 0.2);\n            } else {\n                autoMax = Math.pow(base, Math.ceil(log(max, base)));\n            }\n            return autoMax;\n        }\n        function throwNegativeValuesError() {\n            throw new Error('Non positive values cannot be used for a logarithmic axis');\n        }\n        function log(y, x) {\n            return Math.log(y) / Math.log(x);\n        }\n        setDefaultOptions(LogarithmicAxis, {\n            type: 'log',\n            majorUnit: DEFAULT_MAJOR_UNIT,\n            minorUnit: 1,\n            axisCrossingValue: 1,\n            vertical: true,\n            majorGridLines: {\n                visible: true,\n                width: 1,\n                color: BLACK\n            },\n            zIndex: 1,\n            _deferLabels: true\n        });\n        var GridLinesMixin = {\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var radius = Math.abs(this.box.center().y - altAxis.lineBox().y1);\n                var gridLines = [];\n                var skipMajor = false;\n                var majorAngles, minorAngles;\n                if (options.majorGridLines.visible) {\n                    majorAngles = this.majorGridLineAngles(altAxis);\n                    skipMajor = true;\n                    gridLines = this.renderMajorGridLines(majorAngles, radius, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    minorAngles = this.minorGridLineAngles(altAxis, skipMajor);\n                    append(gridLines, this.renderMinorGridLines(minorAngles, radius, options.minorGridLines, altAxis, skipMajor));\n                }\n                return gridLines;\n            },\n            renderMajorGridLines: function (angles, radius, options) {\n                return this.renderGridLines(angles, radius, options);\n            },\n            renderMinorGridLines: function (angles, radius, options, altAxis, skipMajor) {\n                var radiusCallback = this.radiusCallback && this.radiusCallback(radius, altAxis, skipMajor);\n                return this.renderGridLines(angles, radius, options, radiusCallback);\n            },\n            renderGridLines: function (angles, radius, options, radiusCallback) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var center = this.box.center();\n                var circle = new Circle([\n                    center.x,\n                    center.y\n                ], radius);\n                var container = this.gridLinesVisual();\n                for (var i = 0; i < angles.length; i++) {\n                    var line = new Path(style);\n                    if (radiusCallback) {\n                        circle.radius = radiusCallback(angles[i]);\n                    }\n                    line.moveTo(circle.center).lineTo(circle.pointAt(angles[i] + 180));\n                    container.append(line);\n                }\n                return container.children;\n            },\n            gridLineAngles: function (altAxis, size, skip, step, skipAngles) {\n                var this$1 = this;\n                var divs = this.intervals(size, skip, step, skipAngles);\n                var options = altAxis.options;\n                var altAxisVisible = options.visible && (options.line || {}).visible !== false;\n                return map(divs, function (d) {\n                    var alpha = this$1.intervalAngle(d);\n                    if (!altAxisVisible || alpha !== 90) {\n                        return alpha;\n                    }\n                });\n            }\n        };\n        var RadarCategoryAxis = CategoryAxis.extend({\n            range: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(skip + i * step).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var options = this.options;\n                var categories = options.categories.length;\n                var divCount = categories / size || 1;\n                var divAngle = 360 / divCount;\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                var divs = [];\n                var angle = 0;\n                for (var i = skip; i < divCount; i += step) {\n                    if (options.reverse) {\n                        angle = 360 - i * divAngle;\n                    } else {\n                        angle = i * divAngle;\n                    }\n                    angle = round(angle, COORD_PRECISION) % 360;\n                    if (!(skipAngles && inArray(angle, skipAngles))) {\n                        divs.push(angle);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(1);\n            },\n            minorIntervals: function () {\n                return this.intervals(0.5);\n            },\n            intervalAngle: function (interval) {\n                return (360 + interval + this.options.startAngle) % 360;\n            },\n            majorAngles: function () {\n                var this$1 = this;\n                return map(this.majorIntervals(), function (interval) {\n                    return this$1.intervalAngle(interval);\n                });\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, 1, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var ref = this.options;\n                var minorGridLines = ref.minorGridLines;\n                var majorGridLines = ref.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(1, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, 0.5, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            radiusCallback: function (radius, altAxis, skipMajor) {\n                if (altAxis.options.type !== ARC) {\n                    var minorAngle = rad(360 / (this.options.categories.length * 2));\n                    var minorRadius = Math.cos(minorAngle) * radius;\n                    var majorAngles = this.majorAngles();\n                    var radiusCallback = function (angle) {\n                        if (!skipMajor && inArray(angle, majorAngles)) {\n                            return radius;\n                        }\n                        return minorRadius;\n                    };\n                    return radiusCallback;\n                }\n            },\n            createPlotBands: function () {\n                var this$1 = this;\n                var plotBands = this.options.plotBands || [];\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var slot = this$1.plotBandSlot(band);\n                    var singleSlot = this$1.getSlot(band.from);\n                    var head = band.from - Math.floor(band.from);\n                    slot.startAngle += head * singleSlot.angle;\n                    var tail = Math.ceil(band.to) - band.to;\n                    slot.angle -= (tail + head) * singleSlot.angle;\n                    var ring = ShapeBuilder.current.createRing(slot, {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    });\n                    group.append(ring);\n                }\n                this.appendVisual(group);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to - 1);\n            },\n            getSlot: function (from, to) {\n                var options = this.options;\n                var justified = options.justified;\n                var box = this.box;\n                var divs = this.majorAngles();\n                var totalDivs = divs.length;\n                var slotAngle = 360 / totalDivs;\n                var fromValue = from;\n                if (options.reverse && !justified) {\n                    fromValue = (fromValue + 1) % totalDivs;\n                }\n                fromValue = limitValue(Math.floor(fromValue), 0, totalDivs - 1);\n                var slotStart = divs[fromValue];\n                if (justified) {\n                    slotStart = slotStart - slotAngle / 2;\n                    if (slotStart < 0) {\n                        slotStart += 360;\n                    }\n                }\n                var toValue = limitValue(Math.ceil(to || fromValue), fromValue, totalDivs - 1);\n                var slots = toValue - fromValue + 1;\n                var angle = slotAngle * slots;\n                return new Ring(box.center(), 0, box.height() / 2, slotStart, angle);\n            },\n            slot: function (from, to) {\n                var slot = this.getSlot(from, to);\n                var startAngle = slot.startAngle + 180;\n                var endAngle = startAngle + slot.angle;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            pointCategoryIndex: function (point) {\n                var this$1 = this;\n                var length = this.options.categories.length;\n                var index = null;\n                for (var i = 0; i < length; i++) {\n                    var slot = this$1.getSlot(i);\n                    if (slot.containsPoint(point)) {\n                        index = i;\n                        break;\n                    }\n                }\n                return index;\n            }\n        });\n        setDefaultOptions(RadarCategoryAxis, {\n            startAngle: 90,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: { visible: true },\n            justified: true\n        });\n        deepExtend(RadarCategoryAxis.prototype, GridLinesMixin);\n        var PolarAxis = Axis.extend({\n            init: function (options, chartService) {\n                Axis.fn.init.call(this, options, chartService);\n                var instanceOptions = this.options;\n                instanceOptions.minorUnit = instanceOptions.minorUnit || instanceOptions.majorUnit / 2;\n            },\n            getDivisions: function (stepValue) {\n                return NumericAxis.prototype.getDivisions.call(this, stepValue) - 1;\n            },\n            reflow: function (box) {\n                this.box = box;\n                this.reflowLabels();\n            },\n            reflowLabels: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var labels = ref.labels;\n                var labelOptions = ref.options.labels;\n                var skip = labelOptions.skip || 0;\n                var step = labelOptions.step || 1;\n                var measureBox = new Box();\n                var divs = this.intervals(options.majorUnit, skip, step);\n                for (var i = 0; i < labels.length; i++) {\n                    labels[i].reflow(measureBox);\n                    var labelBox = labels[i].box;\n                    labels[i].reflow(this$1.getSlot(divs[i]).adjacentBox(0, labelBox.width(), labelBox.height()));\n                }\n            },\n            lineBox: function () {\n                return this.box;\n            },\n            intervals: function (size, skipOption, stepOption, skipAngles) {\n                if (skipAngles === void 0) {\n                    skipAngles = false;\n                }\n                var min = this.options.min;\n                var divisions = this.getDivisions(size);\n                var divs = [];\n                var skip = skipOption || 0;\n                var step = stepOption || 1;\n                for (var i = skip; i < divisions; i += step) {\n                    var current = (360 + min + i * size) % 360;\n                    if (!(skipAngles && inArray(current, skipAngles))) {\n                        divs.push(current);\n                    }\n                }\n                return divs;\n            },\n            majorIntervals: function () {\n                return this.intervals(this.options.majorUnit);\n            },\n            minorIntervals: function () {\n                return this.intervals(this.options.minorUnit);\n            },\n            intervalAngle: function (i) {\n                return (540 - i - this.options.startAngle) % 360;\n            },\n            createLine: function () {\n                return [];\n            },\n            majorGridLineAngles: function (altAxis) {\n                var majorGridLines = this.options.majorGridLines;\n                return this.gridLineAngles(altAxis, this.options.majorUnit, majorGridLines.skip, majorGridLines.step);\n            },\n            minorGridLineAngles: function (altAxis, skipMajor) {\n                var options = this.options;\n                var minorGridLines = options.minorGridLines;\n                var majorGridLines = options.majorGridLines;\n                var majorGridLineAngles = skipMajor ? this.intervals(options.majorUnit, majorGridLines.skip, majorGridLines.step) : null;\n                return this.gridLineAngles(altAxis, options.minorUnit, minorGridLines.skip, minorGridLines.step, majorGridLineAngles);\n            },\n            plotBandSlot: function (band) {\n                return this.getSlot(band.from, band.to);\n            },\n            getSlot: function (a, b) {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var startAngle = options.startAngle;\n                var start = limitValue(a, options.min, options.max);\n                var end = limitValue(b || start, start, options.max);\n                if (options.reverse) {\n                    start *= -1;\n                    end *= -1;\n                }\n                start = (540 - start - startAngle) % 360;\n                end = (540 - end - startAngle) % 360;\n                if (end < start) {\n                    var tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n                return new Ring(box.center(), 0, box.height() / 2, start, end - start);\n            },\n            slot: function (from, to) {\n                if (to === void 0) {\n                    to = from;\n                }\n                var options = this.options;\n                var start = 360 - options.startAngle;\n                var slot = this.getSlot(from, to);\n                var min = Math.min(from, to);\n                var max = Math.max(from, to);\n                var startAngle, endAngle;\n                if (options.reverse) {\n                    startAngle = min;\n                    endAngle = max;\n                } else {\n                    startAngle = 360 - max;\n                    endAngle = 360 - min;\n                }\n                startAngle = (startAngle + start) % 360;\n                endAngle = (endAngle + start) % 360;\n                return new geometry.Arc([\n                    slot.center.x,\n                    slot.center.y\n                ], {\n                    startAngle: startAngle,\n                    endAngle: endAngle,\n                    radiusX: slot.radius,\n                    radiusY: slot.radius\n                });\n            },\n            getValue: function (point) {\n                var options = this.options;\n                var center = this.box.center();\n                var dx = point.x - center.x;\n                var dy = point.y - center.y;\n                var theta = Math.round(deg(Math.atan2(dy, dx)));\n                var start = options.startAngle;\n                if (!options.reverse) {\n                    theta *= -1;\n                    start *= -1;\n                }\n                return (theta + start + 360) % 360;\n            },\n            valueRange: function () {\n                return {\n                    min: 0,\n                    max: Math.PI * 2\n                };\n            }\n        });\n        setDefaultOptions(PolarAxis, {\n            type: 'polar',\n            startAngle: 0,\n            reverse: false,\n            majorUnit: 60,\n            min: 0,\n            max: 360,\n            labels: { margin: getSpacing(10) },\n            majorGridLines: {\n                color: BLACK,\n                visible: true,\n                width: 1\n            },\n            minorGridLines: { color: '#aaa' }\n        });\n        deepExtend(PolarAxis.prototype, GridLinesMixin, {\n            createPlotBands: RadarCategoryAxis.prototype.createPlotBands,\n            majorAngles: RadarCategoryAxis.prototype.majorAngles,\n            range: NumericAxis.prototype.range,\n            labelsCount: NumericAxis.prototype.labelsCount,\n            createAxisLabel: NumericAxis.prototype.createAxisLabel\n        });\n        var RadarNumericAxisMixin = {\n            options: { majorGridLines: { visible: true } },\n            createPlotBands: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var type = ref.majorGridLines.type;\n                var plotBands = ref.plotBands;\n                if (plotBands === void 0) {\n                    plotBands = [];\n                }\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var group = this._plotbandGroup = new Group({ zIndex: -1 });\n                for (var i = 0; i < plotBands.length; i++) {\n                    var band = plotBands[i];\n                    var bandStyle = {\n                        fill: {\n                            color: band.color,\n                            opacity: band.opacity\n                        },\n                        stroke: { opacity: band.opacity }\n                    };\n                    var slot = this$1.getSlot(band.from, band.to, true);\n                    var ring = new Ring(center, center.y - slot.y2, center.y - slot.y1, 0, 360);\n                    var shape = void 0;\n                    if (type === ARC) {\n                        shape = ShapeBuilder.current.createRing(ring, bandStyle);\n                    } else {\n                        shape = Path.fromPoints(this$1.plotBandPoints(ring, majorAngles), bandStyle).close();\n                    }\n                    group.append(shape);\n                }\n                this.appendVisual(group);\n            },\n            plotBandPoints: function (ring, angles) {\n                var innerPoints = [];\n                var outerPoints = [];\n                var center = [\n                    ring.center.x,\n                    ring.center.y\n                ];\n                var innerCircle = new Circle(center, ring.innerRadius);\n                var outerCircle = new Circle(center, ring.radius);\n                for (var i = 0; i < angles.length; i++) {\n                    innerPoints.push(innerCircle.pointAt(angles[i] + 180));\n                    outerPoints.push(outerCircle.pointAt(angles[i] + 180));\n                }\n                innerPoints.reverse();\n                innerPoints.push(innerPoints[0]);\n                outerPoints.push(outerPoints[0]);\n                return outerPoints.concat(innerPoints);\n            },\n            createGridLines: function (altAxis) {\n                var options = this.options;\n                var majorTicks = this.radarMajorGridLinePositions();\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var gridLines = [];\n                if (options.majorGridLines.visible) {\n                    gridLines = this.renderGridLines(center, majorTicks, majorAngles, options.majorGridLines);\n                }\n                if (options.minorGridLines.visible) {\n                    var minorTicks = this.radarMinorGridLinePositions();\n                    append(gridLines, this.renderGridLines(center, minorTicks, majorAngles, options.minorGridLines));\n                }\n                return gridLines;\n            },\n            renderGridLines: function (center, ticks, angles, options) {\n                var style = {\n                    stroke: {\n                        width: options.width,\n                        color: options.color,\n                        dashType: options.dashType\n                    }\n                };\n                var skip = options.skip;\n                if (skip === void 0) {\n                    skip = 0;\n                }\n                var step = options.step;\n                if (step === void 0) {\n                    step = 0;\n                }\n                var container = this.gridLinesVisual();\n                for (var tickIx = skip; tickIx < ticks.length; tickIx += step) {\n                    var tickRadius = center.y - ticks[tickIx];\n                    if (tickRadius > 0) {\n                        var circle = new Circle([\n                            center.x,\n                            center.y\n                        ], tickRadius);\n                        if (options.type === ARC) {\n                            container.append(new drawing.Circle(circle, style));\n                        } else {\n                            var line = new Path(style);\n                            for (var angleIx = 0; angleIx < angles.length; angleIx++) {\n                                line.lineTo(circle.pointAt(angles[angleIx] + 180));\n                            }\n                            line.close();\n                            container.append(line);\n                        }\n                    }\n                }\n                return container.children;\n            },\n            getValue: function (point) {\n                var lineBox = this.lineBox();\n                var altAxis = this.plotArea.polarAxis;\n                var majorAngles = altAxis.majorAngles();\n                var center = altAxis.box.center();\n                var radius = point.distanceTo(center);\n                var distance = radius;\n                if (this.options.majorGridLines.type !== ARC && majorAngles.length > 1) {\n                    var dx = point.x - center.x;\n                    var dy = point.y - center.y;\n                    var theta = (deg(Math.atan2(dy, dx)) + 540) % 360;\n                    majorAngles.sort(function (a, b) {\n                        return angularDistance(a, theta) - angularDistance(b, theta);\n                    });\n                    var midAngle = angularDistance(majorAngles[0], majorAngles[1]) / 2;\n                    var alpha = angularDistance(theta, majorAngles[0]);\n                    var gamma = 90 - midAngle;\n                    var beta = 180 - alpha - gamma;\n                    distance = radius * (Math.sin(rad(beta)) / Math.sin(rad(gamma)));\n                }\n                return this.axisType().prototype.getValue.call(this, new Point(lineBox.x1, lineBox.y2 - distance));\n            }\n        };\n        function angularDistance(a, b) {\n            return 180 - Math.abs(Math.abs(a - b) - 180);\n        }\n        var RadarNumericAxis = NumericAxis.extend({\n            radarMajorGridLinePositions: function () {\n                return this.getTickPositions(this.options.majorUnit);\n            },\n            radarMinorGridLinePositions: function () {\n                var options = this.options;\n                var minorSkipStep = 0;\n                if (options.majorGridLines.visible) {\n                    minorSkipStep = options.majorUnit;\n                }\n                return this.getTickPositions(options.minorUnit, minorSkipStep);\n            },\n            axisType: function () {\n                return NumericAxis;\n            }\n        });\n        deepExtend(RadarNumericAxis.prototype, RadarNumericAxisMixin);\n        var RadarLogarithmicAxis = LogarithmicAxis.extend({\n            radarMajorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMajorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.majorGridLines);\n                return positions;\n            },\n            radarMinorGridLinePositions: function () {\n                var positions = [];\n                this.traverseMinorTicksPositions(function (position) {\n                    positions.push(position);\n                }, this.options.minorGridLines);\n                return positions;\n            },\n            axisType: function () {\n                return LogarithmicAxis;\n            }\n        });\n        deepExtend(RadarLogarithmicAxis.prototype, RadarNumericAxisMixin);\n        var WEIGHT = 0.333;\n        var EXTREMUM_ALLOWED_DEVIATION = 0.01;\n        var CurveProcessor = Class.extend({\n            init: function (closed) {\n                this.closed = closed;\n            },\n            process: function (dataPoints) {\n                var this$1 = this;\n                var points = dataPoints.slice(0);\n                var segments = [];\n                var closed = this.closed;\n                var length = points.length;\n                if (length > 2) {\n                    this.removeDuplicates(0, points);\n                    length = points.length;\n                }\n                if (length < 2 || length === 2 && points[0].equals(points[1])) {\n                    return segments;\n                }\n                var p0 = points[0];\n                var p1 = points[1];\n                var p2 = points[2];\n                segments.push(new Segment(p0));\n                while (p0.equals(points[length - 1])) {\n                    closed = true;\n                    points.pop();\n                    length--;\n                }\n                if (length === 2) {\n                    var tangent = this.tangent(p0, p1, X, Y);\n                    last(segments).controlOut(this.firstControlPoint(tangent, p0, p1, X, Y));\n                    segments.push(new Segment(p1, this.secondControlPoint(tangent, p0, p1, X, Y)));\n                    return segments;\n                }\n                var initialControlPoint, lastControlPoint;\n                if (closed) {\n                    p0 = points[length - 1];\n                    p1 = points[0];\n                    p2 = points[1];\n                    var controlPoints = this.controlPoints(p0, p1, p2);\n                    initialControlPoint = controlPoints[1];\n                    lastControlPoint = controlPoints[0];\n                } else {\n                    var tangent$1 = this.tangent(p0, p1, X, Y);\n                    initialControlPoint = this.firstControlPoint(tangent$1, p0, p1, X, Y);\n                }\n                var cp0 = initialControlPoint;\n                for (var idx = 0; idx <= length - 3; idx++) {\n                    this$1.removeDuplicates(idx, points);\n                    length = points.length;\n                    if (idx + 3 <= length) {\n                        p0 = points[idx];\n                        p1 = points[idx + 1];\n                        p2 = points[idx + 2];\n                        var controlPoints$1 = this$1.controlPoints(p0, p1, p2);\n                        last(segments).controlOut(cp0);\n                        cp0 = controlPoints$1[1];\n                        var cp1 = controlPoints$1[0];\n                        segments.push(new Segment(p1, cp1));\n                    }\n                }\n                if (closed) {\n                    p0 = points[length - 2];\n                    p1 = points[length - 1];\n                    p2 = points[0];\n                    var controlPoints$2 = this.controlPoints(p0, p1, p2);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p1, controlPoints$2[0]));\n                    last(segments).controlOut(controlPoints$2[1]);\n                    segments.push(new Segment(p2, lastControlPoint));\n                } else {\n                    var tangent$2 = this.tangent(p1, p2, X, Y);\n                    last(segments).controlOut(cp0);\n                    segments.push(new Segment(p2, this.secondControlPoint(tangent$2, p1, p2, X, Y)));\n                }\n                return segments;\n            },\n            removeDuplicates: function (idx, points) {\n                while (points[idx + 1] && (points[idx].equals(points[idx + 1]) || points[idx + 1].equals(points[idx + 2]))) {\n                    points.splice(idx + 1, 1);\n                }\n            },\n            invertAxis: function (p0, p1, p2) {\n                var invertAxis = false;\n                if (p0.x === p1.x) {\n                    invertAxis = true;\n                } else if (p1.x === p2.x) {\n                    if (p1.y < p2.y && p0.y <= p1.y || p2.y < p1.y && p1.y <= p0.y) {\n                        invertAxis = true;\n                    }\n                } else {\n                    var fn = this.lineFunction(p0, p1);\n                    var y2 = this.calculateFunction(fn, p2.x);\n                    if (!(p0.y <= p1.y && p2.y <= y2) && !(p1.y <= p0.y && p2.y >= y2)) {\n                        invertAxis = true;\n                    }\n                }\n                return invertAxis;\n            },\n            isLine: function (p0, p1, p2) {\n                var fn = this.lineFunction(p0, p1);\n                var y2 = this.calculateFunction(fn, p2.x);\n                return p0.x === p1.x && p1.x === p2.x || round(y2, 1) === round(p2.y, 1);\n            },\n            lineFunction: function (p1, p2) {\n                var a = (p2.y - p1.y) / (p2.x - p1.x);\n                var b = p1.y - a * p1.x;\n                return [\n                    b,\n                    a\n                ];\n            },\n            controlPoints: function (p0, p1, p2) {\n                var xField = X;\n                var yField = Y;\n                var restrict = false;\n                var switchOrientation = false;\n                var tangent;\n                if (this.isLine(p0, p1, p2)) {\n                    tangent = this.tangent(p0, p1, X, Y);\n                } else {\n                    var monotonic = {\n                        x: this.isMonotonicByField(p0, p1, p2, X),\n                        y: this.isMonotonicByField(p0, p1, p2, Y)\n                    };\n                    if (monotonic.x && monotonic.y) {\n                        tangent = this.tangent(p0, p2, X, Y);\n                        restrict = true;\n                    } else {\n                        if (this.invertAxis(p0, p1, p2)) {\n                            xField = Y;\n                            yField = X;\n                        }\n                        if (monotonic[xField]) {\n                            tangent = 0;\n                        } else {\n                            var sign;\n                            if (p2[yField] < p0[yField] && p0[yField] <= p1[yField] || p0[yField] < p2[yField] && p1[yField] <= p0[yField]) {\n                                sign = numberSign((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));\n                            } else {\n                                sign = -numberSign((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));\n                            }\n                            tangent = EXTREMUM_ALLOWED_DEVIATION * sign;\n                            switchOrientation = true;\n                        }\n                    }\n                }\n                var secondControlPoint = this.secondControlPoint(tangent, p0, p1, xField, yField);\n                if (switchOrientation) {\n                    var oldXField = xField;\n                    xField = yField;\n                    yField = oldXField;\n                }\n                var firstControlPoint = this.firstControlPoint(tangent, p1, p2, xField, yField);\n                if (restrict) {\n                    this.restrictControlPoint(p0, p1, secondControlPoint, tangent);\n                    this.restrictControlPoint(p1, p2, firstControlPoint, tangent);\n                }\n                return [\n                    secondControlPoint,\n                    firstControlPoint\n                ];\n            },\n            restrictControlPoint: function (p1, p2, cp, tangent) {\n                if (p1.y < p2.y) {\n                    if (p2.y < cp.y) {\n                        cp.x = p1.x + (p2.y - p1.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (cp.y < p1.y) {\n                        cp.x = p2.x - (p2.y - p1.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                } else {\n                    if (cp.y < p2.y) {\n                        cp.x = p1.x - (p1.y - p2.y) / tangent;\n                        cp.y = p2.y;\n                    } else if (p1.y < cp.y) {\n                        cp.x = p2.x + (p1.y - p2.y) / tangent;\n                        cp.y = p1.y;\n                    }\n                }\n            },\n            tangent: function (p0, p1, xField, yField) {\n                var x = p1[xField] - p0[xField];\n                var y = p1[yField] - p0[yField];\n                var tangent;\n                if (x === 0) {\n                    tangent = 0;\n                } else {\n                    tangent = y / x;\n                }\n                return tangent;\n            },\n            isMonotonicByField: function (p0, p1, p2, field) {\n                return p2[field] > p1[field] && p1[field] > p0[field] || p2[field] < p1[field] && p1[field] < p0[field];\n            },\n            firstControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t1 + distance, p0[yField] + distance * tangent, xField, yField);\n            },\n            secondControlPoint: function (tangent, p0, p3, xField, yField) {\n                var t1 = p0[xField];\n                var t2 = p3[xField];\n                var distance = (t2 - t1) * WEIGHT;\n                return this.point(t2 - distance, p3[yField] - distance * tangent, xField, yField);\n            },\n            point: function (xValue, yValue, xField, yField) {\n                var controlPoint = new geometry.Point();\n                controlPoint[xField] = xValue;\n                controlPoint[yField] = yValue;\n                return controlPoint;\n            },\n            calculateFunction: function (fn, x) {\n                var length = fn.length;\n                var result = 0;\n                for (var i = 0; i < length; i++) {\n                    result += Math.pow(x, i) * fn[i];\n                }\n                return result;\n            }\n        });\n        function numberSign(value) {\n            return value <= 0 ? -1 : 1;\n        }\n        dataviz.Gradients = GRADIENTS;\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            services: services,\n            autoMajorUnit: autoMajorUnit,\n            Point: Point,\n            Box: Box,\n            Ring: Ring,\n            Sector: Sector,\n            ShapeBuilder: ShapeBuilder,\n            ShapeElement: ShapeElement,\n            ChartElement: ChartElement,\n            BoxElement: BoxElement,\n            RootElement: RootElement,\n            FloatElement: FloatElement,\n            Text: Text,\n            TextBox: TextBox,\n            Title: Title,\n            AxisLabel: AxisLabel,\n            Axis: Axis,\n            Note: Note,\n            CategoryAxis: CategoryAxis,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            NumericAxis: NumericAxis,\n            LogarithmicAxis: LogarithmicAxis,\n            PolarAxis: PolarAxis,\n            RadarCategoryAxis: RadarCategoryAxis,\n            RadarNumericAxis: RadarNumericAxis,\n            RadarLogarithmicAxis: RadarLogarithmicAxis,\n            CurveProcessor: CurveProcessor,\n            rectToBox: rectToBox,\n            addClass: addClass,\n            removeClass: removeClass,\n            alignPathToPixel: alignPathToPixel,\n            clockwise: clockwise,\n            deepExtend: deepExtend,\n            elementStyles: elementStyles,\n            getSpacing: getSpacing,\n            getter: __common_getter_js,\n            grep: grep,\n            hasClasses: hasClasses,\n            inArray: inArray,\n            interpolateValue: interpolateValue,\n            InstanceObserver: InstanceObserver,\n            isArray: isArray,\n            isFunction: isFunction,\n            isNumber: isNumber,\n            isObject: isObject,\n            isString: isString,\n            map: map,\n            mousewheelDelta: mousewheelDelta,\n            FontLoader: FontLoader,\n            setDefaultOptions: setDefaultOptions,\n            sparseArrayLimits: sparseArrayLimits,\n            styleValue: styleValue,\n            append: append,\n            bindEvents: bindEvents,\n            Class: Class,\n            defined: defined,\n            deg: deg,\n            elementOffset: elementOffset,\n            elementSize: elementSize,\n            eventElement: eventElement,\n            eventCoordinates: eventCoordinates,\n            last: last,\n            limitValue: limitValue,\n            logToConsole: kendo.logToConsole,\n            objectKey: objectKey,\n            rad: rad,\n            round: round,\n            unbindEvents: unbindEvents,\n            valueOrDefault: valueOrDefault,\n            absoluteDateDiff: absoluteDateDiff,\n            addDuration: addDuration,\n            addTicks: addTicks,\n            ceilDate: ceilDate,\n            dateComparer: dateComparer,\n            dateDiff: dateDiff,\n            dateEquals: dateEquals,\n            dateIndex: dateIndex,\n            duration: duration,\n            floorDate: floorDate,\n            lteDateIndex: lteDateIndex,\n            startOfWeek: startOfWeek,\n            toDate: toDate,\n            parseDate: parseDate,\n            parseDates: parseDates,\n            toTime: toTime\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/core/core', ['dataviz/core/kendo-core'], f);\n}(function () {\n    (function ($) {\n        var dataviz = kendo.dataviz;\n        var services = dataviz.services;\n        var draw = kendo.drawing;\n        dataviz.ExportMixin = {\n            extend: function (proto, skipLegacy) {\n                if (!proto.exportVisual) {\n                    throw new Error('Mixin target has no exportVisual method defined.');\n                }\n                proto.exportSVG = this.exportSVG;\n                proto.exportImage = this.exportImage;\n                proto.exportPDF = this.exportPDF;\n                if (!skipLegacy) {\n                    proto.svg = this.svg;\n                    proto.imageDataURL = this.imageDataURL;\n                }\n            },\n            exportSVG: function (options) {\n                return draw.exportSVG(this.exportVisual(), options);\n            },\n            exportImage: function (options) {\n                return draw.exportImage(this.exportVisual(options), options);\n            },\n            exportPDF: function (options) {\n                return draw.exportPDF(this.exportVisual(), options);\n            },\n            svg: function () {\n                if (draw.svg.Surface) {\n                    return draw.svg.exportGroup(this.exportVisual());\n                } else {\n                    throw new Error('SVG Export failed. Unable to export instantiate kendo.drawing.svg.Surface');\n                }\n            },\n            imageDataURL: function () {\n                if (!kendo.support.canvas) {\n                    return null;\n                }\n                if (draw.canvas.Surface) {\n                    var container = $('<div />').css({\n                        display: 'none',\n                        width: this.element.width(),\n                        height: this.element.height()\n                    }).appendTo(document.body);\n                    var surface = new draw.canvas.Surface(container[0]);\n                    surface.draw(this.exportVisual());\n                    var image = surface._rootElement.toDataURL();\n                    surface.destroy();\n                    container.remove();\n                    return image;\n                } else {\n                    throw new Error('Image Export failed. Unable to export instantiate kendo.drawing.canvas.Surface');\n                }\n            }\n        };\n        services.IntlService.register({\n            format: function (format) {\n                return kendo.format.apply(null, [format].concat(Array.prototype.slice.call(arguments, 1)));\n            },\n            toString: kendo.toString,\n            parseDate: kendo.parseDate\n        });\n        services.TemplateService.register({ compile: kendo.template });\n        dataviz.Point2D = dataviz.Point;\n        dataviz.Box2D = dataviz.Box;\n        dataviz.mwDelta = function (e) {\n            return dataviz.mousewheelDelta(e.originalEvent);\n        };\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.core', [\n        'dataviz/core/kendo-core',\n        'dataviz/core/core'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.core',\n        name: 'Core',\n        description: 'The DataViz core functions',\n        category: 'dataviz',\n        depends: [\n            'core',\n            'drawing'\n        ],\n        hidden: true\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}